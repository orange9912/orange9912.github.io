<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>orange&#39;s blog</title>
        <subtitle>橙子的博客</subtitle>
        <icon>http://zyczxq.com/images/favicon.ico</icon>
        <link>http://zyczxq.com</link>
        <author>
          <name>orange</name>
        </author>
        <description>博客</description>
        <language>zh-CN</language>
        <pubDate>Sat, 15 Jun 2024 18:38:52 +0800</pubDate>
        <lastBuildDate>Sat, 15 Jun 2024 18:38:52 +0800</lastBuildDate>
        <category term="个人博客" />
        <item>
            <guid isPermalink="true">http://zyczxq.com/2024/06/15/work/webview-performance/</guid>
            <title>H5体验优化的实践与总结</title>
            <link>http://zyczxq.com/2024/06/15/work/webview-performance/</link>
            <category term="工作沉淀" scheme="http://zyczxq.com/categories/work/" />
            <pubDate>Sat, 15 Jun 2024 18:38:52 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;版权赛事详情页的体验优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版权赛事详情页的体验优化&#34;&gt;#&lt;/a&gt; 版权赛事详情页的体验优化&lt;/h1&gt;
&lt;p&gt;优化时间：&lt;strong&gt;2024.3.20&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;目前在职主要负责的内容是抖音等宿主的&lt;strong&gt;端内 H5/Lynx&lt;/strong&gt;（字节内部的高效跨平台框架）页面的编写&lt;/p&gt;
&lt;p&gt;其中我负责的一个页面：&lt;strong&gt;赛事详情页&lt;/strong&gt;，是抖音游戏（游戏赛事直播间、赛事搜索）赛事的重要信息呈现页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里补图：直播间场景与搜索场景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;live_scene.jpg&#34; alt=&#34;live_scene&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;search_scene.jpg&#34; alt=&#34;search_scene&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;example_shot.jpg&#34; alt=&#34;example_shot&#34; /&gt;&lt;/p&gt;
&lt;p&gt;不同的版权赛事厂商会提供接口返回我们指定的数据结构，实现赛事信息的呈现。&lt;/p&gt;
&lt;p&gt;以 PEL 春季赛为例，在 2.29-3.3 的四天比赛中，日均看播 UV 超 1xx 万，而页面的峰值 PV 也达 1xx 万&lt;/p&gt;
&lt;p&gt;但是页面的首屏性能颇为不佳（尤其是在 Android 机型下）&lt;/p&gt;
&lt;h2 id=&#34;性能现状&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#性能现状&#34;&gt;#&lt;/a&gt; 性能现状&lt;/h2&gt;
&lt;p&gt;我取了一段比赛进行时（访问高峰期的时间范围）的性能数据作为基准样本，分析 ActualFMP、Load 事件、秒开绿&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ActualFMP 定义：&lt;strong&gt;接口返回时间 - window.performance.timing.navigationStart&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这个性能指标接近于 LCP，在此页面中接近于真实的用户看到有意义内容的时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;线上统计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线上统计&#34;&gt;#&lt;/a&gt; 线上统计&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标类别&lt;/th&gt;
&lt;th&gt;统计分位&lt;/th&gt;
&lt;th&gt;表现&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ActualFMP&lt;/td&gt;
&lt;td&gt;90 分位&lt;/td&gt;
&lt;td&gt;iOS：基本低于 1s，Android：3.3s～3.5s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ActualFMP&lt;/td&gt;
&lt;td&gt;50 分位&lt;/td&gt;
&lt;td&gt;iOS：300ms 左右，Android： 2s 左右&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Load&lt;/td&gt;
&lt;td&gt;90 分位&lt;/td&gt;
&lt;td&gt;iOS：500ms 左右，Android：2.75s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Load&lt;/td&gt;
&lt;td&gt;50 分位&lt;/td&gt;
&lt;td&gt;iOS：100ms 左右，Android：1.45s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;秒开率（取 TotalActualFMP≤1s 占总量的比值，该时间相比 ActualFMP 要多上一个容器初始化时间）&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;iOS：85.48%，Android：22%。整体：60%&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;线下具体分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线下具体分析&#34;&gt;#&lt;/a&gt; 线下具体分析&lt;/h3&gt;
&lt;p&gt;以我手上的 Android 测试机为例，将网络限制至条件下述进行测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10Mb/s 的上传 &amp;amp; 下载&lt;/li&gt;
&lt;li&gt;40ms 响应时间&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标&lt;/th&gt;
&lt;th&gt;timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DCL（DOM Content Loaded）&lt;/td&gt;
&lt;td&gt;1627ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FCP（First Contentful Paint）&lt;/td&gt;
&lt;td&gt;1668ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Load（资源加载完毕）&lt;/td&gt;
&lt;td&gt;1675.9ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LCP（Largest Contentful Paint）&lt;/td&gt;
&lt;td&gt;2080ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;perf_analyze.jpg&#34; alt=&#34;分析&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结论&#34;&gt;#&lt;/a&gt; 结论&lt;/h3&gt;
&lt;p&gt;瓶颈：主 js 模块的大小过大，加载 js 资源时间过长。&lt;/p&gt;
&lt;p&gt;浏览器在此先是加载 html，然后从 html 中拉资源，并行加载 css 样式及必要的 js 模块，这些模块大小共计&lt;strong&gt; 895kb&lt;/strong&gt;，其中主 js 模块花了 1.06 秒进行加载（到 1390ms 时刻），然后解析又使用了 100ms 左右。&lt;/p&gt;
&lt;h2 id=&#34;优化思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化思路&#34;&gt;#&lt;/a&gt; 优化思路&lt;/h2&gt;
&lt;p&gt;现有的端内 H5 优化手段文章已经非常多了，这里记录一些我调研到总结手段的思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;缓存&lt;/strong&gt;：离线包（优化前已使用）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前置&lt;/strong&gt;：数据预取（prefetch）、资源预加载（html preload）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简化&lt;/strong&gt;：首屏代码、非首屏模块动态加载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;拆分&lt;/strong&gt;：主 js、依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实践&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实践&#34;&gt;#&lt;/a&gt; 实践&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;接入 prefetch：经验上看能优化 100-200ms&lt;/li&gt;
&lt;li&gt;拆分依赖：Parsed size 降低了 120K 左右，主 js 模块拆分了多个 chunk，最大的降至 300K&lt;/li&gt;
&lt;li&gt;一些代码的优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;优化效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化效果&#34;&gt;#&lt;/a&gt; 优化效果&lt;/h3&gt;
&lt;p&gt;在线包、离线包体积均降了 10%（374K -&amp;gt; 339K）&lt;/p&gt;
&lt;p&gt;数据预取下首屏直出效果更强、几乎看不见 loading&lt;/p&gt;
&lt;p&gt;以下为&lt;strong&gt;三月底统计数据&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;场景&lt;/th&gt;
&lt;th&gt;图&lt;/th&gt;
&lt;th&gt;效果&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;普通搜索入口 (ActualFMP 90 分位)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Android：1.29s =&amp;gt; 1.03s (&lt;strong&gt;-20%&lt;/strong&gt;)。iOS：838ms =&amp;gt; 529ms（&lt;strong&gt;-36.9%&lt;/strong&gt;）。整体：1145ms =&amp;gt; 879.8ms (&lt;strong&gt;-23.1%&lt;/strong&gt;)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;直播间入口（ActualFMP 90 分位）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Android：3.02s =&amp;gt; 2.28s (-24.5%)。iOS: 864ms =&amp;gt; 928ms (+0.07%)，整体：2.7s =&amp;gt; 2.064s (&lt;strong&gt;-23.5%&lt;/strong&gt;)&lt;/td&gt;
&lt;td&gt;此场景较卡，因为位于进房，许多初始化逻辑，手机性能差的用户时间会表现的非常明显&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;秒开率（整体）：60% =&amp;gt; 78.45%&lt;strong&gt;（+30.75%）&lt;/strong&gt;，六月初已接近 80%&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更多&#34;&gt;#&lt;/a&gt; 更多...&lt;/h2&gt;
&lt;p&gt;经过日常写代码的注意，其他负责的 H5 秒开率也基本达到了 80% 以上&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2024/04/16/Node/node-trial/</guid>
            <title>Node实践1</title>
            <link>http://zyczxq.com/2024/04/16/Node/node-trial/</link>
            <category term="Node" scheme="http://zyczxq.com/categories/Node/" />
            <pubDate>Tue, 16 Apr 2024 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;用node帮女朋友生成报告单&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用node帮女朋友生成报告单&#34;&gt;#&lt;/a&gt; 用 node 帮女朋友生成报告单&lt;/h1&gt;
&lt;h2 id=&#34;背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;女朋友是医学生， 平时需要在医院里实习。最近老师给了她一个任务：从一个调查问卷里导出结果表（一个 excel 文件），并且把每个人的结果填写到特定的一个模版报告单。&lt;/p&gt;
&lt;p&gt;但是这个结果有几百个人（意味着要复制黏贴上千次），重复无意义且繁琐的工作，严重影响了与男朋友聊天的时间。&lt;/p&gt;
&lt;p&gt;身为男朋友的我怎能袖手旁观，重复工作就应该交给机器！&lt;/p&gt;
&lt;p&gt;花费了大概一个下午的时间，完成了一个 node 小脚本，我女朋友只需要编辑好模版插值的位置，导入结果 excel，每个人的结果文件就会在数秒内自动生成，已完成交付。&lt;/p&gt;
&lt;h2 id=&#34;需求点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需求点&#34;&gt;#&lt;/a&gt; 需求点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;表格的识别&lt;/li&gt;
&lt;li&gt;word 模板的识别&lt;/li&gt;
&lt;li&gt;特定列的结果要加以计算判断并输出最终医嘱&lt;/li&gt;
&lt;li&gt;文件名称要根据每个人的名字生成&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析&#34;&gt;#&lt;/a&gt; 分析&lt;/h2&gt;
&lt;h3 id=&#34;表格的解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表格的解析&#34;&gt;#&lt;/a&gt; 表格的解析&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;exceljs&lt;/code&gt;  这个库进行 excel 的解析。这个库挺强大，可以读取、操作并写入数据和样式到 xlsx 文件，号称一个一个 Excel 电子表格文件逆向工程项目。&lt;/p&gt;
&lt;h3 id=&#34;模板word文件的识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模板word文件的识别&#34;&gt;#&lt;/a&gt; 模板 word 文件的识别&lt;/h3&gt;
&lt;p&gt;这里文件的识别说难也不难，快速调研之后发现，其实 Word 文件基本都遵循一个标准进行存储： &lt;code&gt;Microsoft Office Open XML标准&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;这个标准是用于描述和存储电子文档，由 &lt;code&gt;Ecma International&lt;/code&gt; （欧洲计算机制造商协会）管理和维护的&lt;/p&gt;
&lt;p&gt;而 XML 和 HTML 一样都是常用的标记语言，XML 更多用于数据交换。&lt;/p&gt;
&lt;p&gt;而 docx 文件其实本质上就是一个压缩包，只要把后缀改成 zip 并解压缩，就可以看到这些文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;node-trial.png&#34; alt=&#34;lifecycle&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;word/document.xml&lt;/code&gt;  中存放了该 docx 文档的具体内容，我们只要修改这一部分，最终再写回成 &lt;code&gt;zip&lt;/code&gt;  文件并改扩展名为 &lt;code&gt;docx&lt;/code&gt; ，即可实现根据模版文件输出对应例子。&lt;/p&gt;
&lt;h2 id=&#34;流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流程&#34;&gt;#&lt;/a&gt; 流程&lt;/h2&gt;
&lt;p&gt;搞定了以上问题，就可以开始编写代码了，代码的工作流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;准备一个 excel 表，以及 word 模版&lt;/li&gt;
&lt;li&gt;将 word 模版中需要将数据插值的地方，填写上约定内容，用于正则匹配识别。
&lt;ol&gt;
&lt;li&gt;这里我写了 %${X}%（其中 X 为 Excel 表格对应的列）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;读取模版 excel，解析表头与内容&lt;/li&gt;
&lt;li&gt;使用 admzip，把模版当作 zip 处理，并读取 &lt;code&gt;document.xml&lt;/code&gt;  的内容&lt;/li&gt;
&lt;li&gt;使用正则匹配模版内容，读取所有需要插值的地方。&lt;/li&gt;
&lt;li&gt;针对 excel 内容的每一行，遍历：
&lt;ol&gt;
&lt;li&gt;复制一份模版文件&lt;/li&gt;
&lt;li&gt;根据需要插值的地方，读取对应的列&lt;/li&gt;
&lt;li&gt;（可选）针对特定的列做一些计算转化，例如回答人的生日计算成年龄填入&lt;/li&gt;
&lt;li&gt;批量替换，原地修改。&lt;/li&gt;
&lt;li&gt;写入到目标文件夹，并将扩展名更改成 &lt;code&gt;docx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码&#34;&gt;#&lt;/a&gt; 代码&lt;/h2&gt;
&lt;p&gt;读取 excel：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;parseExcel&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; workbook &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Exceljs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Workbook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 此处省略使用 inquirer 命令行交互的指定文件路径录取。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; inputFile &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; workbook&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xlsx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get__dirname&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; destFile&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; basicSheet &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; inputFile&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWorksheet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;指定sheet&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 读取表内容，首行为表头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; basicSheetContent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; basicSheet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRows&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; basicSheet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rowCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; basicSheetContent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;读取模版并解析：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;readTemplateAndParse&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; templateZip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AdmZip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;目标文件路径&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; templateContentXML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; templateZip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsText&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;word/document.xml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; originColArr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; templateContentXML&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;%[A-Z]+%&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; colArr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; originColArr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; colArr&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;遍历写入：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;generateResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;sheetContent&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; col&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 先 copy 一份&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; fs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;copyFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      templateFileName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      destFileName&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 先拷贝一份，然后在这一份上作修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; zip&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    zip &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AdmZip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;destFileName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;解析文件错误&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; basicSheetContent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;parseExcel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	basicSheetContent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;contentXML&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; string &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; zip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsText&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;word/document.xml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; cols &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;readTemplateAndParse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; cols&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	    &lt;span class=&#34;token comment&#34;&gt;// 计算属性取值过程省略&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	  contentXML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; contentXML&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;cols&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; computeValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; zip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;word/document.xml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Buffer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;contentXML&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 写入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; zip&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeZip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;destFileName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; fs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rename&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;descFileName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; descDocx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;问题点卡点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题点卡点&#34;&gt;#&lt;/a&gt; 问题点 / 卡点&lt;/h2&gt;
&lt;h3 id=&#34;esmts的选用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#esmts的选用&#34;&gt;#&lt;/a&gt; ESM+TS 的选用&lt;/h3&gt;
&lt;p&gt;一开始在选择是使用 esm 还是 cjs 规范写时，选择了写的更顺手的 esm 规范。&lt;/p&gt;
&lt;p&gt;但是很快就遇到一些问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;esm 加载 cjs 只能整体加载，使用 &lt;code&gt;import m from &#39;xxx.cjs&#39;&lt;/code&gt; ，然后再内部解构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;esm 加载 cjs 的库时也有问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;引入构建工具，例如 rollup，然后用对应插件去处理 &lt;code&gt;@rollup/plugin-commonjs&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;esm 缺乏 &lt;code&gt;__filename&lt;/code&gt;  和  &lt;code&gt;__dirname&lt;/code&gt;  等变量&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以使用 import.meta.url 重建&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;仅仅是写一个脚本，为了追求快速，直接一通操作……：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;npm init&lt;/code&gt;  初始化&lt;/li&gt;
&lt;li&gt;设置 package.json， &lt;code&gt;type&lt;/code&gt;  为 &lt;code&gt;module&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加一波需要的依赖并安装： &lt;code&gt;adm-zip&lt;/code&gt; 、 &lt;code&gt;chalk&lt;/code&gt; 、 &lt;code&gt;dayjs&lt;/code&gt; 、 &lt;code&gt;exceljs&lt;/code&gt; 、 &lt;code&gt;inquirer&lt;/code&gt; ...&lt;/li&gt;
&lt;li&gt;上 &lt;code&gt;rollup&lt;/code&gt;  构建工具，引入必须的插件并配置： &lt;code&gt;@rollup/plugin-typescript&lt;/code&gt; 、 &lt;code&gt;@rollup/plugin-node-resolve&lt;/code&gt; 、 &lt;code&gt;@rollup/plugin-commonjs&lt;/code&gt; 、 &lt;code&gt;@rollup/plugin-json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置 &lt;code&gt;tsconfig.json&lt;/code&gt; ，指定 &lt;code&gt;compilerOptions.module&lt;/code&gt;  与 &lt;code&gt;compilerOptions.moduleResolution&lt;/code&gt;  为 &lt;code&gt;NodeNext&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;这里的作用为指定让 ts 使用什么模块规范，及使用什么路径查找方案。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;涉及 &lt;code&gt;__dirname&lt;/code&gt;  与 &lt;code&gt;__filename&lt;/code&gt;  全局变量的地方，利用 &lt;code&gt;import.meta.url&lt;/code&gt;  替代。&lt;/li&gt;
&lt;li&gt;编码测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2V4Y2VsanMvZXhjZWxqcy9ibG9iL21hc3Rlci9SRUFETUVfemgubWQ=&#34;&gt;exceljs/README_zh.md at master · exceljs/exceljs (github.com)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2N0aGFja2Vycy9hZG0temlwL3dpa2kvQURNLVpJUA==&#34;&gt;ADM 邮编・cthackers/adm-zip 维基 (github.com)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MzEzMDQ4MTcxNzk3NTQ0OTk3P3NlYXJjaElkPTIwMjQwNDExMTMzMzU2MjE3RjA2ODY0QzJBRkUwQkRGQTUjaGVhZGluZy02&#34;&gt;前端是怎么解析 Excel、PDF、Word、PPT 等文件的？ - 掘金 (juejin.cn)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzNjU1OTg5MDUxMzk5P3NlYXJjaElkPTIwMjQwNDExMTEwNTU4MjNCNjZFNDlFMUVENjIwMEQwN0Q=&#34;&gt;nodejs 实现一个 word 文档解析器 - 掘金 (juejin.cn)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/11/08/Vue/VueNote4/</guid>
            <title>深入浅出Vue笔记————生命周期篇</title>
            <link>http://zyczxq.com/2021/11/08/Vue/VueNote4/</link>
            <category term="Vue" scheme="http://zyczxq.com/categories/Vue/" />
            <pubDate>Mon, 08 Nov 2021 14:36:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;开头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开头&#34;&gt;#&lt;/a&gt; 开头&lt;/h1&gt;
&lt;p&gt;开头，我们问自己几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue 实例初始化阶段都经历了些什么？&lt;/li&gt;
&lt;li&gt;beforeCreate 钩子调用之前都干了些什么？&lt;/li&gt;
&lt;li&gt;Vue 实例的事件系统是如何初始化的？&lt;/li&gt;
&lt;li&gt;inject 的原理？&lt;/li&gt;
&lt;li&gt;访问 Vue 实例的 props 和 data，我们实际上访问的是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带着问题去看文章。&lt;/p&gt;
&lt;p&gt;每个 Vue 实例在创建的时候都要经过一系列初始化，从创建到销毁，Vue 的生命周期可以分为四个阶段：&lt;strong&gt;初始化、模板编译、挂载、卸载阶段&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;lifecycle.png&#34; alt=&#34;lifecycle&#34; title=&#34;官方图&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接下来，&lt;strong&gt;我们从 Vue 的构造函数深入了解 Vue 的生命周期，看看 Vue 是怎么建立并初始化的&lt;/strong&gt;。不知道的可以再看看前面的博客，我们前面说到，Vue 有个构造函数，在某个文件内，会引入不同的 Mixin，往 Vue 的原型上挂载方法，其中 Vue 构造函数就引用了 initMixin 的方法用于初始化。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Vue is a constructor and should be called with the `new` keyword&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;_init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 就是这里&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;this_init&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this_init&#34;&gt;#&lt;/a&gt; this._init&lt;/h1&gt;
&lt;p&gt;这个方法是通过 initMixin 挂载到 Vue 原型上的，接下来我们来看看他的细节。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;_init&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; vm &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token function&#34;&gt;resolveConstructorOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constructor&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    options &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 这里会根据用户传递、父级实例的 options 进行合并&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initLifecycle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initEvents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initRender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;callHook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;beforeCreate&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 触发对应的生命周期事件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initInjections&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;initProvide&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;callHook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;created&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;el&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;el&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;不得不说，大佬写的代码就是逻辑清晰和易读，基本上函数名已经是解释了它做了什么。&lt;/p&gt;
&lt;p&gt;在初始化流程很明显，先是初始化实例属性、事件、渲染，然后触发 beforeCreate 生命周期，然后继续下去。&lt;/p&gt;
&lt;h2 id=&#34;初始化实例属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化实例属性&#34;&gt;#&lt;/a&gt; 初始化实例属性&lt;/h2&gt;
&lt;p&gt;Vue 通过&lt;strong&gt; initLifecycle&lt;/strong&gt; 函数向实例中挂载属性，局部代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initLifecycle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 找出第一个非抽象父类&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;parent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//options 中有一个属性为 abstarct，表示当前组件是否为抽象组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 找到第一个非抽象父组件，然后添加自身给父组件，并设置 $parent&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abstract&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abstract &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$children&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$root &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parent &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$root &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; vm&lt;span class=&#34;token comment&#34;&gt;// 表示当前组件树的根 Vue 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$children &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$refs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watcher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isDestroyed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isBeingDestroyed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这是局部的代码，其实就是给一些属性赋一个默认值。&lt;/p&gt;
&lt;h2 id=&#34;初始化事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化事件&#34;&gt;#&lt;/a&gt; 初始化事件&lt;/h2&gt;
&lt;p&gt;初始化事件即将父组件在模板中使用的 v-on 注册的事件添加到子组件的事件系统中。我们都知道，Vue 中父组件可以在使用子组件的地方用 v-on 来监听子组件触发的事件。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;如果 v-on 写在组件标签上，事件就会被注册到子组件的事件系统中。如果写在平台标签（如 div），就会把事件注册到浏览器系统中。&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initEvents&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 初始化父组件附加事件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; listeners &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_parentListeners&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;listeners&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;updateComponentListeners&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; listeners&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;首先初始化_events 属性为空对象，用来存储事件。所有使用 vm.$on 注册的事件监听器都会保存到这个属性中&lt;/p&gt;
&lt;p&gt;然后在模板编译阶段，如果解析到组件标签，就会实例化子组件，同时将标签上注册的事件解析并传递给子组件的 $options._parentListeners 中。&lt;/p&gt;
&lt;p&gt;那如果是这样，存在 listeners，就将它（父组件向子组件注册的事件）注册到子组件实例中。&lt;strong&gt;调用 updateComponentListeners&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;updatecomponentlisteners&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#updatecomponentlisteners&#34;&gt;#&lt;/a&gt; updateComponentListeners&lt;/h3&gt;
&lt;p&gt;组件通过该方法将父组件中向子组件注册的事件注册，初始化的时候其实只要循环 vm.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;msub&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mtext&gt;并使用&lt;/mtext&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;options._parentListeners并使用vm.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.969438em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;并&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;使&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;用&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;on 方法注册即可&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; target&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; once&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;once&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$once&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$off&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;updateComponentListeners&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;listeners&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldListeners&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;updateListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;listeners&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldListeners &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; add &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里还封装了两个函数，用于新增和删除事件。&lt;/p&gt;
&lt;h3 id=&#34;updatelisteners&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#updatelisteners&#34;&gt;#&lt;/a&gt; updateListeners&lt;/h3&gt;
&lt;p&gt;这个函数思路其实比较简单，如果 listeners 对象存在某个事件而 oldListeners 不存在，则说明需要新增，反之则移除。&lt;/p&gt;
&lt;p&gt;它的功能其实就是比对 listeners 和 oldListeners 来分辨哪些事件需要 add 注册，哪些需要 remove 移除。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;读到这里的时候，我就感觉这个函数应该不止是在初始化时可以调用，在重新渲染 / 更新时也可以调用来更新事件&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;代码就懒得贴了，简单说一下这个函数的内部过程吧：&lt;/p&gt;
&lt;p&gt;主要分为两个循环，第一部分循环 listeners，判断哪些事件不在 oldListeners 中，调用 add 注册这些事件。第二部分循环 oldListeners，造出哪些事件不在 listeners，调用 remove 移除这些事件。&lt;/p&gt;
&lt;h3 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意&lt;/h3&gt;
&lt;p&gt;这里还要注意的是，实际上我们使用 Vue 在模板中注册事件的时候还可能会有一些事件修饰符，如 capture、once 之类的，写成像：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;child&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@increment.once&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 Vue 中有个函数叫&lt;strong&gt; normalizeEvent&lt;/strong&gt;，它就是用来将这些修饰符解析出来的函数。&lt;/p&gt;
&lt;h2 id=&#34;初始化render&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化render&#34;&gt;#&lt;/a&gt; 初始化 render&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initRender&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token literal-property property&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_vnode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// the root of the child tree&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_staticTrees &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// v-once cached trees&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; parentVnode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$vnode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_parentVnode &lt;span class=&#34;token comment&#34;&gt;// the placeholder node in parent tree&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; renderContext &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parentVnode &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; parentVnode&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$slots &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resolveSlots&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_renderChildren&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; renderContext&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$scopedSlots &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; emptyObject&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// bind the createElement fn to this instance&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// so that we get proper render context inside it.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// args order: tag, data, children, normalizationType, alwaysNormalize&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// internal version is used by render functions compiled from templates&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;_c&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// normalization is always applied for the public version, used in&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// user-written render functions.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;$createElement&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// $attrs &amp;amp; $listeners are exposed for easier HOC creation.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// they need to be reactive so that HOCs using them are always updated&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; parentData &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parentVnode &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; parentVnode&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;/* istanbul ignore else */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;$attrs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parentData &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; parentData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attrs &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; emptyObject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;isUpdatingChildComponent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;$attrs is readonly.&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;$listeners&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_parentListeners &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; emptyObject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;isUpdatingChildComponent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;$listeners is readonly.&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;$attrs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parentData &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; parentData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attrs &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; emptyObject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;$listeners&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_parentListeners &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; emptyObject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;触发生命周期钩子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#触发生命周期钩子&#34;&gt;#&lt;/a&gt; 触发生命周期钩子&lt;/h2&gt;
&lt;p&gt;我们可以看得到，Vue 中通过 callHook 函数来触发生命周期钩子。&lt;/p&gt;
&lt;p&gt;我们先说说 Vue 所有的生命周期钩子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;beforeCreate&lt;/li&gt;
&lt;li&gt;created&lt;/li&gt;
&lt;li&gt;beforeMount&lt;/li&gt;
&lt;li&gt;mounted&lt;/li&gt;
&lt;li&gt;beforeUpdate&lt;/li&gt;
&lt;li&gt;updated&lt;/li&gt;
&lt;li&gt;beforeDestroy&lt;/li&gt;
&lt;li&gt;destroyed&lt;/li&gt;
&lt;li&gt;activated&lt;/li&gt;
&lt;li&gt;deactivated&lt;/li&gt;
&lt;li&gt;errorCaptured&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中前八个是比较正常的生命周期，倒数第二第三个按我自己的经验在 keepalive 中用的比较多。&lt;/p&gt;
&lt;p&gt;接下来我们说说 callHook 的功能，callHook 的作用是触发用户设置的生命周期钩子。&lt;/p&gt;
&lt;p&gt;这个函数有一个需要注意的点，我们可以在 vm.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mtext&gt;获得用户设置的生命周期函数（如&lt;/mtext&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;options获得用户设置的生命周期函数（如vm.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;获&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;得&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;用&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;户&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;设&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;置&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;生&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;命&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;周&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;期&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;函&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;如&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;options.created），&lt;strong&gt;但是这里获取到的是一个数组&lt;/strong&gt;。（如果你看过 Vue 官方文档中的混入，应该会知道这个玩意）&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;callHook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;hook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; handlers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;hook&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        handlers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;handleError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;hook&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; hook&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;callHook 会遍历对应生命周期钩子名称所有的函数，逐个执行。&lt;/p&gt;
&lt;h2 id=&#34;初始化inject&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化inject&#34;&gt;#&lt;/a&gt; 初始化 inject&lt;/h2&gt;
&lt;h3 id=&#34;使用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方式&#34;&gt;#&lt;/a&gt; 使用方式&lt;/h3&gt;
&lt;p&gt;很多人可能包括我自己没怎么经常用过 inject/provide，所以先说说这玩意干什么用吧。&lt;/p&gt;
&lt;p&gt;inject/provide，也就是依赖注入，有时候某些深层子组件都需要使用一个方法，但我们很难将其传入，就可以使用依赖注入。&lt;/p&gt;
&lt;p&gt;在 Vue 实例中，使用 provide 选项，指定我们想要提供给后代的数据 / 方法，例如：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;provide&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;getMap&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getMap&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后在任何后代组件中，使用 inject 选项来接收指定的属性：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;getMap&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;有点像 React 中的 Context 吧。&lt;/p&gt;
&lt;h3 id=&#34;实现原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现原理&#34;&gt;#&lt;/a&gt; 实现原理&lt;/h3&gt;
&lt;p&gt;这两个玩意一般是成对出现的，但是在初始化中，我们看的到，先初始化 inject，然后初始化状态，最后才到 provide。&lt;/p&gt;
&lt;p&gt;这样做也是有深意的，后初始化的可以依赖先初始化的，即在 Vue 实例中，&lt;strong&gt;用户可以在 data/props 中使用 inject 注入的内容&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们知道通过 provide 注入的内容可以被所有子孙组件通过 inject 的得到。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initInjections&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token literal-property property&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resolveInject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 返回一个对象，每一项属性都是 inject 的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这里其实是通知 defineReactive 函数不要将内容转换成响应式的，保存后再调回来&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;toggleObserving&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Avoid mutating an injected value directly since the changes will be &lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;overwritten whenever the provided component re-renders. &lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;injection being mutated: &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;key&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;toggleObserving&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里我们可以看到，在初始化 inject 的过程中，调用了 resolveInject 来获取实例中需要 inject 的值，然后遍历这些值，定义为当前实例的非响应式属性。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;上面那个警告的意思大体是不要直接改变注入的值，当提供这个值的组件重渲染时，这个值会被更改。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;好吧，那我们想知道它的实现原理，就得深入到 resolveInject 这个函数中去找它的代码了。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resolveInject&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token literal-property property&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; any&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;Object &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inject&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// inject is :any because flow is not smart enough to figure out cached&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; keys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hasSymbol&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; Reflect&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ownKeys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inject&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inject&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; keys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; keys&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// #6574 in case the inject object is observed...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__ob__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; provideKey &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; inject&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;from&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; source &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_provided &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hasOwn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_provided&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; provideKey&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_provided&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;provideKey&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        source &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;default&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; inject&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; provideDefault &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; inject&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;default&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; provideDefault &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;function&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;provideDefault&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; provideDefault&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Injection &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;key&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; not found&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这代码有一点点长哈，我们一个部分一个部分的来读。首先我先说一下它的基本思想，&lt;strong&gt;它实际上就是使用 inject 配置的 key 从当前组件读取内容，读不到就找他的父组件，然后一层层往上找直到找到内容，x 中（保存为非响应式的属性)&lt;/strong&gt;。我感觉有点像作用域链，或者说有点像原型链的查找方式。&lt;/p&gt;
&lt;h2 id=&#34;初始化状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化状态&#34;&gt;#&lt;/a&gt; 初始化状态&lt;/h2&gt;
&lt;p&gt;初始化状态呢，自然就是初始化一些我们平时用到的，例如 props、data、methods、computed、watch 之类的东西。&lt;/p&gt;
&lt;p&gt;我们来看代码：&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;figcaption data-lang=&#34;typescript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initState&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watchers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 用来保存当前组件的所有 watcher&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; opts &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initProps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;methods&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initMethods&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;methods&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;initData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 否则直接观察空对象。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;observe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* asRootData */&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;computed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initComputed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;computed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;watch &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;watch &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; nativeWatch&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;initWatch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; opts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;watch&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;还是比较易读的，我们可以看到，配置中有什么，他就初始化什么，并且调用对应的初始化函数，代码非常精简。&lt;/p&gt;
&lt;p&gt;初始化顺序为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;props&lt;/li&gt;
&lt;li&gt;methods&lt;/li&gt;
&lt;li&gt;data&lt;/li&gt;
&lt;li&gt;computed&lt;/li&gt;
&lt;li&gt;watch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;后初始化的可以操作前初始化的&lt;/strong&gt;。这个初始化顺序非常符合逻辑，例如我们就可以在 data 中使用 props 了，在 computed 中使用 data。&lt;/p&gt;
&lt;p&gt;接下来我们看一下各个初始化的代码。&lt;/p&gt;
&lt;h3 id=&#34;初始化props&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化props&#34;&gt;#&lt;/a&gt; 初始化 props&lt;/h3&gt;
&lt;p&gt;props 呢，其实就是&lt;strong&gt;父组件提供数据&lt;/strong&gt;，子组件在内部通过 props 字段选择自己需要哪些数据，然后 Vue 内部通过子组件的 props 选项将数据筛选出来、再添加到&lt;strong&gt;子组件的上下文&lt;/strong&gt;之中。&lt;/p&gt;
&lt;p&gt;像我们常常用数组来指定 props，但其实最后我们需要&lt;strong&gt;将它规格化成为对象&lt;/strong&gt;的形式。&lt;/p&gt;
&lt;h4 id=&#34;规格化props&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#规格化props&#34;&gt;#&lt;/a&gt; 规格化 props&lt;/h4&gt;
&lt;p&gt;在初始化 props 之前，实际上在 this._init 里面，在传递配置的时候，Vue 中使用了：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//init.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;而在 mergeOptions 函数中，有这么一行代码：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//options.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;normalizeProps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;child&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;所以，实际上我们在 initProps 之前，是先做了一步规格化 props 的操作的，我们需要先了解这个函数到底做了什么事情。&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;figcaption data-lang=&#34;typescript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * Ensure all props option syntax are normalized into the&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * Object-based format.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;normalizeProps&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;Component&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; props &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;props&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; props&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      val &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; props&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; val &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;string&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;camelize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; type&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;props must be strings when using array syntax.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isPlainObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      val &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; props&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;camelize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isPlainObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; val&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; type&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; val &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Invalid value for option &#34;props&#34;: expected an Array or an Object, &lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;but got &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toRawType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;props &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这段代码其实干了以下的事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先判断是否有 props 属性，没有就&lt;strong&gt;提前返回&lt;/strong&gt;，不用规格化，很好理解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明一些用到的变量，如 res 用来&lt;strong&gt;保存规格化后的结果&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就是主要逻辑了。检查 props 是否为一个数组，是的话转步骤 4，否则检查是否为对象类型，如果是则转步骤 5，都不是则在非生产环境下的控制台打印警告。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是数组，那就遍历数组每一项，检查是否为 string 类型，是的话就将这个 key&lt;strong&gt; 从蛇形命名法转换为驼峰命名法&lt;/strong&gt;。并且转化为对象赋值给 res。&lt;/p&gt;
&lt;p&gt;这里为什么要转呢？这是因为我们在模板中父组件向子组件传递数据的时候，在标签中用的是蛇形命名法。&lt;/p&gt;
&lt;p&gt;即 &amp;lt;child user-name={name}/&amp;gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果是对象，那就用 for-in 循环 props，也进行 key 的命名转换、但对值的处理稍有不同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后将结果覆盖 options.props。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总的来说，它就是将 props 字段规格化为 Object 类型。&lt;/p&gt;
&lt;h4 id=&#34;本体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本体&#34;&gt;#&lt;/a&gt; 本体&lt;/h4&gt;
&lt;p&gt;现在才来到我们的初始化 props 的本体。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过规格化后的 props 从其父组件传入的 props 数据中&lt;/strong&gt;或者&lt;strong&gt;从 new 创建实例时传入的 propsdata 参数中&lt;/strong&gt;，筛选出需要的数据存入 vm._props，再在 vm 实例上设置一个代理，实现通过 vm.x 访问 vm._props.x。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initProps&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; propsOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; propsData &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;propsData &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; props &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_props &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 缓存 props 的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; keys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_propKeys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; isRoot &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;isRoot&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;toggleObserving&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 这里是让下面的 defineReactive 不用转换成响应式数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; propsOptions&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    keys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取父组件传下来实际的值，进行边界条件的判断和处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;validateProp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; propsOptions&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; propsData&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;_props&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置代理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;toggleObserving&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里顺带一提一下 proxy，其实它就是通过定义对应 key 的 getter/setter 来使得它获取到实际上是另外一个地方的值，代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; sharedPropertyDefinition &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;enumerable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;configurable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; noop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; noop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token literal-property property&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;sourceKey&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; string&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sharedPropertyDefinition&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;proxyGetter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;sourceKey&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sharedPropertyDefinition&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;proxySetter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;sourceKey&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; val&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;defineProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sharedPropertyDefinition&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;初始化methods&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化methods&#34;&gt;#&lt;/a&gt; 初始化 methods&lt;/h3&gt;
&lt;p&gt;初始化 method 比较简单，主要有两步：&lt;strong&gt;校验方法是否合法和将方法挂载到 vm 中&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initMethods&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token literal-property property&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; props &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;props&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; methods&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; methods&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;function&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Method &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;key&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; has type &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; methods&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; in the component definition. &lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Did you reference the function correctly?&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 如果 props 中已存在这个 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hasOwn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;props&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Method &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;key&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; has already been defined as a prop.&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          vm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 如果是内部已经有的实例方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isReserved&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Method &#34;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;key&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; conflicts with an existing Vue instance method. &lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;Avoid defining component methods that start with _ or $.&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; methods&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;function&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; noop &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;methods&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;isReserved 是用来检测字符串是否以&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mtext&gt;或&lt;/mtext&gt;&lt;mtext&gt;开&lt;/mtext&gt;&lt;/msub&gt;&lt;mtext&gt;头。在&lt;/mtext&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;中，&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;或_开头。在Vue中，&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.83333em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;或&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord cjk_fallback mtight&#34;&gt;开&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;头&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;在&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;中&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;开头的是对外放出的，_开头一般只在内部使用。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;初始化data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化data&#34;&gt;#&lt;/a&gt; 初始化 data&lt;/h3&gt;
&lt;p&gt;data 的逻辑其实相对来说还是比较简单的，就是执行 data 所指向的函数，从而得到一个对象，并且检测是否有重名 prop 和 method，没有的话就设置代理并转换成响应式数据。&lt;/p&gt;
&lt;h3 id=&#34;初始化computed&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化computed&#34;&gt;#&lt;/a&gt; 初始化 computed&lt;/h3&gt;
&lt;p&gt;computed 相对复杂一点，首先先说说它的特性。&lt;/p&gt;
&lt;p&gt;我们都知道，计算属性的特点就是有缓存，在依赖的数据没有发生变化的情况下，反复读计算属性，而计算属性函数&lt;strong&gt;并不会反复执行&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;computed 其实是定义在 vm 上的一个特殊的 getter，它结合了 Watcher 来实现缓存和依赖收集的功能。&lt;/p&gt;
&lt;p&gt;那计算属性是怎么知道自己的依赖值改变了呢？&lt;/p&gt;
&lt;p&gt;它自己有一个 Watcher，当依赖值发生改变，自己的 Watcher 会收到信息，并且将 dirty 属性设为 true，下次读取的时候就重新计算。&lt;/p&gt;
&lt;h4 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h4&gt;
&lt;p&gt;先说计算属性的原理吧，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 watcher 读取计算属性。&lt;/li&gt;
&lt;li&gt;读取计算属性中的数据、并且使用 Watcher 观察。如果在模板中，就是组件级的 watcher 负责观察，如果在用户自定义 watch 中，就是自定义生成的 watcher 观察。&lt;/li&gt;
&lt;li&gt;当数据发生了变化，则通知计算属性的 watcher 观察数据的变化，同时通知组件的 Watcher 数据发生了变化，准备重新渲染&lt;/li&gt;
&lt;li&gt;计算属性的 Watcher 把自己的 dirty 属性设为 true。&lt;/li&gt;
&lt;li&gt;当重新读区计算属性的值时，如果 dirty 为 true，则重新计算一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;计算属性其实是一个 getter，对应有一个 watcher，读取别的数据的时候就会被别的数据收集依赖进 Dep。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 SSR (Server Side Render) 下，计算属性只是一个普通的 getter，没有缓存效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;初始化watch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化watch&#34;&gt;#&lt;/a&gt; 初始化 watch&lt;/h3&gt;
&lt;h3 id=&#34;初始化provide&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化provide&#34;&gt;#&lt;/a&gt; 初始化 provide&lt;/h3&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/11/08/Vue/VueNote3/</guid>
            <title>深入浅出Vue笔记————实例方法篇</title>
            <link>http://zyczxq.com/2021/11/08/Vue/VueNote3/</link>
            <category term="Vue" scheme="http://zyczxq.com/categories/Vue/" />
            <pubDate>Mon, 08 Nov 2021 14:28:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;感觉一章节让我对 Vue 内部的原理更加深入的了解了，如果说前面的响应式系统、虚拟 DOM 的实现是 Vue 的精髓之一的话，这部分实例代码的实现让我对 Vue 组件实例的理解更为深刻，深入 Vue 的代码骨架之中。&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概述&#34;&gt;#&lt;/a&gt; 概述&lt;/h1&gt;
&lt;p&gt;Vue 实例中有许多方法，本博客记录这些实例方法的实现原理&lt;/p&gt;
&lt;p&gt;在 Vue 源码中的 src/core/instance/index.js 中，有这么一段代码：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; initMixin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./init&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; stateMixin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./state&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; renderMixin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./render&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; eventsMixin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./events&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; lifecycleMixin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./lifecycle&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; warn &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;../util/index&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Vue&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;production&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Vue is a constructor and should be called with the `new` keyword&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;_init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;initMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 初始化相关&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;stateMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 数据相关&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;eventsMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 事件相关&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;lifecycleMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 生命周期相关&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;renderMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 渲染相关&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; Vue&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里其实是定义了 Vue 的构造函数，然后分别调用 initMixin、stateMixin、eventsMixin 等函数，实际上就是向 Vue 的原型中挂载方法。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;initMixin&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;_init&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;与事件相关的实例方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与事件相关的实例方法&#34;&gt;#&lt;/a&gt; 与事件相关的实例方法&lt;/h1&gt;
&lt;p&gt;在上面我们说到，在上面我们调用了 eventsMixin (Vue) 来在 Vue 的原型上挂载方法。使得每个 Vue 实例都能够调用这些方法：&lt;/p&gt;
&lt;p&gt;vm 为某 Vue 实例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vm.$on&lt;/li&gt;
&lt;li&gt;vm.$off&lt;/li&gt;
&lt;li&gt;vm.$once&lt;/li&gt;
&lt;li&gt;vm.$emit&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;eventsMixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;$on&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;想了下，还是不放实现代码了，只说说我读到的一些想法。&lt;/p&gt;
&lt;p&gt;这四个方法的实现实际上有点类似于 Node 中的 EventEmitter，实现方法也有点点类似，但是细节上有些许出入。&lt;/p&gt;
&lt;p&gt;思路大概是这样的，在新建 Vue 实例的时候，会初始化一个对象用来存放事件相关的东西：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;vmon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmon&#34;&gt;#&lt;/a&gt; vm.$on&lt;/h2&gt;
&lt;p&gt;这个方法用于监听当前实例上的自定义事件，实现代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;string | Array&amp;lt;string&gt;&amp;#125; event &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;Function&amp;#125; fn callback&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @description 给传入的 event 注册事件回调&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 防止中途长度改变了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其实就是，以事件名为_events 的属性名，将函数注册进去。$on 方法也支持多个事件注册回调。&lt;/p&gt;
&lt;h2 id=&#34;vmoff&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmoff&#34;&gt;#&lt;/a&gt; vm.$off&lt;/h2&gt;
&lt;p&gt;这个方法用于移除自定义事件监听器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有提供参数，移除所有事件监听器&lt;/li&gt;
&lt;li&gt;只提供了事件参数，移除该事件所有监听器&lt;/li&gt;
&lt;li&gt;同时提供两个参数，则移除对应的&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;string | Array&amp;lt;string&gt;&amp;#125; event &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;Function&amp;#125; fn &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @description 移除自定义事件监听器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;$off&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第一种情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;arguments&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$off&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第二种情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; cbs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;cbs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arguments&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第三种情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; cbs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; cb&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cbs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                cb &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cbs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cb &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; fn &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; cb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; fn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;//fn 属性，用来下面 once 特殊执行 off，因为 once 注册的事件监听器并不是原来的函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    cbs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里为什么我们还要检测注册的回调的 fn 属性呢？&lt;/p&gt;
&lt;p&gt;因为下面我们就要讲到，once 的实现方式其实是在外&lt;strong&gt;包装&lt;/strong&gt;了一下原来传入的回调函数，我们通过将 fn 函数设置为包装后的回调函数的 fn 属性，用来对比是否是对应的监听器。&lt;/p&gt;
&lt;h2 id=&#34;vmonce&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmonce&#34;&gt;#&lt;/a&gt; vm.$once&lt;/h2&gt;
&lt;p&gt;和 on 方法的效果差不多，但是只触发一次，触发之后移除。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;string | Array&amp;lt;string&gt;&amp;#125; event &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;Function&amp;#125; fn &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @description 监听一个自定义事件，但是只触发一次后就移除&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;$once&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$off&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;on&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 解除后执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arguments&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        on&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;on&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其实我们就是使用了一个函数来包装原回调监听器，执行后移除，并且设置该包装函数的 fn 属性为原回调监听器，和上面 off 的实现原理相呼应。&lt;/p&gt;
&lt;h2 id=&#34;vmemit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmemit&#34;&gt;#&lt;/a&gt; vm.$emit&lt;/h2&gt;
&lt;p&gt;这个函数触发当前实例上的事件。附加参数都会传给监听器回调。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;string&amp;#125; event &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param &amp;#123;...args&amp;#125; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @description 触发当前实例上的某个事件，附加参数都会传给监听器回调&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;$emit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; cbs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_events&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cbs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; args &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;arguments&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cbs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    cbs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token function&#34;&gt;handleError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;event handler for &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;event&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;生命周期相关的实例方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期相关的实例方法&#34;&gt;#&lt;/a&gt; 生命周期相关的实例方法&lt;/h1&gt;
&lt;p&gt;主要是四个方法：vm.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mtext&gt;、&lt;/mtext&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;mount、vm.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;forceUpdate、vm.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;、&lt;/mtext&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;nextTick、vm.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;destroy。&lt;/p&gt;
&lt;p&gt;其中 vm.&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;和&lt;/mtext&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;forceUpdate和vm.&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;和&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;destroy 是在 lifecycleMixin 中挂载到 Vue 构造函数的原型上的。&lt;/p&gt;
&lt;h2 id=&#34;vmforceupdate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmforceupdate&#34;&gt;#&lt;/a&gt; vm.$forceUpdate&lt;/h2&gt;
&lt;p&gt;这个方法的作用是迫使 Vue 实例重新渲染。前面我们也说过 Vue2 的响应式系统，在 Vue2 之中，更新粒度为组件级别，一个组件实例对应一个组件级别 Watcher 实例，实际上，只要调用组件对应的 watcher 的 update 方法即可。&lt;/p&gt;
&lt;h2 id=&#34;vmdestroy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmdestroy&#34;&gt;#&lt;/a&gt; vm.$destroy&lt;/h2&gt;
&lt;p&gt;这个方法的作用很明显，就是完全销毁一个实例。&lt;/p&gt;
&lt;p&gt;它做的事情大概有以下几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先判断是否已经销毁，已经销毁不需重复销毁&lt;/li&gt;
&lt;li&gt;触发 Vue 实例的生命周期 beforeDestroy 钩子。&lt;/li&gt;
&lt;li&gt;清理当前组件实例和父组件之间的联系（Vue 实例的 $children 属性存储了所有子组件）&lt;/li&gt;
&lt;li&gt;销毁实例上的所有 watcher（包括组件级别的 watcher 和用户通过 $watch 方法创建的 watcher）&lt;/li&gt;
&lt;li&gt;给 Vue 实例添加_isDestroyed 属性来表示已经被销毁&lt;/li&gt;
&lt;li&gt;触发 Vue 实例的生命周期 destroyed 钩子。&lt;/li&gt;
&lt;li&gt;移除实例上的所有事件监听器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体就是这七步，然后我们结合源代码来看：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;$destroy&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;vm&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Component &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//1. 判断&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isBeingDestroyed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token comment&#34;&gt;//2. 触发&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;callHook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;beforeDestroy&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isBeingDestroyed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//3. 清理自己和父组件的联系&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$parent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isBeingDestroyed &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abstract&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$children&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//4. 清理组件级别的 watcher（存在_watcher)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watcher&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watcher&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;teardown&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  	&lt;span class=&#34;token comment&#34;&gt;// 清理用户创建的 watcher&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watchers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_watchers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;teardown&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// remove reference from data ob&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// frozen object may not have observer.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__ob__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__ob__&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vmCount&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 表示已经被销毁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_isDestroyed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发 destroy 钩子函数解绑指令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;__patch__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;_vnode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// fire destroyed hook&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;callHook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;destroyed&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 移除所有事件监听器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$off&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// remove __vue__ reference&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$el&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$el&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__vue__ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// release circular reference (#6759)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$vnode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$vnode&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;vmnexttick&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmnexttick&#34;&gt;#&lt;/a&gt; vm.$nextTick&lt;/h2&gt;
&lt;p&gt;它接收一个回调函数作为参数，然后在下次 DOM 更新周期之后执行。&lt;/p&gt;
&lt;p&gt;面向场景：更新了状态后有时需要对新 DOM 做一些操作时。&lt;/p&gt;
&lt;h3 id=&#34;前置知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前置知识&#34;&gt;#&lt;/a&gt; 前置知识&lt;/h3&gt;
&lt;p&gt;在说这个 API 的原理之前，需要先说说 Vue 的一些特性。&lt;/p&gt;
&lt;p&gt;在 Vue 之中，当状态发生变化，会通知依赖这个状态的所有 watcher，然后触发虚拟 DOM 渲染流程。在 watcher 触发渲染这个操作并不是同步的，它是&lt;strong&gt;异步的&lt;/strong&gt;。Vue 在内部有一个队列 —— 异步更新队列，每当需要渲染时，就将要渲染的 watcher 推送到这个队列，下一次事件循环再统一清空队列。&lt;/p&gt;
&lt;p&gt;好处就是能够减少重复，组件的 watcher 要是再一轮事件循环中多次收到通知需要渲染，实际上只需一次渲染。&lt;/p&gt;
&lt;p&gt;事件循环的话这里不再仔细说了，前面其他博客也讲过很多次，可以参考我之前的博客。&lt;/p&gt;
&lt;h3 id=&#34;api本身&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#api本身&#34;&gt;#&lt;/a&gt; API 本身&lt;/h3&gt;
&lt;p&gt;这个 API 有几个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回调执行前反复调用，也只会添加一个任务&lt;/li&gt;
&lt;li&gt;当任务触发，依次执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vm.$nextTick 和 Vue.nextTick 是一样的，所以我们直接说 Vue.nextTick 的原理&lt;/p&gt;
&lt;h3 id=&#34;vue24之前&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue24之前&#34;&gt;#&lt;/a&gt; Vue2.4 之前&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; callbacks &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; pending &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;flushCallbacks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	pending &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; copies &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; callbacks&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  callbacks&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;copies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		copies&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; microTimerFunc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;microTimerFunc&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flushCallbacks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nextTick&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;cb&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 回调函数和执行环境&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	callbacks&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cb&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;pending&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		pending &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;microTimerFunc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这段代码有几个要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pending 变量用于防止反复添加任务到微任务队列中，一轮事件循环只会添加一次。&lt;/li&gt;
&lt;li&gt;Vue2.4 版本之前，nextTick 方法使用微任务，因为微任务优先级较高，可能会出现一些问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue24之后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue24之后&#34;&gt;#&lt;/a&gt; Vue2.4 之后&lt;/h3&gt;
&lt;p&gt;正所谓在 2.4 之前都使用微任务，后来 Vue 提供了强制使用宏任务的方法。&lt;/p&gt;
&lt;p&gt;具体代码就不贴了，和之前有几个区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用了一个变量来判断是否使用宏任务&lt;/li&gt;
&lt;li&gt;新增了一个函数 withMacroTask，给回调函数做了一层包装，让更新 DOM 操作推到宏任务队列中。&lt;/li&gt;
&lt;li&gt;优先使用 setImmediate，然后 MessageChannel、setTimeout&lt;/li&gt;
&lt;li&gt;如果浏览器不支持 Promise，则降级成宏任务添加&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;全局api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局api&#34;&gt;#&lt;/a&gt; 全局 API&lt;/h1&gt;
&lt;p&gt;全局 API 和实例方法不太一样，后者是在 Vue 的原型上挂载方法，而前者是直接在 Vue 上挂载方法。&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;extend&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/10/20/Vue/VueNote2/</guid>
            <title>深入浅出Vue笔记————虚拟DOM篇</title>
            <link>http://zyczxq.com/2021/10/20/Vue/VueNote2/</link>
            <category term="Vue" scheme="http://zyczxq.com/categories/Vue/" />
            <pubDate>Wed, 20 Oct 2021 14:24:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概述&#34;&gt;#&lt;/a&gt; 概述&lt;/h1&gt;
&lt;p&gt;Vue 自从 2.0 版本开始引入了虚拟 DOM 技术，而虚拟 DOM 技术也是 React 的核心技术之一，引入了虚拟 DOM 之后，Vue 的初始渲染速度提升了 2～4 倍。&lt;/p&gt;
&lt;p&gt;虚拟 DOM 之所以称为虚拟 DOM，是因为他不是真实的 DOM，而是用 JavaScript 数据结构表示成的&lt;strong&gt;虚拟节点树&lt;/strong&gt;，然后使用虚拟节点树进行渲染。&lt;/p&gt;
&lt;p&gt;就是，先生成一个虚拟节点树，然后用它和上一次生成的虚拟节点树进行对比，只渲染不同的部分。&lt;/p&gt;
&lt;p&gt;简单来说，就是&lt;strong&gt;生成 -&amp;gt; 对比 -&amp;gt; 渲染&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;为什么引入虚拟dom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么引入虚拟dom&#34;&gt;#&lt;/a&gt; 为什么引入虚拟 DOM？&lt;/h1&gt;
&lt;p&gt;在前面一篇讲 Vue 的变化侦测的博客里，也提到过。React 的变化侦测是比较暴力的，它不知道哪些地方需要变化，就只能通过虚拟 DOM 的比对，然后销毁、重建。&lt;/p&gt;
&lt;p&gt;但其实在 Vue 中，Vue 是知道哪些状态发生了变化的。Vue 可以通过更细粒度的感知来更新视图，不需要进行比对。并且，Vue 在更新 DOM 的时候是异步执行的：当侦听到数据变化，&lt;strong&gt;Vue 会开启一个队列，并且缓冲同一事件循环中发生的所有变更&lt;/strong&gt;。（当数据变化，会通知对应的所有依赖 Watcher 实例更新）当一个 watcher 被多次触发，只会被推入到队列一次，能够减少不必要的计算和 DOM 操作。在下一个的事件循环 tick 中，Vue 刷新队列且执行实际（&lt;strong&gt;已去重&lt;/strong&gt;）工作。&lt;/p&gt;
&lt;p&gt;看起来并没有什么引入虚拟 DOM 的必要，性能上似乎也还好。但是这么设计有个代价，每个状态对应一个 Watcher 实例来观察，内存开销以及依赖追踪开销在大型项目之中非常的大。&lt;/p&gt;
&lt;p&gt;于是，Vue2.0 就选择了一个中等粒度的折中方案：&lt;strong&gt;引入虚拟 DOM&lt;/strong&gt;。把 Watcher 实例观察的级别从状态改成组件级别，也就是说当状态发生变化的时候，只能通知到组件级别。然后组件内部通过虚拟 DOM 去进行比对和渲染。&lt;/p&gt;
&lt;p&gt;而且这个改动似乎也不大，因为前面的博客我们讲到，Watcher 只是一个中介，调整外界到 Watcher 的粒度，应该是对响应式核心的改动不大。&lt;/p&gt;
&lt;h1 id=&#34;vue中的虚拟dom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue中的虚拟dom&#34;&gt;#&lt;/a&gt; Vue 中的虚拟 DOM&lt;/h1&gt;
&lt;p&gt;在 Vue 之中，使用模板来描述状态和 DOM 的映射。Vue 会通过模板编译，将模板转换成渲染函数，通过执行这个函数就能够得到一个虚拟节点树。&lt;/p&gt;
&lt;p&gt;每次属性发生变化，会调用组件渲染函数&lt;strong&gt;生成&lt;/strong&gt;新的虚拟节点树，然后将新生成的虚拟节点树与上一次渲染视图使用的旧虚拟节点树进行&lt;strong&gt;对比&lt;/strong&gt;（&lt;strong&gt;diff&lt;/strong&gt;），再把要更新的地方进行 DOM 操作（&lt;strong&gt;patch&lt;/strong&gt;）。最后缓存这一次渲染视图使用的虚拟节点树的 VNode&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E6%B5%81%E7%A8%8B.png&#34; alt=&#34;流程&#34; title=&#34;VNode，即Virtual Node&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;vnode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vnode&#34;&gt;#&lt;/a&gt; VNode&lt;/h2&gt;
&lt;p&gt;在虚拟 DOM 中，VNode 即虚拟节点，在 Vue 中存在一个 VNode 类，用来实例化不同类型的 vnode 实例来表示不同类型的 DOM 节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;VNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;tag&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; children&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; elm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; componentOptions&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; asyncFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;children &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; children&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;VNode 实际上就是一个 JavaScript 对象。在渲染视图之中，Vue 会先创建 VNode，然后再使用它去生成真实 DOM，然后插入到页面渲染视图。&lt;/p&gt;
&lt;p&gt;VNode 的类型有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释节点&lt;/li&gt;
&lt;li&gt;文本节点&lt;/li&gt;
&lt;li&gt;元素节点&lt;/li&gt;
&lt;li&gt;组件节点&lt;/li&gt;
&lt;li&gt;函数式组件&lt;/li&gt;
&lt;li&gt;克隆节点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;patch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#patch&#34;&gt;#&lt;/a&gt; patch&lt;/h2&gt;
&lt;p&gt;patch 算法又叫 patching 算法，它主要是通过对比新旧 vnode 找到需要更新的节点进行更新。本质上其实就是用 JavaScript 的运算速度换 DOM 操作的执行成本。&lt;/p&gt;
&lt;p&gt;主要是两个算法：&lt;strong&gt;patchVnode&lt;/strong&gt; 和&lt;strong&gt; updateChildren&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;patch 算法的运行流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检测 oldVnode 是否存在。若不存在，则使用 vnode 创建节点插入视图。存在则进入下一步&lt;/li&gt;
&lt;li&gt;检测 oldVnode 和 vnode 是否是同一个节点。如果是则使用 patchVnode 进行更详细的对比与更新操作。&lt;/li&gt;
&lt;li&gt;若第二步不是，则使用 vnode 创建真实节点并插入到视图中旧节点的旁边，并将视图中的旧节点删除&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;patchvnode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#patchvnode&#34;&gt;#&lt;/a&gt; patchVnode&lt;/h2&gt;
&lt;p&gt;是同一个节点的情况下，会进入该算法进行更详细的对比和更新，patchVnode 的算法流程大致如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检测 vnode 与 oldVnode 是否完全一样？一样则退出，否则 2&lt;/li&gt;
&lt;li&gt;vnode 和 oldVnode 是静态节点？是则退出，否则 3&lt;/li&gt;
&lt;li&gt;vnode 有 text 属性？没有则代表是元素节点，有则检查 oldVnode 和 vnode 文本是否相同，不同就用 vnode 的文本替换真实 DOM 节点的内容否则 4&lt;/li&gt;
&lt;li&gt;如果 vnode 和 oldVnode 都存在子节点，且子节点不相同，就进入 updateChildren。否则进入 567 步逐个检测&lt;/li&gt;
&lt;li&gt;如果只有 vnode 子节点存在，则清空 DOM 中的文本并将 vnode 的子节点添加到 DOM 中。&lt;/li&gt;
&lt;li&gt;如果只有 oldVnode 存在子节点，则清空 DOM 中的子节点&lt;/li&gt;
&lt;li&gt;如果 oldVnode 中有文本，则清空 DOM 中的文本&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总而言之，尽量 vnode 为准来更新视图。&lt;/p&gt;
&lt;h2 id=&#34;updatechildren&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#updatechildren&#34;&gt;#&lt;/a&gt; updateChildren&lt;/h2&gt;
&lt;p&gt;更新子节点，也是 diff 的核心。主要是 4 种操作：更新节点、新增节点、删除节点、移动节点。并且在循环中进行比对&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新增子节点。&lt;/p&gt;
&lt;p&gt;这个好理解，当没有在 oldChildren 中找到本次循环所指向的新子节点的节点，就新建一个节点插入到所有未处理节点的前面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新子节点。同一个节点且同一位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移动子节点。同一个节点，但是位置不同，则把需要移动的节点移动到所有未处理节点的前面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除子节点。本质上是删除哪些 oldChildren 存在但 newChildren 不存在的节点。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了实现两端向中间遍历（即分辨出哪些节点被处理过 or 未处理过），这里 vue 用了四个变量来计算已处理和未处理的节点，oldStartIdx、oldEndIdx、newStartIdx、newEndIdx。分别表示 oldChildren 开始位置的下标和结束位置的下标、newChildren 开始位置的下标和结束位置的下标。&lt;/p&gt;
&lt;p&gt;因为查找对应节点这个过程是通过循环，比较耗时，因此 vue 对这个过程做了个优化策略，&lt;strong&gt;也就是双端对比&lt;/strong&gt;。同时从新旧 children 的两端开始比较，借助 key 值找到可复用的节点，再进行相关操作。&lt;/p&gt;
&lt;p&gt;大概有四个快捷查找方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新前与旧前&lt;/li&gt;
&lt;li&gt;新后与旧后&lt;/li&gt;
&lt;li&gt;新后与旧前&lt;/li&gt;
&lt;li&gt;新前与旧后&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;新前指的是 newChildren 中所有未处理节点的第一个节点，新后指的是 newChildren 中所有未处理节点的最后一个节点。旧前与旧后以此类推&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;其实就是顾名思义，先通过这四个快捷查找试探，如果找到了就不必循环查找，如果没找到才循环查找。&lt;/p&gt;
&lt;p&gt;即通过对比新前 / 后与旧前 / 后位置的节点，看看是不是同一个节点，是则不用循环查找。这样可以减少移动节点的次数和减少不必要的性能损耗。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;虚拟 DOM 中最关键的部分就是 patch。通过 patch 可以对比新旧两个虚拟 DOM，并只针对发生了变化的节点进行更新视图的操作。&lt;/p&gt;
&lt;p&gt;虚拟 DOM 也是 React 的核心技术之一。自从 Vue2.0 引入虚拟 DOM 后，初始渲染速度比 Vue1.0 提升了 2～4 倍，且大大降低了内存消耗。&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h1&gt;
&lt;p&gt;刘博文著的《深入浅出 Vue.js》&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/401340016&#34;&gt;diff 算法深入一下？ - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/149972619&#34;&gt;聊一聊 Diff 算法（React、Vue2.x、Vue3.x） - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/10/15/Vue/VueNote/</guid>
            <title>深入浅出Vue笔记————响应式系统篇</title>
            <link>http://zyczxq.com/2021/10/15/Vue/VueNote/</link>
            <category term="Vue" scheme="http://zyczxq.com/categories/Vue/" />
            <pubDate>Fri, 15 Oct 2021 17:30:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;参考资料 ——《深入浅出 Vue.js》刘博文著&lt;/p&gt;
&lt;p&gt;前四章，讲述变化侦测的笔记。&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概述&#34;&gt;#&lt;/a&gt; 概述&lt;/h1&gt;
&lt;p&gt;Vue 的变化侦测属于 “推”，当状态变化时，Vue 可以知道是哪些状态变化了。当状态变化了，它会向所有依赖这个状态的视图（或者说组件 / DOM 节点）发出更新通知&lt;/p&gt;
&lt;p&gt;在 Vue1.x 之中，Vue 对每个状态都进行依赖追踪，更新粒度相当的细，但是也带来了比较大的内存开销。&lt;/p&gt;
&lt;p&gt;在 Vue2.x 之中，引入了虚拟 DOM 并且把更新粒度调整到了组件级别（比状态级别要粗），但是也大大降低了依赖数量及依赖追踪所消耗的内存。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;尽管 Vue 调整到了组件级别，也仍然要比 React 更细：React 的做法是粗放的，它使用虚拟 DOM，若检查到该组件类型变化或数据变化，它会把以该组件为根的整个子树销毁重建或更新渲染。由于更新过程是同步的，于此同时也带来了性能问题，后来 React16 便引入了 React fiber 来解决这个问题。&lt;/p&gt;
&lt;p&gt;至于为什么 Vue 不用，因为 Vue 更新 DOM 是走的异步更新队列（与 React 的 this.setState 异曲同工），暂时还没有出现严重的性能问题。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;具体追踪&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体追踪&#34;&gt;#&lt;/a&gt; 具体追踪&lt;/h1&gt;
&lt;p&gt;追踪对象变化的方式有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Object.defineProperty&lt;/li&gt;
&lt;li&gt;Proxy（ES6）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Vue1.x 及 Vue2.x 之中，用的是前者。而在 Vue3.x 之中，用的是后者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 getter 中收集依赖，在 setter 中触发依赖&lt;/strong&gt;。就是说，先收集依赖，知道某个属性都在哪些地方被用上，然后当属性发生变化时，通知这些地方进行更新。&lt;/p&gt;
&lt;h2 id=&#34;dep存储依赖的地方&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dep存储依赖的地方&#34;&gt;#&lt;/a&gt; Dep—— 存储依赖的地方&lt;/h2&gt;
&lt;p&gt;既然说到依赖收集，那么我们就需要一个地方用来管理依赖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vue 之中封装了一个 Dep 类，专门用于管理依赖&lt;/strong&gt;。这个类可以用来收集、删除依赖、或者向依赖发出通知。&lt;/p&gt;
&lt;h2 id=&#34;watcher依赖类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#watcher依赖类型&#34;&gt;#&lt;/a&gt; Watcher—— 依赖类型&lt;/h2&gt;
&lt;p&gt;依赖收集好了，当属性发生变化时，就要向对应的依赖发出通知。但是依赖有很多种，他们不是统一的，可能是开发者写的一个 watch，也可能是在模板里面用，为了统一这个依赖，我们抽象出一个处理这个问题的类，这个类就叫做&lt;mark&gt; watcher&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;依赖收集阶段，我们只收集这个封装好的类的实例，通知也只通知这个实例，然后它再负责通知具体依赖。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Watcher&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;expOrFn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;cb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vm &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; vm&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 对应的 vue 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;parsePath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;expOrFn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 执行 this.getter ()，可以读取 data.a.b.c 的内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cb &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cb&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 更新时要调用的方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 利用 window.target 作中转，触发对象属性的 getter，getter 中自然会将 window.target 收集到对应的 dep 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; oldValue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 更新，传入新值和旧值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当某个属性的 getter 被触发时，会执行 Watcher 实例的 get 方法进行依赖收集。&lt;/p&gt;
&lt;p&gt;当某个属性改变（触发 setter 时），会将对应的 Dep 实例中收集到的依赖逐个通知，即通知 Watch 实例触发 update 方法。&lt;/p&gt;
&lt;h2 id=&#34;observer定义响应式对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#observer定义响应式对象&#34;&gt;#&lt;/a&gt; Observer—— 定义响应式对象&lt;/h2&gt;
&lt;p&gt;通过前面的 API，可以侦测到数据的变化，不过有时候会存在对象嵌套的现象，于是 Vue 封装一个 Observer 类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个类的作用是将一个对象内所有属性都转换成 getter/setter 的形式，然后追踪他们的变化&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Observer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 传入一个对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 数组的监听解决方案下面会说&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  * 当参数为 object 时被调用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; keys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;defineReactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;val&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; val &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;object&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Observer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 递归对象子属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; dep &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Dep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;defineProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;enumerable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;configurable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      dep&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;depend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; val&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newVal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;val &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; newVal&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      val &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newVal&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      dep&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;notify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当 data 中的属性发生变化时，这个属性对应的依赖就会收到通知。&lt;/p&gt;
&lt;p&gt;而由于 Object.defineProperty 这个 API 本身的问题，&lt;strong&gt;无法追踪新增的属性和删除的属性，也无法追踪到数组的修改&lt;/strong&gt;，而且它对于深层对象需要递归进行遍历，性能上不是那么的好。因此后续便使用的 ES6 的 Proxy 来进行替代。&lt;/p&gt;
&lt;h1 id=&#34;vue2中响应式的缺点及解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue2中响应式的缺点及解决方案&#34;&gt;#&lt;/a&gt; Vue2 中响应式的缺点及解决方案&lt;/h1&gt;
&lt;h3 id=&#34;缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺点&#34;&gt;#&lt;/a&gt; 缺点&lt;/h3&gt;
&lt;p&gt;Vue2 使用的是 Object.defineProperty 来进行数据劫持，也就是说，&lt;strong&gt;变化侦测的方式是通过 getter/setter 实现的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那么就会存在以下两个问题（刚刚也提到了）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无法检测属性的添加与移除&lt;/p&gt;
&lt;p&gt;因为在初始化时 Vue 对每个属性进行 getter/setter 转化，初始化时不存在的话就无法转化，自然也不是响应式的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无法检测数组的变动，如使用 push/pop 方法改变，或者利用索引直接设置、修改数组长度之类的变动。&lt;/p&gt;
&lt;p&gt;因为这些方法并不会触发 setter，自然也就无从监听了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h3&gt;
&lt;p&gt;前者的解决方案较简单：&lt;strong&gt;Vue 提供了一个 Vue.set (object,propertyName,value) 方法用于向嵌套对象添加响应式属性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;后者的解决方案就稍微复杂一点。Vue2 的解决办法是：&lt;strong&gt;将常用的数组方法进行重写，从而覆盖原生的数组方法 (push,pop,shift,unshift,splice,sort,reverse)&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;侦测数组的解决方案细节&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#侦测数组的解决方案细节&#34;&gt;#&lt;/a&gt; 侦测数组的解决方案细节&lt;/h3&gt;
&lt;p&gt;像上面所说的一样，&lt;strong&gt;首先新建一个以 Array.prototype 为原型的对象（伪数组原型，下面我们称之为拦截器），然后将其覆盖到要定义为响应式数组的原型上&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arrayProto &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arrayMethods &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arrayProto&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;push&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pop&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;shift&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;unshift&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;splice&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sort&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;reverse&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 缓存原始方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; original &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arrayProto&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;defineProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arrayMethods&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; method &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mutator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;args&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;original&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;enumerable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;writable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;configurable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;arrayMethods&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./array&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hasProto &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__proto__&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arrayKeys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOwnPropertyNames&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arrayMethods&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Observer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; augment &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hasProto &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; protoAugment &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; copyAugment&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;augment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arrayMethods&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arrayKeys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;protoAugment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; src&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; keys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__proto__ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; src&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;copyAugment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; src&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; keys&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; keys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; keys&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;def&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; src&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;这里为什么不直接覆盖 Array.prototype 呢？因为我们不希望直接覆盖全局，尽可能的不向外污染内部的设计，所以使用覆盖响应式对象的原型来代替。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;顺带一提，如果浏览器不支持_ _proto__来访问对象的原型，就&lt;strong&gt;直接将这些重写方法设置到被侦测的数组上&lt;/strong&gt;（因为原型屏蔽的原因，只有对象自身不存在该方法才按照原型链向上查找）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后，还需要进行依赖收集。Array 在 getter 中收集依赖，在拦截器中触发依赖&lt;/strong&gt;（当你调用方法修改数组时，实际上是调用拦截器的方法）。&lt;/p&gt;
&lt;p&gt;在 Vue.js 中，Array 的依赖存放在 Observer 中（对象是存在定义响应式对象的那个函数中，即 defineReactive），然后将 Observer 实例挂载到对应数组实例上，拦截器就能够访问 Observer 实例中的 dep 了。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;之所以存在那里，是为了让 getter 和拦截器都可以访问到依赖。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;通过覆盖，我们就也能知道数组自身的变化了，不过光是这样还不够，对于数组之中的元素我们也需要进行侦测。于是 Vue 中还会进行一次循环，将数组的每个元素通过 Observer 进行转化。同时对新增的元素也进行转化。&lt;/p&gt;
&lt;h1 id=&#34;vue3中的更改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue3中的更改&#34;&gt;#&lt;/a&gt; Vue3 中的更改&lt;/h1&gt;
&lt;p&gt;后来 Vue3 使用了 ES6 的 Proxy 进行重写响应式系统，不仅能够监听到对象属性的增加与删除，同时也能够监听数组的变化。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;总的来说，分为几个关键词：&lt;strong&gt;数据劫持（Vue3 是数据代理）、依赖收集、发布 / 订阅&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据劫持。Vue 之中使用 Observer 类，把一个对象的所有属性转换成 getter/setter。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依赖收集。&lt;/p&gt;
&lt;p&gt;简单来说，&lt;strong&gt;对象和数组都是在 getter 中进行依赖收集，但是对象在 setter 中触发依赖，而数组在拦截器中触发依赖&lt;/strong&gt;。因此，对象将依赖保存在 defineReactive 中，而数组将其保存在 Observer 实例中，并且将该 Observer 实例存放到数组上。&lt;/p&gt;
&lt;p&gt;依赖收集在 Dep 之中，依赖的类型则是 Watcher 实例。当外界某个地方依赖某个数据，通过 Watcher 读取数据时。新建的时候触发对应数据的 getter，通过&lt;strong&gt; window.target&lt;/strong&gt; 作为中转，在触发数据 getter 时收集到 Dep 实例中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发布 / 订阅模式。依赖收集的时候建立&lt;strong&gt;数据 - Watcher&lt;/strong&gt; 的对应关系其实就是订阅，当数据发生变化（数据的 setter 方法被调用），则会通过 dep.notify 通知对应的所有依赖（对应的所有 Watcher 实例），然后 Watcher 实例再通过自己的 update 方法通知外界进行更新。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前面说过，在 Vue1.x 之中，更新粒度是属性级别的，即一个属性对应一个 Watcher 实例。&lt;/p&gt;
&lt;p&gt;但在 Vue2.x 之中，更新粒度是组件级别的，&lt;strong&gt;即一个组件实例对应一个组件级的 Watcher 实例 (实际上在组件内部用户可以通过 $watch 方法创建 watcher)&lt;/strong&gt;。一个组件可能依赖很多数据，这些数据对应的 Dep 都收集了这个 Watcher 实例，在数据变化的过程中，只要一个数据变化，都会引起这个组件的重新渲染。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;不同数据的 Dep 可能收录同一个 Watcher 实例，数据的 Dep 可收录多个 Watcher 实例。（多对多）&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;Vue%E5%8F%98%E5%8C%96%E4%BE%A6%E6%B5%8B%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg&#34; alt=&#34;Vue变化侦测关系图&#34; title=&#34;如图所示&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;qa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#qa&#34;&gt;#&lt;/a&gt; Q&amp;amp;A&lt;/h1&gt;
&lt;h2 id=&#34;简述vue的响应式原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简述vue的响应式原理&#34;&gt;#&lt;/a&gt; 简述 Vue 的响应式原理？&lt;/h2&gt;
&lt;p&gt;主要是三个关键词，数据劫持、依赖收集、发布订阅模式。Vue 通过 Observer 类将对象转化成 getter/setter，将数组的原型用拦截器覆盖，都在 getter 中收集依赖存放到 Dep 实例中。对象在 setter 中通知依赖更新，而数组在拦截器中通知依赖。依赖就是 Watcher 实例，外界通过依赖读取数据，当数据发生变化时通知依赖，依赖再通知外界进行更新。&lt;/p&gt;
&lt;h2 id=&#34;vue2响应式原理的缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue2响应式原理的缺点&#34;&gt;#&lt;/a&gt; Vue2 响应式原理的缺点？&lt;/h2&gt;
&lt;p&gt;Vue2 中使用的是 Object.defineProperty 进行数据劫持，这个 API 对对象的每个属性进行遍历转化，因此 Vue2 无法监听新增 / 删除的属性。同时该响应式基于数据改变触发 setter 的基础，而数组的修改方法不触发 setter，需要进行重写覆盖。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/29/diary/</guid>
            <title>一点碎碎念</title>
            <link>http://zyczxq.com/2021/09/29/diary/</link>
            <pubDate>Wed, 29 Sep 2021 17:54:31 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;2021.9.29&lt;/p&gt;
&lt;p&gt;洗澡的的时候发呆，突然想起来，今年还发生了挺多事情的。&lt;/p&gt;
&lt;p&gt;先是年初的时候，大病一场，住院住了十多天，每天躺在病床上输液，当时跨年那一晚，我还在住院（因为身体太难受，当晚我还吐了），女朋友来照顾我（不得不说，有个伴侣就是好啊～）。好像是 1 月 5 号出院的吧，又面临着期末考试，当时最近的一场考试是 1 月 10 日。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E8%80%83%E8%AF%95%E5%AE%89%E6%8E%92.png&#34; alt=&#34;考试安排&#34; title=&#34;当时的考试安排&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因为生病，大三上整个学期的下半学期几乎是没有听课。整门课程有一半的东西还没学，而且前半部分学的也不是特别牢，我又不想申请缓考，这就导致了：&lt;strong&gt;出院的时候我只有三天的时间去应付最近的一门考试《编译原理》，还是最难的那一门，而且后面还有很多门一半没学的课程在等着我&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为住院养成的生物钟（早上六点半醒），让我 1.6-1.19 那段时间几乎是早上六点多醒，七点多起准备去图书馆学习，晚上学到十点多再回宿舍，丝毫不敢松懈，学到脑子觉得疲劳了也还在不断的提自己的效率。&lt;/p&gt;
&lt;p&gt;那两周真的是煎熬，我也不知道怎么熬过来的。仔细想想，那段时间几乎是我最拼的时候了：心无旁骛、满脑子只有知识点，不断的从书本、ppt 汲取知识，转化成自己的知识结构，再输出到试卷上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%E6%88%90%E7%BB%A9.png&#34; alt=&#34;成绩&#34; title=&#34;最终的考试成绩&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最终的结果其实还挺出乎我的意料的，准备时间最少、最难的课程编译原理我卷面分竟然考了 96，其他课程的成绩也还不错，当然比起大二的时候绩点就差了很多。&lt;/p&gt;
&lt;p&gt;考完试之后，我整个人也放松了许多。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;今年第二个阶段自然是春招了。3 月份的时候春招被挂麻了（自尊心受挫）。&lt;/p&gt;
&lt;p&gt;然后知耻而后勇，3 月 - 7 月那段时间一直在努力，强度虽然没有一月份准备考试那么强，但是也有一月份那时候的一半强度左右吧，每天下午学习学习，都说学习是个螺旋式上升的过程，那段时间我算是体会到了。理论看不懂，实践不会，也不知道该如何调整方向，不断撞瓶颈，突破，然后继续遇到新的瓶颈，迷茫，循环往复。&lt;/p&gt;
&lt;p&gt;所幸的是，我热爱编程，虽然学习的过程很苦，很枯燥，我还是坚持下来了。&lt;/p&gt;
&lt;p&gt;我还记得，当时的我因为春招（暑假实习）失利，一直处于一个非常卑微的状态。直到突然脉脉上某个字节 hr 找我，让我试试抖音部门（一开始本来她是找社招 3-5 年的，我说我是校招，然后她说加个微信，迟些校招岗位通知我）。我有点害怕，当时对这个部门里的人都抱着一种憧憬的感情，我觉得自己的能力还没有达到，很犹豫，但是我想想，还是决定拼一把。&lt;/p&gt;
&lt;p&gt;后来她最快的速度帮我安排了面试，也最快告诉我结果，本来我是抱着积攒面试经验的心态来面的，但是随着一轮轮面试的通过，我开始期待，我是不是有机会拿到字节抖音的 offer，后来 7.15 的时候知道自己面试过了，我简直是激动的无以复加，当时我和我女朋友在一起，直接拉着她一起激动了一整天。&lt;/p&gt;
&lt;p&gt;看到意向书的那一刻更是觉得整个世界的色彩都明媚了许多。仔细想想，如果不是她的话，我也许也不敢投字节抖音，我本来是打算投一些没那么核心的部门的，也就不会在秋招刚开始就给自己下了一剂猛药了，现在想起来还是特别的感谢那个字节 hr。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;直到今天（9.29），回想起之前的经历已经没有当初的悸动了，心情也趋于平淡，这些经历当初有多苦我已经不太记得了，我不希望自己忘记，希望我能够继续坚持学习下去，明年这个时候再来看看对比现在的自己又进步了多少，共勉！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/28/medical/waike52/</guid>
            <title>第五十二篇 尿路结石</title>
            <link>http://zyczxq.com/2021/09/28/medical/waike52/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Tue, 28 Sep 2021 21:30:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第五十二篇-尿路结石&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五十二篇-尿路结石&#34;&gt;#&lt;/a&gt; 第五十二篇 尿路结石&lt;/h1&gt;
&lt;h2 id=&#34;一-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概述&#34;&gt;#&lt;/a&gt; 一、概述&lt;/h2&gt;
&lt;h3 id=&#34;一-尿路结石的形成机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-尿路结石的形成机制&#34;&gt;#&lt;/a&gt; (一)  尿路结石的形成机制：&lt;/h3&gt;
&lt;p&gt;肾钙化斑、过饱和结晶、结石基质、晶体抑制物质、异质促进成核学说是结石形成的基本学说&lt;/p&gt;
&lt;h3 id=&#34;二-结石的病因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-结石的病因&#34;&gt;#&lt;/a&gt; (二)  结石的病因：&lt;/h3&gt;
&lt;p&gt;\1.    代谢异常：&lt;/p&gt;
&lt;p&gt;①　形成尿结石的物质排出增加；&lt;/p&gt;
&lt;p&gt;②　尿 pH 改变；&lt;/p&gt;
&lt;p&gt;③　尿中抑制晶体形成和聚集的物质减少&lt;/p&gt;
&lt;p&gt;\2.    局部病因：&lt;/p&gt;
&lt;p&gt;尿路梗阻、感染和尿路存在异物均是诱发结石形成的局部因素&lt;/p&gt;
&lt;p&gt;\3.    药物相关因素：&lt;/p&gt;
&lt;p&gt;一类为尿液的浓度高而溶解度比较低的药物；另一类为能够诱发结石形成的药物&lt;/p&gt;
&lt;h3 id=&#34;三-尿结石成分及性质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-尿结石成分及性质&#34;&gt;#&lt;/a&gt; (三)  尿结石成分及性质&lt;/h3&gt;
&lt;p&gt;\1.    草酸钙：硬，粗糙，不规则，棕褐色；X 线阳性&lt;/p&gt;
&lt;p&gt;\2.    磷酸钙：脆，粗糙，不规则，灰白色；X 线阳性&lt;/p&gt;
&lt;p&gt;\3.    尿酸：硬，光滑，类圆，黄色；X 线阴性&lt;/p&gt;
&lt;p&gt;\4.    胱氨酸：光滑，淡黄色，蜡样外观；X 线阴性&lt;/p&gt;
&lt;h3 id=&#34;四-病理生理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-病理生理&#34;&gt;#&lt;/a&gt; (四)  病理生理&lt;/h3&gt;
&lt;p&gt;\1.    尿路结石在肾和膀胱内形成&lt;/p&gt;
&lt;p&gt;\2.    肾结石常先发生在肾盏，由于结石使肾盏颈部梗阻，会引起肾盏积液或积脓&lt;/p&gt;
&lt;p&gt;\3.    鹿角形结石&lt;/p&gt;
&lt;p&gt;\4.    结石常停留或嵌顿于输尿管三个生理狭窄处&lt;/p&gt;
&lt;h2 id=&#34;二-上尿路结石&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-上尿路结石&#34;&gt;#&lt;/a&gt; 二、上尿路结石&lt;/h2&gt;
&lt;h3 id=&#34;一-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-临床表现&#34;&gt;#&lt;/a&gt; (一)  临床表现&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;疼痛&lt;/th&gt;
&lt;th&gt;1)     肾绞痛  ①　 肾区剧烈绞痛伴大汗   ②　 辗转不安，恶心，呕吐   ③　 沿输尿管走行放射  2)     腰部钝痛：见于肾盂不活动大结石&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;血尿&lt;/td&gt;
&lt;td&gt;肉眼血尿  镜下血尿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;恶心、呕吐&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;膀胱刺激症状&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;二-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-诊断&#34;&gt;#&lt;/a&gt; (二)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    病史和体检&lt;/p&gt;
&lt;p&gt;\2.    实验室检查&lt;/p&gt;
&lt;p&gt;①　尿：尿常规，24 小时尿钙和尿酸&lt;/p&gt;
&lt;p&gt;②　血：肾功能检查，血钙，磷，尿酸&lt;/p&gt;
&lt;p&gt;\3.    影像学检查&lt;/p&gt;
&lt;p&gt;①　B 超&lt;/p&gt;
&lt;p&gt;②　KUB、IVP&lt;/p&gt;
&lt;p&gt;③　CT：对 X 线不显影结石 / 难以确定的结石&lt;/p&gt;
&lt;p&gt;\4.    内镜检查： 膀胱镜 / 输尿管镜&lt;/p&gt;
&lt;h3 id=&#34;三-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-治疗&#34;&gt;#&lt;/a&gt; (三)  治疗&lt;/h3&gt;
&lt;p&gt;对尿石症的治疗必须实施病人个体化治疗，有时需要综合各种治疗方法&lt;/p&gt;
&lt;h4 id=&#34;1-病因治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因治疗&#34;&gt;#&lt;/a&gt; \1.    病因治疗&lt;/h4&gt;
&lt;p&gt;①　甲状旁腺瘤：手术切除&lt;/p&gt;
&lt;p&gt;②　解除尿路梗阻&lt;/p&gt;
&lt;h4 id=&#34;2-药物治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-药物治疗&#34;&gt;#&lt;/a&gt; \2.    药物治疗&lt;/h4&gt;
&lt;p&gt;①　药物排石：结石 &amp;lt; 0.6 cm、表面光滑、结石以下尿路无梗阻&lt;/p&gt;
&lt;p&gt;②　药物溶石：尿酸结石用枸橼酸氢钾钠、碳酸氢钠碱化尿液，口服别嘌呤醇；胱氨酸结石治疗需碱化尿液，使 pH&amp;gt;7.8，摄入大量液体&lt;/p&gt;
&lt;p&gt;③　控制感染：感染性结石需控制感染，口服氯化铵酸化尿液，应用脲酶抑制剂&lt;/p&gt;
&lt;p&gt;④　大量喝水&lt;/p&gt;
&lt;p&gt;⑤　肾绞痛：解痉、止痛。非甾体类镇痛抗炎药物及阿片类镇痛药；M 型胆碱受体阻断剂、钙通道阻滞剂、黄体酮等&lt;/p&gt;
&lt;h4 id=&#34;3-体外冲击波碎石eswl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-体外冲击波碎石eswl&#34;&gt;#&lt;/a&gt; \3.    体外冲击波碎石（ESWL）&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：通过 X 线或 B 超对结石进行定位，利用高能冲击波聚焦后作用于结石，使结石裂解，直至粉碎成细砂，随尿液排出体外&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁忌证：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　结石的远端梗阻&lt;/p&gt;
&lt;p&gt;②　急性尿路感染&lt;/p&gt;
&lt;p&gt;③　肾功能不全&lt;/p&gt;
&lt;p&gt;④　严重的内科疾病&lt;/p&gt;
&lt;p&gt;⑤　妊娠，安装心脏起搏器&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;并发症：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　血尿，感染，肾绞痛&lt;/p&gt;
&lt;p&gt;②　碎石后梗阻 ——“石街”&lt;/p&gt;
&lt;p&gt;③　肾脏损伤（碎石间隔 10～14 天）&lt;/p&gt;
&lt;h4 id=&#34;4-微创手术治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-微创手术治疗&#34;&gt;#&lt;/a&gt; \4.    微创手术治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;经皮肾镜碎石、取石&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输尿管镜碎石、取石&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输尿管软镜碎石、取石&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;5-腹腔镜输尿管切开取石及开放手术治疗open-surgery&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-腹腔镜输尿管切开取石及开放手术治疗open-surgery&#34;&gt;#&lt;/a&gt; \5.    腹腔镜输尿管切开取石及开放手术治疗（open surgery）&lt;/h4&gt;
&lt;h3 id=&#34;四-特殊上尿路结石的治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-特殊上尿路结石的治疗&#34;&gt;#&lt;/a&gt; (四)  特殊上尿路结石的治疗&lt;/h3&gt;
&lt;p&gt;双侧上尿路结石的手术治疗原则&lt;/p&gt;
&lt;p&gt;\1.    双侧输尿管结石，应尽可能同时解除梗阻&lt;/p&gt;
&lt;p&gt;\2.    一侧肾结石，另一侧输尿管结石时，先处理输尿管结石&lt;/p&gt;
&lt;p&gt;\3.    双侧肾结石时，在尽可能保留肾的前提下，先处理容易取出且安全的一侧&lt;/p&gt;
&lt;p&gt;\4.    孤立肾上尿路结石或双侧上尿路结石引起急性完全性梗阻无尿时，一旦诊断明确，只要病人全身情况许可，应及时施行手术&lt;/p&gt;
&lt;h3 id=&#34;五-预防&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-预防&#34;&gt;#&lt;/a&gt; (五)  预防&lt;/h3&gt;
&lt;p&gt;\1.    大量饮水&lt;/p&gt;
&lt;p&gt;\2.    调节饮食：草酸盐结石的病人应限制浓茶、菠菜、番茄、芦笋、花生等摄入。高尿酸的病人应避免高嘌呤食物如动物内脏&lt;/p&gt;
&lt;p&gt;\3.    还应限制钠盐、蛋白质的过量摄入，增加水果、蔬菜、粗粮及纤维素摄入&lt;/p&gt;
&lt;p&gt;\4.    特殊性预防：草酸盐结石病人可口服维生素 B6；酸结石病人可口服别嘌呤醇和碳酸氢钠；尿路梗阻、尿路异物、尿路感染&lt;/p&gt;
&lt;h2 id=&#34;三-下尿路结石&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-下尿路结石&#34;&gt;#&lt;/a&gt; 三、下尿路结石&lt;/h2&gt;
&lt;p&gt;下尿路结石包括膀胱结石和尿道结石&lt;/p&gt;
&lt;p&gt;原发性膀胱结石：与营养不良和低蛋白饮食有关，少见&lt;/p&gt;
&lt;p&gt;继发性膀胱结石：见于膀胱出口梗阻（如前列腺增生），膀胱憩室， 膀胱异物，肾结石排到膀胱等&lt;/p&gt;
&lt;h3 id=&#34;一-临床表现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-临床表现-2&#34;&gt;#&lt;/a&gt; (一)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    膀胱结石：典型症状 — 排尿突然中断伴疼痛，并放射&lt;/p&gt;
&lt;p&gt;\2.    尿道结石：排尿困难伴疼痛；急性尿潴留&lt;/p&gt;
&lt;p&gt;\3.    血尿和感染&lt;/p&gt;
&lt;h3 id=&#34;二-诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-诊断-2&#34;&gt;#&lt;/a&gt; (二)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    前尿道结石：可触及&lt;/p&gt;
&lt;p&gt;\2.    X 线检查 —— 膀胱平片&lt;/p&gt;
&lt;p&gt;\3.    B 超检查 —— 同时检查 BPH&lt;/p&gt;
&lt;p&gt;\4.    膀胱镜检查&lt;/p&gt;
&lt;h3 id=&#34;三-治疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-治疗-2&#34;&gt;#&lt;/a&gt; (三)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    膀胱结石：手术治疗并同时治疗病因&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;经膀胱镜碎石：液电，超声波，激光，气压弹道，大力碎石钳&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;耻骨上膀胱切开取石术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\2.    尿道结石：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;前尿道结石行直接取石&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后尿道结石先送回膀胱再治疗&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/23/JavaScript/v8-memoryManage/</guid>
            <title>V8的垃圾回收机制</title>
            <link>http://zyczxq.com/2021/09/23/JavaScript/v8-memoryManage/</link>
            <category term="前端" scheme="http://zyczxq.com/categories/JavaScript/" />
            <pubDate>Thu, 23 Sep 2021 19:32:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这里主要讲的是 Chrome 的 JavaScript 引擎 V8 的垃圾回收机制。&lt;/p&gt;
&lt;h1 id=&#34;内存限制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内存限制&#34;&gt;#&lt;/a&gt; 内存限制&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;V8 之中，对内存的使用有限制（64 位下约 1.4G、32 位下约 0.7G）——《深入浅出 Nodejs》&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为 V8 的内存管理机制是为浏览器而设计，而且为了避免长时间的垃圾回收阻塞 JavaScript 线程，所以就有这么一套限制。&lt;/p&gt;
&lt;p&gt;当然，也可以在启动时传递 --max-old-space-size 或 --max-new-space-size 来调整这个限制大小。但是只能在初始化 / 启动时指定，无法运行过程中扩充&lt;/p&gt;
&lt;h1 id=&#34;v8的垃圾回收机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v8的垃圾回收机制&#34;&gt;#&lt;/a&gt; V8 的垃圾回收机制&lt;/h1&gt;
&lt;p&gt;V8 的垃圾回收策略主要基于&lt;strong&gt;分代式垃圾回收机制&lt;/strong&gt;。在这个机制中，主要将内存分为&lt;strong&gt;新生代&lt;/strong&gt;和&lt;strong&gt;老生代&lt;/strong&gt;两代。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新生代：生存时间较短的对象&lt;/li&gt;
&lt;li&gt;老生代：生存时间较长的对象&lt;/li&gt;
&lt;li&gt;新生代空间较小，老生代空间较大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;1&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;新生代垃圾回收&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新生代垃圾回收&#34;&gt;#&lt;/a&gt; 新生代垃圾回收&lt;/h2&gt;
&lt;p&gt;新生代的垃圾回收算法主要通过&lt;strong&gt; Scavenge&lt;/strong&gt; 算法进行垃圾回收，该算法的流程主要是：&lt;/p&gt;
&lt;p&gt;将堆内存一分为二，一个处于使用中 (from)，一个处于闲置中 (To)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;2&#34; /&gt;&lt;/p&gt;
&lt;p&gt;分配内存时，会先分配到使用中的内存（from 空间），当开始进行垃圾回收的时候，回收生命周期结束的对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对对象区域进行垃圾回收（标记清除），留下在使用中的活跃对象&lt;/li&gt;
&lt;li&gt;把对象区域中剩下的活跃对象复制到空闲区域（复制过程会消除内存碎片）&lt;/li&gt;
&lt;li&gt;翻转，使用区域（from）和空闲区域 (To)&lt;strong&gt; 身份互换&lt;/strong&gt;。循环重复&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个算法是典型的牺牲空间换时间的算法（因为只能使用堆内存的一半）。&lt;/p&gt;
&lt;p&gt;该算法只复制存活的对象，而实际应用中新生代大多数对象的存活时间都是比较短的，所以时间效率上相对来说比较优异。但是每次都需要复制，而复制操作需要时间成本，如果新生区空间设置得太大了，那么每次清理的时间就会过久，所以为了执行效率，&lt;strong&gt;一般新生区的空间会被设置得比较小&lt;/strong&gt;（1～8m）。这也是为什么新生代内存空间相对老生代来说比较小。&lt;/p&gt;
&lt;h2 id=&#34;对象晋升策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象晋升策略&#34;&gt;#&lt;/a&gt; 对象晋升策略&lt;/h2&gt;
&lt;p&gt;当一个对象经过新生代垃圾回收中多次复制仍然存活时，它就会被认为是&lt;strong&gt;生命周期较长&lt;/strong&gt;的对象，随后会被移动到老生代内存空间中（也就是&lt;mark&gt;晋升&lt;/mark&gt;）。&lt;/p&gt;
&lt;p&gt;在上面新生代垃圾回收过程中，并不是每一次都会把对象复制到闲置空间（To）中，而是在复制之前，会先判断两个条件，如果满足条件，则会触发对象晋升，而不是复制到闲置空间中。&lt;/p&gt;
&lt;p&gt;这两个条件分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否经历过 Scavenge 回收（主要是通过内存地址判断）&lt;/li&gt;
&lt;li&gt;To 空间的内存占用比是否超过限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个条件达成其一即可。&lt;/p&gt;
&lt;p&gt;对象晋升后，会在老生代中被新的回收算法处理。&lt;/p&gt;
&lt;h2 id=&#34;老生代垃圾回收&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#老生代垃圾回收&#34;&gt;#&lt;/a&gt; 老生代垃圾回收&lt;/h2&gt;
&lt;p&gt;在老生代中，存活对象通常占的比重较大，所以复制的效率会相对较低，不适用 Scavenge 算法。&lt;/p&gt;
&lt;p&gt;V8 中老生代的垃圾回收主要采用了 **Mark-Sweep (标记 - 清除)&lt;strong&gt; 和&lt;/strong&gt; Mark-Compact (标记 - 整理)** 相结合的方式。&lt;/p&gt;
&lt;h3 id=&#34;mark-sweep标记-清除&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mark-sweep标记-清除&#34;&gt;#&lt;/a&gt; Mark-Sweep（标记 - 清除）&lt;/h3&gt;
&lt;p&gt;顾名思义，Mark-Sweep 叫做标记 - 清除，它分为两个阶段：&lt;strong&gt;标记&lt;/strong&gt;和&lt;strong&gt;清除&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标记阶段，Mark-Sweep 遍历堆中的所有对象，并标记活着的对象&lt;/li&gt;
&lt;li&gt;清除阶段，Mark-Sweep 清除没有被标记的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以对比出，Scavenge 只复制活着的对象，而 Mark-Sweep 只清理死亡对象。所以前者适合（&lt;strong&gt;复制场合少，即存活少的区域&lt;/strong&gt;）新生代，后者适合（&lt;strong&gt;清理场合少，即存活多的区域&lt;/strong&gt;）老生代。&lt;/p&gt;
&lt;p&gt;但是 Mark-Sweep 有一个比较严重的问题，就是清除后可能会有很多内存碎片，造成这些内存空间无法合理的利用，要消除内存碎片，就需要进行内存整理。&lt;/p&gt;
&lt;h3 id=&#34;mark-compact标记-整理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mark-compact标记-整理&#34;&gt;#&lt;/a&gt; Mark-Compact（标记 - 整理）&lt;/h3&gt;
&lt;p&gt;Mark-Compact 就是为了解决 Mark-Sweep 的问题而提出的。&lt;/p&gt;
&lt;p&gt;Mark-Compact，即标记 - 整理，是在标记 - 清除的基础上演变来的。它和 Mark-Sweep 的差别在于，&lt;strong&gt;当对象在标记为死亡后，在整理的过程中，将活着的对象往一端移动（整理），移动完成后，直接清理边界外的内存&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为 Mark-Compact 需要移动对象再进行清除，很明显，它比 Mark-Sweep 要慢。&lt;/p&gt;
&lt;h3 id=&#34;v8的策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v8的策略&#34;&gt;#&lt;/a&gt; V8 的策略&lt;/h3&gt;
&lt;p&gt;通过上面三种算法，我们可以得出一个对比表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;回收算法&lt;/th&gt;
&lt;th&gt;Scavenge&lt;/th&gt;
&lt;th&gt;Mark-Sweep&lt;/th&gt;
&lt;th&gt;Mark-Compact&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;速度&lt;/td&gt;
&lt;td&gt;最快&lt;/td&gt;
&lt;td&gt;快&lt;/td&gt;
&lt;td&gt;慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否有碎片&lt;/td&gt;
&lt;td&gt;没有 (复制黏贴过程中消除)&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;适用场景&lt;/td&gt;
&lt;td&gt;新生代 (存活对象少的地方)&lt;/td&gt;
&lt;td&gt;老生代 (存活对象多的地方)&lt;/td&gt;
&lt;td&gt;老生代&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Mark-Compact 慢，Mark-Sweep 有碎片，而 V8 在取舍上结合两种：&lt;strong&gt;主要使用 Mark-Sweep，当空间不足以分配空间给新生代中晋升的对象时，使用 Mark-Compact 消除内存碎片&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;V8 根据代际假说，将对象分为两部分：&lt;strong&gt;新生代与老生代&lt;/strong&gt;。并且对两部分使用不同的算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新生代使用 Scavenge 算法进行垃圾回收，这种算法牺牲空间来换取时间，实际上只利用了新生代一半的空间进行存储。但优点在于面对生命周期短的对象时速度较快，而且不会产生内存碎片。&lt;/li&gt;
&lt;li&gt;新生代中的对象一旦满足两个条件之一，就会进行对象晋升，将其移动到老生代区域。&lt;/li&gt;
&lt;li&gt;老生代使用 Mark-Sweep 及 Mark-Compact 两种结合。主要使用 Mark-Sweep，当碎片太多、不足以分配一块内存给晋升的对象时，就利用 Mark-Compact 进行整理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;v8垃圾回收算法的问题和解决方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v8垃圾回收算法的问题和解决方法&#34;&gt;#&lt;/a&gt; V8 垃圾回收算法的问题和解决方法&lt;/h1&gt;
&lt;p&gt;为了避免出现回收逻辑和 JavaScript 逻辑不一致的情况，当垃圾回收进行时，需要暂停 JavaScript 的应用逻辑，这种现象叫做&lt;strong&gt;全停顿&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在老生代的垃圾回收中，因为空间比较大，运行一次垃圾回收可能要占用相当长的一段时间，这段停顿时间可能会造成卡顿。&lt;/p&gt;
&lt;p&gt;为了减小停顿时间带来的影响，V8 引入了增量标记，即将一个同步一口气完成的动作分为许多个 “step”，在这些 step 之间可以穿插一些 JavaScript 应用逻辑（其实我总觉得和操作系统调度、React fiber 的改进思想有些异曲同工，都是分片），这样就不会长时间无响应。&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h1&gt;
&lt;p&gt;《深入浅出 Nodejs》—— 朴灵&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.poetries.top/browser-working-principle/guide/part3/lesson13.html&#34;&gt;https://blog.poetries.top/browser-working-principle/guide/part3/lesson13.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/22/medical/waike51/</guid>
            <title>第五十一篇  尿路梗阻</title>
            <link>http://zyczxq.com/2021/09/22/medical/waike51/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Wed, 22 Sep 2021 21:30:47 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第五十一篇-尿路梗阻&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五十一篇-尿路梗阻&#34;&gt;#&lt;/a&gt; 第五十一篇  尿路梗阻&lt;/h1&gt;
&lt;h2 id=&#34;一-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概述&#34;&gt;#&lt;/a&gt; 一、概述&lt;/h2&gt;
&lt;p&gt;・尿液在肾内形成后，经过肾盏、肾盂、输尿管、膀胱和尿道排出体外。&lt;/p&gt;
&lt;p&gt;・尿液的正常排出，有赖于尿路管腔通畅和排尿功能正常。&lt;/p&gt;
&lt;p&gt;・泌尿系统本身及其周围的许多疾病都可引起尿路梗阻，造成尿液排出障碍，引起梗阻近侧端尿路扩张积水。&lt;/p&gt;
&lt;p&gt;・泌尿系统许多疾病与泌尿系梗阻互为因果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;image-20210922212650050&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;一-病因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病因&#34;&gt;#&lt;/a&gt; (一)    病因&lt;/h3&gt;
&lt;p&gt;\1.    尿路结石&lt;/p&gt;
&lt;p&gt;\2.    泌尿生殖系统肿瘤&lt;/p&gt;
&lt;p&gt;\3.    前列腺增生症&lt;/p&gt;
&lt;p&gt;\4.    先天发育异常&lt;/p&gt;
&lt;p&gt;\5.    邻近器官病变的压迫和侵犯&lt;/p&gt;
&lt;p&gt;\6.    创伤或炎症引起的瘢痕狭窄&lt;/p&gt;
&lt;p&gt;\7.    中枢或周围神经受到损伤&lt;/p&gt;
&lt;p&gt;\8.    结核&lt;/p&gt;
&lt;p&gt;\9.    医源性输尿管梗阻&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;image-20210922212659952&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;二-病理生理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病理生理&#34;&gt;#&lt;/a&gt; (二)  病理生理&lt;/h3&gt;
&lt;h4 id=&#34;1-病-理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病-理&#34;&gt;#&lt;/a&gt; \1.    病 理：&lt;/h4&gt;
&lt;p&gt;基本病理改变是梗阻部位以上压力增高，尿路扩张积水，长时间梗阻将导致肾积水和肾功能损害。&lt;/p&gt;
&lt;h4 id=&#34;2-病理生理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病理生理&#34;&gt;#&lt;/a&gt; \2.    病理生理&lt;/h4&gt;
&lt;h5 id=&#34;1-上尿路梗阻&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-上尿路梗阻&#34;&gt;#&lt;/a&gt; 1)    上尿路梗阻：&lt;/h5&gt;
&lt;p&gt;①　肾盂内压↑→达到肾小球滤过压→肾小球停止滤过→尿液形成停止，肾血流仍正常；肾 “安全阀” 开放 — 肾盏在穹隆部开始有小裂隙→尿液渗至肾、肾盂周围→肾盂内压 ¯→肾小球滤过恢复→起到保护肾组织的作用→肾组织缺氧、萎缩。&lt;/p&gt;
&lt;p&gt;②　慢性梗阻→肾盂扩张、壁变薄→肾乳头萎缩→肾实质萎缩变薄→肾盂容积增大→大水囊。&lt;/p&gt;
&lt;p&gt;③　急性完全梗阻→轻度肾盂扩张，肾实质很快萎缩。&lt;/p&gt;
&lt;p&gt;④　梗阻后肾功能变化：肾小球滤过、肾血流减少；浓缩和酸化尿能力下降。&lt;/p&gt;
&lt;h5 id=&#34;2-下尿路梗阻&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-下尿路梗阻&#34;&gt;#&lt;/a&gt; 2)    下尿路梗阻：&lt;/h5&gt;
&lt;p&gt;①　膀胱小梁形成；&lt;/p&gt;
&lt;p&gt;②　出现残余尿；&lt;/p&gt;
&lt;p&gt;③　膀胱代偿功能丧失后，出现尿液自膀胱向输尿管反流，引起上尿路梗阻，进而形成肾积水&lt;/p&gt;
&lt;h2 id=&#34;二-肾积水&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-肾积水&#34;&gt;#&lt;/a&gt; 二、肾积水&lt;/h2&gt;
&lt;p&gt;尿液从肾盂排出受阻，蓄积后肾内压力增高，肾盂肾盏扩张，肾实质萎缩，功能减退，称为肾积水（hydronephrosis）。&lt;/p&gt;
&lt;p&gt;肾积水容量超过 1000ml 或小儿超过 24 小时尿液总量时，称为巨大肾积水。&lt;/p&gt;
&lt;h3 id=&#34;一-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-临床表现&#34;&gt;#&lt;/a&gt; (一)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    表现为原发病变的症状和体征。&lt;/p&gt;
&lt;p&gt;\2.    腰痛：隐痛不适或者剧烈绞痛。&lt;/p&gt;
&lt;p&gt;\3.    下尿路梗阻继发肾积水主要表现为排尿困难和膀胱不能排空，甚至出现尿潴留。&lt;/p&gt;
&lt;p&gt;\4.    不同程度的肾功能损害，严重者出现贫血、乏力、食欲不振、恶心等尿毒症症状。&lt;/p&gt;
&lt;p&gt;\5.    肾积水如并发感染，出现寒战、高热、腰痛及尿路刺激症状等。&lt;/p&gt;
&lt;p&gt;\6.    孤立肾完全梗阻时可出现无尿。&lt;/p&gt;
&lt;h3 id=&#34;二-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-诊断&#34;&gt;#&lt;/a&gt; (二)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    超声检查&lt;/p&gt;
&lt;p&gt;\2.    KUB+IVU&lt;/p&gt;
&lt;p&gt;\3.    逆行插管造影&lt;/p&gt;
&lt;p&gt;\4.    CT&lt;/p&gt;
&lt;p&gt;\5.    MRU&lt;/p&gt;
&lt;p&gt;\6.    肾穿刺顺行造影&lt;/p&gt;
&lt;p&gt;\7.    同位素肾图&lt;/p&gt;
&lt;p&gt;\8.    膀胱、尿道造影&lt;/p&gt;
&lt;p&gt;\9.    内镜检查&lt;/p&gt;
&lt;h3 id=&#34;三-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-治疗&#34;&gt;#&lt;/a&gt; (三)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    病因治疗：为理想的治疗方法。原则是去除病因，保留患肾。&lt;/p&gt;
&lt;p&gt;\2.    先行引流，再去除病因：经皮肾造瘘或者输尿管逆行插管。&lt;/p&gt;
&lt;p&gt;\3.    脓肾或巨大肾积水，对侧肾功能良好时：患肾切除。&lt;/p&gt;
&lt;h2 id=&#34;三-尿潴留&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-尿潴留&#34;&gt;#&lt;/a&gt; 三、尿潴留&lt;/h2&gt;
&lt;h3 id=&#34;一-概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概念&#34;&gt;#&lt;/a&gt; (一)  概念&lt;/h3&gt;
&lt;p&gt;尿潴留是指膀胱内充满尿液而不能排出，常常由排尿困难发展到一定程度引起。尿潴留分为急性与慢性两种。&lt;/p&gt;
&lt;h3 id=&#34;二-病因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病因&#34;&gt;#&lt;/a&gt; (二)  病因&lt;/h3&gt;
&lt;p&gt;引起尿潴留的病因很多，可分为机械性和动力性梗阻两类。&lt;/p&gt;
&lt;p&gt;\1.    机械性梗阻（最多见）：良性前列腺增生、前列腺肿瘤&lt;/p&gt;
&lt;p&gt;\2.    动力性梗阻：膀胱出口、尿道无器质性梗阻病变，尿潴留系排尿动力障碍所致。最常见的原因为中枢和周围神经系统病变，如脊髓或马尾损伤、肿瘤，糖尿病等，造成神经源性膀胱功能障碍引起。&lt;/p&gt;
&lt;h3 id=&#34;三-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-临床表现&#34;&gt;#&lt;/a&gt; (三)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    急性尿潴留：发病突然，膀胱内充满尿液不能排出，胀痛难忍，辗转不安。&lt;/p&gt;
&lt;p&gt;\2.    慢性尿潴留：多表现为排尿不畅、尿频，常有排尿不尽感，有时出现尿失禁现象。少数病人虽无明显慢性尿潴留梗阻症状，但已有明显上尿路扩张、肾积水，甚至出现尿毒症症状，如全身衰弱、食欲不振、恶心、呕吐、贫血、血清肌酐和尿素氮显著升高等。&lt;/p&gt;
&lt;h3 id=&#34;四-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-诊断&#34;&gt;#&lt;/a&gt; (四)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    根据病史及典型的临床表现诊断。&lt;/p&gt;
&lt;p&gt;\2.    体检时耻骨上区常可见到半球形膨隆，用手按压有明显尿意，叩诊为浊音。&lt;/p&gt;
&lt;p&gt;\3.    B 超检查可以明确诊断。&lt;/p&gt;
&lt;p&gt;\4.    尿潴留应与无尿鉴别，后者是指肾衰竭或上尿路完全梗阻，膀胱内空虚无尿。&lt;/p&gt;
&lt;h3 id=&#34;五-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    急性尿潴留：治疗原则是解除病因，恢复排尿。&lt;/p&gt;
&lt;p&gt;\2.    急诊处理：导尿术（是解除急性尿潴留最简便常用的方法）。急性尿潴留病人在不能插入导尿管时，可在局麻下直接或 B 超引导下行耻骨上膀胱穿刺造瘘，持续引流尿液。&lt;/p&gt;
&lt;p&gt;\3.    慢性尿潴留：若为机械性梗阻病变引起，有上尿路扩张肾积水、肾功能损害者，应先行膀胱尿液引流；如系动力性梗阻引起，多数病人需间歇清洁自我导尿或耻骨上膀胱造瘘术。&lt;/p&gt;
&lt;h2 id=&#34;四-良性前列腺增生&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-良性前列腺增生&#34;&gt;#&lt;/a&gt; 四、良性前列腺增生&lt;/h2&gt;
&lt;h3 id=&#34;一-概念-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概念-2&#34;&gt;#&lt;/a&gt; (一)  概念&lt;/h3&gt;
&lt;p&gt;表现为组织学上的前列腺间质和腺体成分的增生、解剖学上的前列腺增大、尿动力学上的膀胱出口梗阻和以下尿路症状（LUTS）为主的临床症状&lt;/p&gt;
&lt;h3 id=&#34;二-病-因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病-因&#34;&gt;#&lt;/a&gt; (二)  病 因&lt;/h3&gt;
&lt;p&gt;\1.    老龄 + 有功能的睾丸：是前列腺增生发病的两个重要因素，二者缺一不可。&lt;/p&gt;
&lt;p&gt;\2.    受性激素的调控，前列腺间质细胞和腺上皮细胞相互影响，各种生长因子的作用，随着年龄增大体内性激素平衡失调以及雌、雄激素的协同效应等，可能是前列腺增生的重要病因。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;3.png&#34; alt=&#34;image-20210922212742642&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-病-理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-病-理&#34;&gt;#&lt;/a&gt; (三)  病 理&lt;/h3&gt;
&lt;p&gt;\1.    增生的部分为：移行带。&lt;/p&gt;
&lt;p&gt;\2.    外科包膜：被压缩的外周腺体。&lt;/p&gt;
&lt;p&gt;\3.    膀胱颈部的平滑肌内含有丰富的 α 肾上腺素能受体，受体激活使该处平滑肌收缩，增加尿道阻力。&lt;/p&gt;
&lt;p&gt;\4.       膀胱小梁，真、假憩室形成。&lt;/p&gt;
&lt;h3 id=&#34;四-病理生理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-病理生理&#34;&gt;#&lt;/a&gt; (四)  病理生理&lt;/h3&gt;
&lt;p&gt;\1.    代偿期：&lt;/p&gt;
&lt;p&gt;①　逼尿肌代偿性肥大，&lt;/p&gt;
&lt;p&gt;②　膀胱壁增厚，增加收缩力，&lt;/p&gt;
&lt;p&gt;③　出现小梁小室改变&lt;/p&gt;
&lt;p&gt;\2.    失代偿期：膀胱壁肌肉萎缩、变薄，张力减退，膀胱残余尿增多，最终出现充盈性尿失禁、尿潴留、膀胱输尿管反流并导致肾功能受损&lt;/p&gt;
&lt;h3 id=&#34;五-临床表现luts临床症状&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-临床表现luts临床症状&#34;&gt;#&lt;/a&gt; (五)  临床表现（LUTS 临床症状）&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;储尿期症状：尿频、尿急、尿失禁、夜尿增多&lt;/li&gt;
&lt;li&gt;排尿期症状：排尿困难&lt;/li&gt;
&lt;li&gt;排尿后症状：排尿不尽、尿后滴沥&lt;/li&gt;
&lt;li&gt;其它症状：血尿、肾积水、肾功能不全感染、结石、腹股沟疝、内痔等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;六-诊-断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-诊-断&#34;&gt;#&lt;/a&gt; (六)  诊 断&lt;/h3&gt;
&lt;p&gt;\1.    国际前列腺症状（I-PSS）评分。&lt;/p&gt;
&lt;p&gt;\2.    体检：直肠指检，了解前列腺大小、质地、有无硬结、压痛等。&lt;/p&gt;
&lt;p&gt;\3.    B 超：大小、结节回声、残余尿。&lt;/p&gt;
&lt;p&gt;\4.    尿流动力学：最大尿流率小于 15ml/s。&lt;/p&gt;
&lt;p&gt;\5.    血清前列腺特异性抗原 PSA：排除前列腺癌。&lt;/p&gt;
&lt;p&gt;\6.    尿道膀胱镜检查&lt;/p&gt;
&lt;h3 id=&#34;七-鉴别诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-鉴别诊断&#34;&gt;#&lt;/a&gt; (七)  鉴别诊断&lt;/h3&gt;
&lt;p&gt;\1.    前列腺癌：前列腺指诊、PSA、MRI、前列腺穿刺活检&lt;/p&gt;
&lt;p&gt;\2.    膀胱颈挛缩：发病年龄较轻、前列腺体积不大、膀胱镜检查&lt;/p&gt;
&lt;p&gt;\3.    尿道狭窄：尿道损伤或感染史、尿道造影、膀胱尿道镜检查&lt;/p&gt;
&lt;p&gt;\4.    神经源性膀胱功能障碍：神经系统损坏病史、尿动力学检查&lt;/p&gt;
&lt;h3 id=&#34;八-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#八-治疗&#34;&gt;#&lt;/a&gt; (八)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    等待观察&lt;/p&gt;
&lt;p&gt;\2.    药物治疗&lt;/p&gt;
&lt;p&gt;①　a 受体阻滞剂：平滑肌张力 ¯，尿道阻力 ¯，排尿症状改善&lt;/p&gt;
&lt;p&gt;②　5α 还原酶抑制剂：抑制睾酮向双氢睾酮转变→缩小前列腺体积，改善排尿症状；&lt;/p&gt;
&lt;p&gt;③　植物制剂等。&lt;/p&gt;
&lt;p&gt;\3.    手术治疗：经尿道前列腺电切术（TURP）、经尿道激光治疗、开放手术&lt;/p&gt;
&lt;p&gt;\4.    其他疗法：球囊扩张等、前列腺动脉栓塞术（PAE）&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/21/Node/Node1/</guid>
            <title>Node学习笔记一</title>
            <link>http://zyczxq.com/2021/09/21/Node/Node1/</link>
            <category term="Node" scheme="http://zyczxq.com/categories/Node/" />
            <pubDate>Tue, 21 Sep 2021 15:34:58 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这段时间在学习 Node，看书、看文档资料的时候概念感觉太乱了，于是打算写一篇文章来整理自己学到的知识，就有了这篇文章）&lt;/p&gt;
&lt;h1 id=&#34;node简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node简介&#34;&gt;#&lt;/a&gt; Node 简介&lt;/h1&gt;
&lt;p&gt;Node.js 是一个开源、跨平台的 JavaScript 运行时环境。2009 年的时候，Ryan Dahl 想开发一个高性能的 web 服务器，经过一番深思熟虑，他最终选择了 JavaScript 作为 Node 的实现语言。时至今日，Node 已经成为最火热的技术之一。&lt;/p&gt;
&lt;h1 id=&#34;node的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node的特点&#34;&gt;#&lt;/a&gt; Node 的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;事件驱动&lt;/p&gt;
&lt;p&gt;和浏览器端 JavaScript 类似，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;异步 I/O&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单线程&lt;/p&gt;
&lt;p&gt;准确来说是 JavaScript 的执行是单线程的，其实 Node 中不同平台内部完成 I/O 任务另有线程池&lt;/p&gt;
&lt;p&gt;但其实类似前端浏览器中的&lt;strong&gt; Web Workers&lt;/strong&gt;，Node 也提供了创建子进程的方法来高效的利用 CPU 和 I/O&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;跨平台&lt;/p&gt;
&lt;p&gt;Node 基于&lt;strong&gt; libuv&lt;/strong&gt; 实现跨平台（libuv 是一个跨平台的异步 I/O 库，它提供的内容不仅是 I/O，还有进程、线程、定时器、线程池等。）&lt;/p&gt;
&lt;p&gt;Node 用 libuv 作为抽象封装层，使得所有平台兼容性的判断由该层来完成。&lt;strong&gt;Node 在编译时会判断平台条件，选择性编译 unix 目录或 win 目录下的源文件到目标程序中&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;node与浏览器上的javascript不同之处&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node与浏览器上的javascript不同之处&#34;&gt;#&lt;/a&gt; Node 与浏览器上的 JavaScript 不同之处&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;面向范围不同&lt;/p&gt;
&lt;p&gt;浏览器上的 JavaScript 是用于前端开发的，而 Node 是用于 Web 服务器开发的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语言组成不同&lt;/p&gt;
&lt;p&gt;在前端中，&lt;strong&gt;JavaScript = ECMAScript + DOM + BOM&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Node 中的语言（按我的理解）是等于&lt;strong&gt; ECMAScript + 和操作系统交互的 API（诸如读取文件等）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行环境不同&lt;/p&gt;
&lt;p&gt;前端的 JavaScript 跑在浏览器中的 js 引擎 (不同浏览器的 js 引擎不同，如最经典的 Chrome 的引擎是 V8，除此之外还有 SpiderMonkey、Nitro 等)，是被限制在浏览器中的沙箱的。&lt;/p&gt;
&lt;p&gt;Node.js 在浏览器外运行&lt;strong&gt; V8&lt;/strong&gt;（Chrome 的 JavaScript 引擎）。基于 V8 的执行效率，Node 的计算能力也是比较优秀的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;node应用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node应用场景&#34;&gt;#&lt;/a&gt; Node 应用场景&lt;/h1&gt;
&lt;p&gt;显然，异步 I/O 的使用场景最大就是&lt;strong&gt; I/O 密集型场景&lt;/strong&gt;。它的优势主要在于 Node 利用事件循环的处理能力。&lt;/p&gt;
&lt;h1 id=&#34;node零碎基础知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node零碎基础知识&#34;&gt;#&lt;/a&gt; Node（零碎）基础知识&lt;/h1&gt;
&lt;h2 id=&#34;从命令行接收输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从命令行接收输入&#34;&gt;#&lt;/a&gt; 从命令行接收输入&lt;/h2&gt;
&lt;p&gt;利用 readline 模块创建一个接口从 process.stdin 读取&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; readline &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;readline&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createInterface&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stdin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stdout&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;readline&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;what\&#39;s your name? \n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;hello! &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;$&amp;#123;&lt;/span&gt;name&lt;span class=&#34;token interpolation-punctuation punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  readline&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;node模块规范&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node模块规范&#34;&gt;#&lt;/a&gt; Node 模块规范&lt;/h2&gt;
&lt;p&gt;Node 中模块规范用的是 CommonJS 规范，它的使用方式大致如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 模块引用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; http &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导出一&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;exports&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导出二&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;它的特点有以下几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CommonJS 以同步的方式加载模块。这一点其实可以理解，因为 Node 通常是运行于服务端，而在服务端模块文件通常存放在本地磁盘，读取速度比起前端通过网络下载要快得多，所以一般没有什么问题（但是因此也不适用于前端）&lt;/li&gt;
&lt;li&gt;CommonJS 输出的是模块的拷贝，这一点与 ESNext 模块不同。模块一旦输出后便独立（即后续更改不影响）&lt;/li&gt;
&lt;li&gt;Node 中对引入过的模块都会进行缓存，减少后续引入的开销。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心模块&#34;&gt;#&lt;/a&gt; 核心模块&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;util，提供常用函数的集合。如 util.inspect (将任意对象转换为字符串)、util.isArray 等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fs，文件系统 API，用于操作文件。&lt;/p&gt;
&lt;p&gt;如 fs.readFile (用于异步读取文件)、fs.open、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http，用于创建服务器。如 http.createServer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;url，提供一些操作 url 的方法，如获取 url 中的参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;path，用于处理和转换文件路径的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;还有等等非常多的模块。&lt;/p&gt;
&lt;h2 id=&#34;全局对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局对象&#34;&gt;#&lt;/a&gt; 全局对象&lt;/h2&gt;
&lt;p&gt;在浏览器中的 JavaScript，全局对象通常是 window。而在 Node 中，全局对象是 global。&lt;/p&gt;
&lt;p&gt;一般来说我们有几个常常使用的变量&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;process，用于描述当前 Node 进程状态的对象。经常用的有很多，如 process.env.NODE_ENV 用于描述是开发环境（development）或者生产环境（production）&lt;/li&gt;
&lt;li&gt;__filename，它表示当前正在执行的文件名。它会输出文件所在位置的绝对路径。&lt;/li&gt;
&lt;li&gt;__dirname，它表示当前执行脚本的目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;buffer正确拼接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#buffer正确拼接&#34;&gt;#&lt;/a&gt; Buffer 正确拼接&lt;/h2&gt;
&lt;p&gt;不要这样：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; fs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createReadStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test.md&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;chunk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  data&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;chunk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 这里相当于 data = data.toString () + chunk.toString ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这种情况下，宽字节的中文在 Buffer 转 String 时有可能会被截断、无法正常显示（出现乱码）&lt;/p&gt;
&lt;p&gt;最好的办法就是将 Buffer 正确拼接成一段大 Buffer 后，再进行转 String 操作。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; chunks &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;chunk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  chunks&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chunk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  size &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; chunk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; buf &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Buffer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chunks&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; iconv&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;node重点知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node重点知识&#34;&gt;#&lt;/a&gt; Node 重点知识&lt;/h1&gt;
&lt;h2 id=&#34;node事件循环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node事件循环&#34;&gt;#&lt;/a&gt; Node 事件循环&lt;/h2&gt;
&lt;p&gt;Node 中的事件循环与浏览器中的事件循环不太一样，浏览器环境下的就不详细讲了，见我的其他博客：&lt;a href=&#34;https://zyczxq.com/2021/06/06/JavaScript/JSnote6/&#34;&gt;JavaScript 运行机制笔记 - 前端 | orange&#39;s blog = orange&#39;s blog = 橙子的博客 (zyczxq.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;事件循环是 Node 处理非阻塞 I/O 的机制。&lt;/p&gt;
&lt;p&gt;Node 中使用 libuv 来进行 I/O 处理，Node 中的 Event Loop 也是基于 libuv 实现的。&lt;/p&gt;
&lt;p&gt;Node 中的 Event loop 共分为 6 个阶段，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight tex&#34;&gt;&lt;figcaption data-lang=&#34;TeX&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;┌───────────────────────────┐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;┌─&gt;│           timers          │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  └─────────────┬─────────────┘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  ┌─────────────┴─────────────┐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  │     pending callbacks     │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  └─────────────┬─────────────┘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  ┌─────────────┴─────────────┐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  │       idle, prepare       │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  └─────────────┬─────────────┘      ┌───────────────┐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  ┌─────────────┴─────────────┐      │   incoming:   │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  │           poll            │&amp;lt;─────┤  connections, │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  └─────────────┬─────────────┘      │   data, etc.  │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  ┌─────────────┴─────────────┐      └───────────────┘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  │           check           │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  └─────────────┬─────────────┘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│  ┌─────────────┴─────────────┐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;└──┤      close callbacks      │&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   └───────────────────────────┘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;timers（&lt;strong&gt;定时器&lt;/strong&gt;）。执行 setTimeout、setInterval 中到期的 callback。这里其实是由轮询阶段来控制定时器何时执行，而且不是精确的时间，有可能因为操作系统调度而被延迟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pending callback（&lt;strong&gt;待定回调&lt;/strong&gt;）。执行延迟到下一个循环迭代的 I/O 回调。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;idle，prepare。仅内部使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;poll（&lt;strong&gt;轮询&lt;/strong&gt;）。检索新的 I/O 事件；执行与 I/O 相关的回调（几乎所有情况下，除了关闭的回调函数，那些由计时器和  &lt;code&gt;setImmediate()&lt;/code&gt;  调度的之外），其余情况 node 将在适当的时候在此阻塞。也就是说，如果执行的时间比较长，有可能定时器超时都还没返回 timers 阶段执行定时器。&lt;/p&gt;
&lt;p&gt;如果轮询队列不为空，事件循环将循环访问队列并同步执行直到空。&lt;/p&gt;
&lt;p&gt;如果轮询队列是空的，有两件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果脚本被 setImmediate 调度，则事件循环结束轮询，进入 check（检查）阶段执行那些被调度的脚本&lt;/li&gt;
&lt;li&gt;如果没有被 setImmediate 调度，则事件循环会等待回调被添加到队列中，然后立即执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这个过程中，一旦轮询队列为空，&lt;strong&gt;事件循环还会检查已经到达时间阈值（或者超时）的计时器，如果有就回到定时器阶段执行对应的回调&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;check（&lt;strong&gt;检测&lt;/strong&gt;）。执行 setImmediate 回调。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;close callbacks（关闭的回调函数）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在每次运行的事件循环之间，Node.js 检查它是否在等待任何异步 I/O 或计时器，如果没有的话，则完全关闭。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;process.nextTick () 不是事件循环的一部分，它在事件循环的每个阶段完成之后，和微任务一样去执行（&lt;strong&gt;但它比其他的微任务优先级都要高&lt;/strong&gt;）&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;setimmediate对比settimeout&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#setimmediate对比settimeout&#34;&gt;#&lt;/a&gt; setImmediate () 对比 setTimeout ()&lt;/h3&gt;
&lt;p&gt;主要是调用时机不同。&lt;/p&gt;
&lt;p&gt;setImmediate 在当前轮询阶段完成后，就执行脚本。而 setTimeout 在最小阈值过后运行脚本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行计时器的顺序将根据调用他们的上下文而异。如果两者都从主模块内调用，则受进程性能的约束（顺序是非确定性的）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是在异步 I/O callback 内部调用时，总是先执行 setImmediate，再执行 setTimeout&lt;/strong&gt;。因为 I/O 回调在 poll 阶段执行，当执行完后队列为空时，存在 setImmediate 回调的话会先跳转到 check 阶段去执行回调。&lt;/p&gt;
&lt;h3 id=&#34;processnexttick-setimmediate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#processnexttick-setimmediate&#34;&gt;#&lt;/a&gt; process.nextTick()、setImmediate()&lt;/h3&gt;
&lt;p&gt;process.nextTick () 比 setImmediate () 触发的更快。如果想设置立即异步执行一个任务，最好不要使用 setTimeout (fn,0)，而是使用 process.nextTick () 或 setImmediate ()。&lt;/p&gt;
&lt;p&gt;定时器不够准确，很多时候会超时，而且嵌套调用最小单位 4ms、未激活页面最小间隔 1000ms 等都不够精确、底层红黑树的操作时间复杂度为 O（lg (n)），而 nextTick 为 O (1)，更高效。&lt;/p&gt;
&lt;h3 id=&#34;与浏览器事件循环的差异&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与浏览器事件循环的差异&#34;&gt;#&lt;/a&gt; 与浏览器事件循环的差异？&lt;/h3&gt;
&lt;p&gt;浏览器会在每个宏任务执行完毕后清空微任务队列&lt;/p&gt;
&lt;p&gt;而 Node 中微任务（microtask）在事件循环的各个阶段执行。即每个阶段执行完毕，就会去执行 microtask 队列的任务。&lt;/p&gt;
&lt;h2 id=&#34;内存控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内存控制&#34;&gt;#&lt;/a&gt; 内存控制&lt;/h2&gt;
&lt;p&gt;Node 的内存控制基于 V8 的内存控制，基本是一样的，不再重复，见：&lt;a href=&#34;https://zyczxq.com/2021/09/23/JavaScript/v8-memoryManage/&#34;&gt;https://zyczxq.com/2021/09/23/JavaScript/v8-memoryManage/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;http://nodejs.cn/&#34;&gt;Node.js 中文网 (nodejs.cn)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;朴灵的《深入浅出 nodejs》&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/15/medical/waike50/</guid>
            <title>第五十篇 泌尿、男生殖系统结核</title>
            <link>http://zyczxq.com/2021/09/15/medical/waike50/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Wed, 15 Sep 2021 21:30:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第五十篇-泌尿-男生殖系统结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五十篇-泌尿-男生殖系统结核&#34;&gt;#&lt;/a&gt; 第五十篇 泌尿、男生殖系统结核&lt;/h1&gt;
&lt;h2 id=&#34;一-泌尿系统结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-泌尿系统结核&#34;&gt;#&lt;/a&gt; 一、泌尿系统结核&lt;/h2&gt;
&lt;h3 id=&#34;一-病理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病理&#34;&gt;#&lt;/a&gt; (一)  病理&lt;/h3&gt;
&lt;h4 id=&#34;1-肾结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-肾结核&#34;&gt;#&lt;/a&gt; \1.    肾结核&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;1.jpg&#34; alt=&#34;image-20210915210722190&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早期：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　结核结节、结核肉芽肿&lt;/p&gt;
&lt;p&gt;②　肾皮质内多发性结核结节，是由淋巴细胞、浆细胞、巨噬细胞和上皮样细胞形成的结核性肉芽组织&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;逐渐蔓延：结核结节融合 → 干酪样脓肿、溃疡性空洞 → 结核性脓肾或肾积脓 → 纤维化、钙化、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;＂肾自截”：若输尿管完全闭塞，尿液不能排入膀胱，结核性膀胱炎将逐渐好转，尿路刺激症状亦可缓解甚至消失，但肾却因坏死物质积聚而被广泛破坏，功能损坏甚至全部丧失，这就是所谓的 “自行肾切除”（autonephrectomy）或 “肾自截”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-输尿管结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-输尿管结核&#34;&gt;#&lt;/a&gt; \2.    输尿管结核&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;早期：表现为黏膜、黏膜下层结核结节、溃疡、肉芽肿和纤维化，病变是多发性的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后期：病变修复愈合后，管壁纤维化增粗变硬，管腔呈节段性狭窄，致使尿流下行受阻，引起肾积水，加速肾结核病变发展，肾功能受到进一步损害，甚至发展成为结核性脓肾，肾功能完全丧失&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-膀胱结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-膀胱结核&#34;&gt;#&lt;/a&gt; \3.    膀胱结核&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;早期：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　黏膜充血、水肿，散在结核结节形成，病变常从病侧输尿管口周围开始，逐渐扩散至膀胱的其他处&lt;/p&gt;
&lt;p&gt;②　结核结节可互相融合形成溃疡、肉芽肿，有时深达肌层，结核性溃疡较少见&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;晚期：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　可累及全部的膀胱，病变愈合致使膀胱壁广泛纤维化和瘢痕收缩，使膀胱壁失去伸张能力，膀胱容量显著减少（不足 50ml） ，称为挛缩膀胱（ contractcd bladder ）。&lt;/p&gt;
&lt;p&gt;②　膀胱结核病变及挛缩膀胱常可致健侧输尿管口狭窄或闭合不全，形成洞穴样输尿管管口。&lt;/p&gt;
&lt;p&gt;③　膀胱内压升高，导致肾盂尿液梗阻或膀胱尿液反流，引起对侧肾积水。&lt;/p&gt;
&lt;p&gt;④　挛缩膀胱和对侧肾积水都是肾结核常见的晚期并发症。&lt;/p&gt;
&lt;p&gt;⑤　膀胱壁结核溃疡向深层侵及，偶可穿透膀胱壁与邻近器官形成瘘，如结核性膀胱阴道瘘或膀胱直肠瘘&lt;/p&gt;
&lt;h4 id=&#34;4-尿道结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-尿道结核&#34;&gt;#&lt;/a&gt; \4.    尿道结核&lt;/h4&gt;
&lt;p&gt;主要发生于男性，常为前列腺、精囊结核形成空洞破坏后尿道所致，少数为膀胱结核蔓延引起。其病理改变主要是结核性溃疡、纤维化导致尿道狭窄，引起排尿困难，加剧肾功能损害&lt;/p&gt;
&lt;h3 id=&#34;二-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-临床表现&#34;&gt;#&lt;/a&gt; (二)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    尿频、尿急、尿痛：是肾结核的典型症状之一：&lt;/p&gt;
&lt;p&gt;晚期膀胱发生挛缩，容量显著缩小，尿频更加严重，每日排尿次数达数十次，甚至出现尿失禁现象&lt;/p&gt;
&lt;p&gt;\2.    血尿：是肾结核的重要症状，常为终末血尿：&lt;/p&gt;
&lt;p&gt;肾结核的血尿常在尿频、尿急、尿痛症状发生以后出现，但也有以血尿为初发症状者&lt;/p&gt;
&lt;p&gt;\3.    脓尿：是肾结核的常见症状&lt;/p&gt;
&lt;p&gt;\4.    腰痛和肿块：肾结核虽然主要病变在肾，但一般无明显腰痛&lt;/p&gt;
&lt;p&gt;仅少数肾结核病变破坏严重和梗阻，发生结核性脓肾或继发肾周感染，或输尿管被血块、干酪样物质堵塞时，可引起腰部钝痛或绞痛&lt;/p&gt;
&lt;p&gt;\5.    男性生殖系统结核：肾结核男性病人中约有 50％～70％合并生殖系统结核。临床上表现最明显是附睾结核，附睾可触及不规则硬块。输精管结核病变时，变得粗硬并呈 “串珠” 样改变&lt;/p&gt;
&lt;p&gt;\6.    全身症状肾结核病人的全身症状常不明显。晚期肾结核或合并其他器官活动结核时，可以有发热、盗汗、消瘦、贫血、虚弱，食欲不振和血沉快等典型结核症状&lt;/p&gt;
&lt;h3 id=&#34;三-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-诊断&#34;&gt;#&lt;/a&gt; (三)  诊断&lt;/h3&gt;
&lt;h4 id=&#34;1-病史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病史&#34;&gt;#&lt;/a&gt; \1.    病史：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;慢性膀胱炎：凡是无明显原因的慢性膀胱炎，症状持续存在并逐渐加重，伴有终末血尿；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿培养无细菌生长，经抗菌药物治疗无明显疗效；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;附睾有硬结或伴阴囊慢性窦道者，应考虑有肾结核的可能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-尿液检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-尿液检查&#34;&gt;#&lt;/a&gt; \2.    尿液检查&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;尿呈酸性，尿蛋白阳性，有较多红细胞和白细胞。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿沉淀涂片抗酸染色可找到抗酸杆菌，以清晨第一次尿液检查阳性率最高，至少连续检查 3 次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抗酸杆菌不应作为诊断肾结核的唯一依据（因包皮垢杆菌、枯草杆菌也是抗酸杆菌，易和结核杆菌混淆）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿结核杆菌培养时间较长（4～8 周）但可靠，阳性率可达 90%，这对肾结核的诊断有决定性意义&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-影像学诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-影像学诊断&#34;&gt;#&lt;/a&gt; \3.    影像学诊断：&lt;/h4&gt;
&lt;p&gt;包括 B 超、X 线、CT 及 MRI 等检查。对确诊肾结核，判断病变严重程度，决定治疗方案非常重要&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;B 超：可初步确定病变部位，常显示病肾结构紊乱，有钙化则显示强回声，B 超也较容易发现对侧肾积水及膀胱有无挛缩&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;X 线检查：可能见到病肾局灶或斑点状钙化影或全肾广泛钙化。应与肾结石鉴别&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　静脉尿路造影（IVU）可以了解分侧肾功能、病变程度与范围，对肾结核治疗方案的选择必不可少。&lt;/p&gt;
&lt;p&gt;②　早期表现单个肾盏模糊，虫蛀样改变，杯口甚至肾盏消失&lt;/p&gt;
&lt;p&gt;③　病变进展，肾盂肾盏出现变形，内壁粗糙，并可见到肾盏连接或分开的肾实质内多发性空洞，一个或多个肾盏消失&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;CT 和 MRI 对中晚期肾结核能清楚地显示扩大的肾盏肾盂、皮质空洞及钙化灶，三维成像还可以显示输尿管全长病变&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　MRI 水成像对诊断肾结核对侧肾积水有独到之处。&lt;/p&gt;
&lt;p&gt;②　在双肾结核或肾结核对侧肾积水，静脉尿路造影显影不良时，CT、MRI 有助于确定诊断&lt;/p&gt;
&lt;h4 id=&#34;4-膀胱镜检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-膀胱镜检查&#34;&gt;#&lt;/a&gt; \4.    膀胱镜检查&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;可见膀胱黏膜充血、水肿、浅黄色结核结节、结核性溃疡、肉芽肿及瘢痕等病变，以膀胱三角区和病侧输尿管口周围较为明显&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结核性肉芽肿易误诊为肿瘤，必要时取活组织检查明确诊断。病侧输尿管口可呈 “洞穴” 状，有时可见混浊尿液喷出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;膀胱挛缩容量小于 50ml 或有急性膀胱炎时，不宜作膀胱镜检查&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四-鉴别诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-鉴别诊断&#34;&gt;#&lt;/a&gt; (四)  鉴别诊断&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;肾结核引起的膀胱炎&lt;/th&gt;
&lt;th&gt;以尿频开始，膀胱刺激症状长期存在并进行性加重，抗感染治疗无效&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;非特异性膀胱炎&lt;/td&gt;
&lt;td&gt;主要是大肠埃希菌感染，多见女性，起病急，疾病开始就有尿频、尿急、尿痛，经抗感染治疗后症状很快缓解或消失&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;五-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;h4 id=&#34;1-药物治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-药物治疗&#34;&gt;#&lt;/a&gt; \1.    药物治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;早期、适量、联合、规律、全程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;适用于早期肾结核， 抗结核药物：首选药物有吡嗪酰胺、异烟肼、利福平和链霉素等杀菌药物，其他如乙胺丁醇、环丝氨酸、乙硫异烟胺等抑菌药为二线药物&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-手术治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-手术治疗&#34;&gt;#&lt;/a&gt; \2.    手术治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;凡药物治疗 6～9 个月无效，肾结核破坏严重者，应在药物治疗的配合下行手术治疗。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肾切除术前抗结核治疗不应少于 2 周&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　肾切除术&lt;/p&gt;
&lt;p&gt;・肾结核破坏严重，而对侧肾正常，应切除患肾&lt;/p&gt;
&lt;p&gt;・双侧肾结核一侧广泛破坏呈 “无功能” 状态，另一侧病变较轻，在抗结核药物治疗一段时间后，择期切除严重的一侧患肾&lt;/p&gt;
&lt;p&gt;・肾结核对侧肾积水，如果积水肾功能代偿不良，应先引流肾积水，保护肾功能，待肾功能好转后再切除无功能的患肾&lt;/p&gt;
&lt;p&gt;②　保留肾组织的肾结核手术&lt;/p&gt;
&lt;p&gt;・肾部分切除术：适用病灶局限于肾的一极&lt;/p&gt;
&lt;p&gt;・结核病灶清除术：适用局限于肾实质表面闭合性的结核性脓肿，与肾集合系统不相通。&lt;/p&gt;
&lt;p&gt;③　解除输尿管狭窄的手术&lt;/p&gt;
&lt;p&gt;・输尿管对端吻合术：输尿管结核病变致使管腔狭窄引起肾积水，可以切除狭窄段，行输尿管端端吻合术&lt;/p&gt;
&lt;p&gt;・输尿管膀胱吻合术：狭窄靠近膀胱者，则施行狭窄段切除，输尿管膀胱吻合术，放置双 J 形输尿管支架引流管，术后 1 ～ 2 个月拔除&lt;/p&gt;
&lt;p&gt;④　挛缩膀胱的手术治疗&lt;/p&gt;
&lt;p&gt;・肠膀胱扩大术：肾结核并发挛缩膀胱，在患肾切除及抗结核治疗 3～6 个月，待膀胱结核完全愈合后，对侧肾正常、无结核性尿道狭窄的病人，可行肠膀胱扩大术&lt;/p&gt;
&lt;p&gt;・尿流改道术：挛缩膀胱的男性病人往往有前列腺、精囊结核引起后尿道狭窄，为了改善和保护积水肾仅有的功能，应施行输尿管皮肤造口，回肠膀胱或肾造口这等尿流改道术&lt;/p&gt;
&lt;h2 id=&#34;二-男生殖系统结核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-男生殖系统结核&#34;&gt;#&lt;/a&gt; 二、男生殖系统结核&lt;/h2&gt;
&lt;p&gt;・男生殖系统结核大多数继发于肾结核，一般来自后尿道感染，少数由血行直接播散所致。首先在前列腺、精囊中引起病变，以后再经输精管蔓延到附睾和睾丸&lt;/p&gt;
&lt;p&gt;・单纯前列腺、精囊结核，因部位隐蔽，临床症状常不明显，不易发现&lt;/p&gt;
&lt;p&gt;・附睾结核（epididymal tuberculosis）临床症状较明显，容易被病人和临床医生发现&lt;/p&gt;
&lt;h3 id=&#34;一-病理-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病理-2&#34;&gt;#&lt;/a&gt; (一)  病理&lt;/h3&gt;
&lt;p&gt;\1.    病理改变主要为结核结节、干酪坏死、空洞形成和纤维化等，钙化极少见。&lt;/p&gt;
&lt;p&gt;\2.    前列腺结核：脓肿向尿道破溃，可使后尿道呈空洞状，边缘不规则。前列腺、精囊纤维化以后则形成坚硬肿块。&lt;/p&gt;
&lt;p&gt;\3.    输精管结核：常致管腔堵塞，输精管变粗变硬，呈 “串珠” 状改变。&lt;/p&gt;
&lt;p&gt;\4.    附睾结核：病变常从附睾尾开始，呈干酪样变、脓肿及纤维化，可累及整个附睾。少数血行感染引起的附睾结核，病变多从附睾头部开始。附睾结核常侵及鞘膜和阴囊壁，脓肿破溃后可形成经久不愈的窦道。&lt;/p&gt;
&lt;p&gt;\5.    睾丸结核：常是附睾结核直接扩展蔓延所致&lt;/p&gt;
&lt;h3 id=&#34;二-临床表现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-临床表现-2&#34;&gt;#&lt;/a&gt; (二)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    大多数为 20～40 岁&lt;/p&gt;
&lt;p&gt;\2.    前列腺、精囊结核的临床症状多不明显&lt;/p&gt;
&lt;p&gt;\3.    附睾结核一般发病缓慢，表现为阴囊部肿胀不适或下坠感，附睾尾或整个附睾呈硬结状，疼痛不明显。形成寒性脓肿如继发感染，阴囊局部出现红肿、疼痛。脓肿破溃后可形成经久不愈的窦道。双侧病变则失去生育能力&lt;/p&gt;
&lt;h3 id=&#34;三-诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-诊断-2&#34;&gt;#&lt;/a&gt; (三)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    有上述临床表现：直肠指检扪及前列腺、精囊硬结或触及附睾硬结，疑有男生殖系统结核时，需全面检查泌尿系统有无结核病变&lt;/p&gt;
&lt;p&gt;\2.    尿常规：尿找抗酸杆菌、尿结核杆菌培养和静脉尿路造影等检查以除外肾结核。前列腺液或精液中有时可发现结核杆菌&lt;/p&gt;
&lt;p&gt;\3.    骨盆平片：偶可发现前列腺结核钙化&lt;/p&gt;
&lt;p&gt;\4.    尿道造影：可显示前列腺部尿道变形或扩大，造影剂可进入前列腺空洞内&lt;/p&gt;
&lt;p&gt;\5.    精囊造影：价值不大，极少应用&lt;/p&gt;
&lt;h3 id=&#34;四-鉴别诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-鉴别诊断-2&#34;&gt;#&lt;/a&gt; (四)  鉴别诊断&lt;/h3&gt;
&lt;p&gt;\1.    前列腺结核：需与非特异性前列腺炎及前列腺癌鉴别。&lt;/p&gt;
&lt;p&gt;①　慢性前列腺炎：病人症状一般较为明显，有结节形成者，范围较局限，常有压痛，经抗感染治疗后，结节可缩小甚至消失。&lt;/p&gt;
&lt;p&gt;②　前列腺癌：发病多为老年人，前列腺特异性抗原（PSA）测定、直肠指检及影像学检查有助于诊断，必要时需作前列腺穿刺活组织检查&lt;/p&gt;
&lt;p&gt;\2.    附睾结核需与非特异性慢性附睾炎鉴别：&lt;/p&gt;
&lt;p&gt;①　附睾结核硬块常不规则，病程缓慢，常可触及 “串珠” 样、粗硬的输精管，如附睾病变与皮肤粘连或形成阴囊皮肤窦道。&lt;/p&gt;
&lt;p&gt;②　非特异性慢性附睾炎：很少形成局限性硬结，一般与阴囊皮肤无粘连，常有急性炎症发作史或伴有慢性前列腺炎病史。&lt;/p&gt;
&lt;p&gt;③　睾丸肿瘤： B 超有助于鉴别&lt;/p&gt;
&lt;h3 id=&#34;五-治疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗-2&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    前列腺、精囊结核一般用抗结核药物治疗，不需要用手术方法，但应清除泌尿系统可能存在的其他结核病灶，如肾结核、附睾结核等&lt;/p&gt;
&lt;p&gt;\2.    早期附睾结核应用抗结核药物治疗，多数可以治愈。如果病变较重，疗效不好，已有脓肿或有阴囊皮肤窦道形成，应在药物治疗配合下作附睾及睾丸切除术。手术应尽可能保留附睾、睾丸组织&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/13/medical/waike2/</guid>
            <title>第四十九篇 泌尿、男性生殖系统感染</title>
            <link>http://zyczxq.com/2021/09/13/medical/waike2/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Mon, 13 Sep 2021 21:21:14 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第四十九篇-泌尿-男性生殖系统感染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四十九篇-泌尿-男性生殖系统感染&#34;&gt;#&lt;/a&gt; 第四十九篇 泌尿、男性生殖系统感染&lt;/h1&gt;
&lt;h2 id=&#34;一-概论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概论&#34;&gt;#&lt;/a&gt; 一、概论&lt;/h2&gt;
&lt;h3 id=&#34;一-定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-定义&#34;&gt;#&lt;/a&gt; (一)  定义：&lt;/h3&gt;
&lt;p&gt;致病菌入侵泌尿、男生殖系系统内繁殖而引起的炎症 。&lt;/p&gt;
&lt;h3 id=&#34;二-根据感染的部位分为&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-根据感染的部位分为&#34;&gt;#&lt;/a&gt; (二)  根据感染的部位分为：&lt;/h3&gt;
&lt;p&gt;上尿路感染：累及肾、肾盂及输尿管&lt;/p&gt;
&lt;p&gt;下尿路感染：累及膀胱和尿道&lt;/p&gt;
&lt;h3 id=&#34;三-病原微生物&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-病原微生物&#34;&gt;#&lt;/a&gt; (三)  病原微生物：&lt;/h3&gt;
&lt;p&gt;细菌：大肠杆菌（最多见）、副大肠杆菌、变形杆菌、葡萄球菌等&lt;/p&gt;
&lt;p&gt;病毒：结核菌、真菌、 衣原体、支原体和病毒等&lt;/p&gt;
&lt;h3 id=&#34;四-发病机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-发病机制&#34;&gt;#&lt;/a&gt; (四)  发病机制：&lt;/h3&gt;
&lt;p&gt;\1.    机体的防御机制：尿道外口皮肤和黏膜正常菌群、正常的尿液环境，正常尿路上皮细胞分泌物质等&lt;/p&gt;
&lt;p&gt;\2.    感染的形成：细菌的数量和毒力。一般认为尿内细菌浓度超过 105CFU/ml 时即可导致尿路感染&lt;/p&gt;
&lt;p&gt;\3.    常见的致病菌：大肠埃希菌。其中表达特殊 K 抗原的大肠埃希菌菌株毒力强，易引起尿路感染&lt;/p&gt;
&lt;p&gt;\4.    尿路感染的易感性还可能与血型抗原、基因型特征、内分泌等因素相关&lt;/p&gt;
&lt;h3 id=&#34;五-诱发感染的因素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-诱发感染的因素&#34;&gt;#&lt;/a&gt; (五)  诱发感染的因素&lt;/h3&gt;
&lt;p&gt;\1.    机体免疫功能下降、抗感染能力减弱&lt;/p&gt;
&lt;p&gt;\2.    梗阻因素&lt;/p&gt;
&lt;p&gt;\3.    医源性因素&lt;/p&gt;
&lt;p&gt;\4.    女性尿道较短，容易招致上行感染&lt;/p&gt;
&lt;h3 id=&#34;六-感染途径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-感染途径&#34;&gt;#&lt;/a&gt; (六)  感染途径&lt;/h3&gt;
&lt;p&gt;\1.    上行感染：病原菌从体外经尿道外口向上入膀胱，再上行入上尿路，这是尿路感染最常见的感染途径，多见于女性病人，致病菌大多为大肠埃希菌&lt;/p&gt;
&lt;p&gt;\2.    血行感染：较少见，多继发于机体免疫功能低下，皮肤疖、痈、扁桃体炎、中耳炎、龋齿等感染灶内的致病菌通过血液循环系统进入泌尿生殖系统器官。常见为肾皮质感染，致病菌多为金黄色葡萄球菌&lt;/p&gt;
&lt;p&gt;\3.    淋巴感染：泌尿生殖系统邻近器官病灶的致病菌经淋巴系统传播至泌尿生殖器官。比较少见，多见于肠道的严重感染或腹膜后感染等&lt;/p&gt;
&lt;p&gt;\4.    直接蔓延感染：由泌尿生殖系统邻近器官的感染直接蔓延所致，如阑尾脓肿、盆腔化脓性炎症等，外伤也可直接将致病菌带入泌尿生殖系统脏器引起感染&lt;/p&gt;
&lt;h3 id=&#34;七-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-诊断&#34;&gt;#&lt;/a&gt; (七)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    尿频、尿急、尿痛和排尿困难是泌尿生殖系统感染的典型临床表现&lt;/p&gt;
&lt;p&gt;\2.    尿液标本的采集：&lt;/p&gt;
&lt;p&gt;①　中段尿：清洁外阴和尿道口后留取中段尿；&lt;/p&gt;
&lt;p&gt;②　导尿：常用于女性病人；&lt;/p&gt;
&lt;p&gt;③　耻骨上膀胱穿刺：最适用于新生儿和截瘫病人&lt;/p&gt;
&lt;p&gt;\3.    尿液镜检：每高倍镜视野白细胞超过 3 个即说明可能存在泌尿系统感染&lt;/p&gt;
&lt;p&gt;\4.    细菌菌落计数：是诊断尿路感染的主要依据。&lt;/p&gt;
&lt;p&gt;①　若菌落计数≥105/ml 应认为有感染；&lt;/p&gt;
&lt;p&gt;②　若菌落计数 &amp;lt; 104/ml 可能为污染，应重复培养；&lt;/p&gt;
&lt;p&gt;③　若菌落计数 104～105/ml 为可疑&lt;/p&gt;
&lt;p&gt;\5.    感染的定位检查：区别上、下尿路感染&lt;/p&gt;
&lt;p&gt;\6.    影像学和尿动力学检查：B 超、尿路平片、排泄性尿路造影、膀胱及尿道造影、CT、放射性核素、磁共振水成像（MRU）、尿动力学等&lt;/p&gt;
&lt;h3 id=&#34;八-治疗原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#八-治疗原则&#34;&gt;#&lt;/a&gt; (八)  治疗原则&lt;/h3&gt;
&lt;p&gt;\1.    明确感染性质：依据尿细菌培养和药敏试验结果，有针对性的用药，尚无尿培养结果时，可根据尿沉渣涂片革兰染色初步估计致病菌，选择恰当的药物&lt;/p&gt;
&lt;p&gt;\2.    鉴别上尿路感染还是下尿路感染&lt;/p&gt;
&lt;p&gt;\3.    明确血性感染还是上行感染&lt;/p&gt;
&lt;p&gt;\4.    查明泌尿系有无梗阻因素&lt;/p&gt;
&lt;p&gt;\5.    检查有无泌尿系感染的诱发因素&lt;/p&gt;
&lt;p&gt;\6.    测定尿液 pH&lt;/p&gt;
&lt;p&gt;\7.    正确使用抗菌药物：抗菌药物的使用原则上应持续到症状消失，尿细菌培养转阴后 2 周&lt;/p&gt;
&lt;h2 id=&#34;二-上尿路感染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-上尿路感染&#34;&gt;#&lt;/a&gt; 二、上尿路感染&lt;/h2&gt;
&lt;h3 id=&#34;一-急性肾盂肾炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-急性肾盂肾炎&#34;&gt;#&lt;/a&gt; (一)  急性肾盂肾炎&lt;/h3&gt;
&lt;p&gt;急性肾盂肾炎是肾盂和肾实质的急性细菌性炎症。&lt;/p&gt;
&lt;p&gt;致病菌多经膀胱上行感染肾盂，再经肾盂感染肾实质，也可经血液直接播散到肾盂和肾实质。&lt;/p&gt;
&lt;p&gt;上行感染的病原菌主要为 G - 细菌，多为大肠埃希菌和其他肠杆菌；&lt;/p&gt;
&lt;p&gt;血行感染的致病菌主要为 G + 细菌。女性的发病率高于男性。&lt;/p&gt;
&lt;p&gt;上尿路梗阻、膀胱输尿管反流及尿潴留时可以继发肾盂肾炎&lt;/p&gt;
&lt;h4 id=&#34;1-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现&#34;&gt;#&lt;/a&gt; \1.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;发热：突然发生寒战、高热，伴有头痛、恶心呕吐等全身症状，热型类似脓毒症，持续 1 周左右&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;腰痛：病侧或双侧腰痛，多呈胀痛。肋脊角有明显的压痛和叩击痛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;膀胱刺激症状：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　下尿路感染上行所致的急性肾盂肾炎：先出现尿频、尿急、尿痛、血尿、排尿困难等症状，后出现高热等全身症状。&lt;/p&gt;
&lt;p&gt;②　血行感染者常由高热开始，随后出现膀胱刺激症状，有时不明显&lt;/p&gt;
&lt;h4 id=&#34;2-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-诊断&#34;&gt;#&lt;/a&gt; \2.    诊断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据病史可以进行初步诊断。特别注意询问有无下尿路感染，前列腺炎及身体其他部位有无感染病灶&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿液检查可发现白细胞、红细胞、蛋白、白细胞管型，尿细菌培养每毫升尿有菌落 105 以上，血白细胞计数升高，中性粒细胞增多明显。病变严重时可有脓毒血症出现，此时应进行血液的细菌学检查&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;X 线、B 超、CT 等影像学检查有助于了解上尿路有无梗阻或其他疾病&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-治疗&#34;&gt;#&lt;/a&gt; \3.    治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;支持治疗：卧床休息，多饮水，维持每日尿量达 1.5L 以上，有利于炎症及代谢产物的排出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抗菌药物治疗：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①  β- 内酰胺类抗生素；&lt;/p&gt;
&lt;p&gt;②  喹诺酮类药物；&lt;/p&gt;
&lt;p&gt;③  青霉素类药物；&lt;/p&gt;
&lt;p&gt;④  头孢菌素，可与氨基苷类抗生素合用；&lt;/p&gt;
&lt;p&gt;⑤  去甲万古霉素、亚胺培南 - 西拉司丁钠（泰能）疗程一般为 7～14 日，静脉用药者可在体温正常、临床症状改善、尿细菌培养转阴后改口服维持&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;碱性药物：碳酸氢钠、枸橼酸钾，可降低酸性尿液对膀胱的刺激，以缓解膀胱刺激症状。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;钙离子通道拮抗剂：维拉帕米（异搏定）、盐酸黄酮哌酯 M 受体阻滞剂可解除膀胱痉挛，缓解刺激症状&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-肾积脓&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-肾积脓&#34;&gt;#&lt;/a&gt; (二)  肾积脓&lt;/h3&gt;
&lt;p&gt;肾积脓也称脓肾，是肾实质感染所致广泛的化脓性病变，或尿路梗阻后肾盂肾盏积水、感染而形成一个积聚脓液的囊腔。&lt;/p&gt;
&lt;p&gt;致病菌有革兰阳性球菌和革兰阴性杆菌或结核杆菌。&lt;/p&gt;
&lt;p&gt;多在上尿路结石、肾结核、肾盂肾炎、肾积水、手术史等疾病的基础上，并发化脓性感染而形成&lt;/p&gt;
&lt;h4 id=&#34;1-临床表现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现-2&#34;&gt;#&lt;/a&gt; \1.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主要为全身感染症状，如畏寒、高热、腰部疼痛、肿块等。病程长者可消瘦、贫血。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如尿路为不完全性梗阻、脓液沿输尿管排入膀胱而出现膀胱炎症状，膀胱镜检查可见病侧输尿管口喷脓尿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 超显示为肾盂积脓，CT 也有助于诊断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排泄性尿路造影或放射性核素肾图提示病侧肾功能减退或丧失。右侧肾积脓需与化脓性胆囊炎鉴别&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-治疗&#34;&gt;#&lt;/a&gt; \2.    治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;以抗感染为主，同时注意加强营养，纠正水、电解质紊乱，在肾尚有功能时，应施行脓肾造口术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如患肾功能已丧失，可行患肾切除术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-肾皮质多发性脓肿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-肾皮质多发性脓肿&#34;&gt;#&lt;/a&gt; (三)  肾皮质多发性脓肿&lt;/h3&gt;
&lt;p&gt;肾皮质多发脓肿称为肾疖，小脓肿融合形成肾痈。&lt;/p&gt;
&lt;p&gt;多为葡萄球菌经血行感染。&lt;/p&gt;
&lt;p&gt;原发灶可为皮肤疖肿、肺部感染、骨髓炎、扁桃体炎或外伤后感染等。&lt;/p&gt;
&lt;h4 id=&#34;1-临床表现-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现-3&#34;&gt;#&lt;/a&gt; \1.    临床表现&lt;/h4&gt;
&lt;p&gt;原发病灶症状较为明显，继之突发畏寒、发热、腰痛，肾区压痛，肌紧张和肋脊角叩击痛，无膀胱刺激症状，病程约为 1～2 周&lt;/p&gt;
&lt;h4 id=&#34;2-治-疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-治-疗&#34;&gt;#&lt;/a&gt; \2.    治 疗&lt;/h4&gt;
&lt;p&gt;早期肾皮质脓肿应及时应用抗生素治疗，如肾痈形成或并发肾周围脓肿，可在 B 超引导下穿刺或切开引流&lt;/p&gt;
&lt;h3 id=&#34;四-肾周围炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-肾周围炎&#34;&gt;#&lt;/a&gt; (四)  肾周围炎&lt;/h3&gt;
&lt;p&gt;肾周围炎是肾周围组织的化脓性炎症，若形成脓肿称肾周围脓肿。&lt;/p&gt;
&lt;p&gt;致病菌以金黄色葡萄球菌及大肠埃希菌多见&lt;/p&gt;
&lt;p&gt;病变位于肾固有筋膜与肾周筋膜之间，多由肾痈、肾表面脓肿直接感染所致。由于肾周组织脂肪丰富，且疏松，感染易蔓延。脓液流入髂腰间隙，形成腰大肌脓肿，穿破横膈形成脓胸&lt;/p&gt;
&lt;h4 id=&#34;1-临床表现-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现-4&#34;&gt;#&lt;/a&gt; \1.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;腰痛、肾区压痛、叩击痛和肌紧张，形成脓肿后可有全身中毒症状。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;血白细胞及中性粒细胞上升。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肾周围炎多伴有肾实质感染，尿常规检查可见脓细胞。单纯肾周围炎尿常规无异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若脓肿溃破，沿腰大肌蔓延扩展，刺激腰大肌使髂关节屈曲不能伸展，腹部平片可见肾影增大模糊，脊柱弯向病侧，腰大肌阴影消失。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若脓肿位于肾上方，累及膈肌，可有胸膜炎性反应，同侧膈肌抬高，活动受限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 超和 CT 可显示肾周围脓肿，有助于本病的定位、定性诊断&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-治-疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-治-疗-2&#34;&gt;#&lt;/a&gt; \2.    治 疗&lt;/h4&gt;
&lt;p&gt;未形成脓肿前，治疗应首选敏感的抗生素和局部热敷，并加强全身支持疗法。肾周围脓肿形成后，可作超声引导下穿刺或切开引流&lt;/p&gt;
&lt;h2 id=&#34;三-下尿路感染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-下尿路感染&#34;&gt;#&lt;/a&gt; 三、下尿路感染&lt;/h2&gt;
&lt;h3 id=&#34;一-急性细菌性膀胱炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-急性细菌性膀胱炎&#34;&gt;#&lt;/a&gt; (一)  急性细菌性膀胱炎&lt;/h3&gt;
&lt;p&gt;女性多发，尤其在新婚期及更年期后更容易发病。&lt;/p&gt;
&lt;p&gt;急性细菌性膀胱炎的感染途径几乎均为上行感染所致&lt;/p&gt;
&lt;p&gt;致病菌多数为大肠埃希菌，其次为变形杆菌、克雷伯菌、葡萄球菌及铜绿假单胞菌等&lt;/p&gt;
&lt;h4 id=&#34;1-病理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病理&#34;&gt;#&lt;/a&gt; \1.    病理&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;浅表膀胱炎症多见，以尿道内口及膀胱三角最明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;病变仅累及黏膜、黏膜下层，可见膀胱黏膜弥漫性充血、水肿，肉眼呈深红色，黏膜下有出血，严重时可见溃疡形成，黏膜表面有脓液和坏死组织附着。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显微镜下可见白细胞浸润。若治疗不彻底或有异物、残余尿、上尿路感染等情况，炎症可转为慢性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-临床表现&#34;&gt;#&lt;/a&gt; \2.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;发病突然，多数青壮年女性患者发病与性活动有关，临床表现为尿痛、尿频、尿急、尿痛、尿道烧灼感。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿频程度不一，严重者数分钟排尿一次或有急迫性尿失禁。常见终末血尿，有时为全程血尿，甚至有血块排出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全身症状不明显，体温正常或仅有低热，当并发急性肾盂肾炎或急性前列腺炎、附睾炎时才出现高热等全身症状&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-诊断&#34;&gt;#&lt;/a&gt; \3.    诊断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;有无尿路感染的诱因和全身及尿路疾病史，并进行相应的检查&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实验室检查：尿液中白细胞和红细胞增多。除尿细菌培养外，还应作菌落计数和药物敏感试验，典型病例常获得阳性结果。肾功能一般不受影响。在急性感染期禁忌作膀胱镜检查。尿道有分泌物时应作涂片细菌学检查&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与其他以排尿改变为主要症状的疾病鉴别，包括阴道炎、尿道炎等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-治疗&#34;&gt;#&lt;/a&gt; \4.    治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据致病菌种类和药物敏感性实验结果选用抗生素治疗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抗菌药物可选用复方磺胺甲基异恶唑、头孢菌素类、喹诺酮类药物。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在治疗过程中应多饮水，口服碳酸氢钠碱化尿液，并应用盐酸黄酮哌酯、抗胆碱能类药如颠茄、阿托品等药物，以减少膀胱刺激症状&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;膀胱区热敷、热水坐浴等可减轻膀胱痉挛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绝经期后妇女发生尿路感染，可能与雌激素缺乏引起阴道内乳酸杆菌减少和致病菌的繁殖增加有关，因此雌激素替代疗法可以维持正常的阴道内环境，增加乳酸杆菌并清除致病菌，减少尿路感染的发生&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-慢性细菌性膀胱炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-慢性细菌性膀胱炎&#34;&gt;#&lt;/a&gt; (二)  慢性细菌性膀胱炎&lt;/h3&gt;
&lt;h4 id=&#34;1-病因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因&#34;&gt;#&lt;/a&gt; \1.    病因&lt;/h4&gt;
&lt;p&gt;慢性细菌性膀胱炎常是上尿路急性感染的迁移或慢性感染所致，亦可诱发或继发于某些下尿路病变，如良性前列腺增生、慢性前列腺炎、尿道狭窄、膀胱结石或异物、尿道口处女膜融合、处女膜伞、尿道旁腺炎等&lt;/p&gt;
&lt;h4 id=&#34;2-病理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病理&#34;&gt;#&lt;/a&gt; \2.    病理&lt;/h4&gt;
&lt;p&gt;膀胱黏膜苍白、粗糙、肥厚，表面有时呈颗粒或小囊状，偶见溃疡。显微镜下可见黏膜固有层内有较多浆细胞、淋巴细胞浸润和结缔组织增生。炎症累及肌层可使逼尿肌纤维化，收缩力减弱，膀胱容量可缩小，严重时影响肾功能&lt;/p&gt;
&lt;h4 id=&#34;3-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-临床表现&#34;&gt;#&lt;/a&gt; \3.    临床表现&lt;/h4&gt;
&lt;p&gt;尿频、尿急、尿痛反复发作或持续存在，并有耻骨上膀胱区或会阴部不适，膀胱充盈时疼痛较明显。常有尿液混浊&lt;/p&gt;
&lt;h4 id=&#34;4-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-诊断&#34;&gt;#&lt;/a&gt; \4.    诊断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据病史和临床表现诊断，应考虑反复发作或持续存在的原因&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;男性：直肠指检了解前列腺有无病变，并作阴囊、阴茎、尿道口检查，排除生殖道炎症、尿道炎症或结石&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;女性：解尿道外口、处女膜有无畸形，有无宫颈炎、阴道炎或前庭腺炎等。注意有无糖尿病、免疫功能低下等疾病&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实验室检查：尿中可见白细胞和红细胞。尿培养可呈阳性。如多次中段尿细菌培养阴性，应考虑与泌尿系结核鉴别，此时应进行尿结核菌检查和结核菌培养&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 超、静脉尿路造影、CT 或核磁共振水成像（MRU）、膀胱镜检、活体组织病理检查&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;5-治-疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-治-疗&#34;&gt;#&lt;/a&gt; \5.    治 疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;抗菌药物为主，抗菌药物要足量使用。一般交替使用 2～3 种抗生素，应用 2 周或更长时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;治疗期间保持排尿通畅，积极处理诱发尿路感染的病因，必要时行手术纠正。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-尿道炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-尿道炎&#34;&gt;#&lt;/a&gt; (三)  尿道炎&lt;/h3&gt;
&lt;h4 id=&#34;1-淋菌性尿道炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-淋菌性尿道炎&#34;&gt;#&lt;/a&gt; \1.    淋菌性尿道炎&lt;/h4&gt;
&lt;p&gt;淋球菌引起的尿道感染，常累及泌尿、生殖系的黏膜&lt;/p&gt;
&lt;p&gt;主要由性接触直接传播。&lt;/p&gt;
&lt;h5 id=&#34;1-临床表现-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现-5&#34;&gt;#&lt;/a&gt; 1)    临床表现&lt;/h5&gt;
&lt;p&gt;①　多数病人有明确的不洁性接触史，潜伏期 2～5 日&lt;/p&gt;
&lt;p&gt;②　发病较急，尿道口黏膜红肿、发痒或刺痛&lt;/p&gt;
&lt;p&gt;③　尿道排出多量黄白色脓性分泌物，病情发展可出现阴茎肿胀，继之出现尿频、尿急、尿痛，有时可见血尿。腹股沟淋巴结呈急性炎症反应&lt;/p&gt;
&lt;p&gt;④　及时治疗者大约 1 周后症状逐渐减轻，尿道口红肿消退，尿道分泌物减少而稀薄，排尿恢复正常，1 月后症状可全部消失。部分病人可继发前列腺炎、精囊炎或附睾炎；治疗未愈者可形成慢性淋菌性尿道炎，反复发作使尿道结缔组织纤维化还可引起炎性尿道狭窄&lt;/p&gt;
&lt;h5 id=&#34;2-诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-诊断-2&#34;&gt;#&lt;/a&gt; 2)    诊断&lt;/h5&gt;
&lt;p&gt;有典型的临床表现及不洁性生活史，尿道分泌物涂片可在多核白细胞内找到成对排列的革兰阴性双球菌。尿三杯试验以第一杯脓尿最明显&lt;/p&gt;
&lt;h5 id=&#34;3-治疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-治疗-2&#34;&gt;#&lt;/a&gt; 3)    治疗&lt;/h5&gt;
&lt;p&gt;①　以青霉素类药物为主，亦可用头孢三嗪、壮观霉素等药物进行治疗&lt;/p&gt;
&lt;p&gt;②　感染初期使用头孢三嗪，并口服喹诺酮类、头孢菌素或复方磺胺甲基异恶唑，一般 7～14 日为一疗程。若病情较重，合并生殖系感染，应适当延长抗菌药物的疗程&lt;/p&gt;
&lt;p&gt;③　以定期逐渐扩张尿道为主，同时给予抗菌药物，必要时作尿道口狭窄切开，广泛性前尿道狭窄可用内镜作尿道内切开术&lt;/p&gt;
&lt;p&gt;④　配偶应同时治疗，性生活使用安全套，以免重复感染&lt;/p&gt;
&lt;h4 id=&#34;2-非淋菌性尿道炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-非淋菌性尿道炎&#34;&gt;#&lt;/a&gt; \2.    非淋菌性尿道炎&lt;/h4&gt;
&lt;p&gt;病原体以沙眼衣原体或支原体为主，其余为滴虫、单纯疱疹病毒、肝炎病毒、白色念珠菌、包皮垢杆菌等，通过性接触传播，比淋菌性尿道炎发病率高，在性传播疾病中占首位&lt;/p&gt;
&lt;h5 id=&#34;1-临床表现-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-临床表现-6&#34;&gt;#&lt;/a&gt; 1)    临床表现&lt;/h5&gt;
&lt;p&gt;一般在感染后 1～5 周发病。表现为尿道刺痒、尿痛和分泌少量白色稀薄液体，有时仅为痂膜封口或裤裆污秽，常见于晨起时。在男性，感染可侵犯前列腺、附睾引起前列腺炎和急性附睾炎，严重者导致男性不育&lt;/p&gt;
&lt;h5 id=&#34;2-诊断-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-诊断-3&#34;&gt;#&lt;/a&gt; 2)    诊断&lt;/h5&gt;
&lt;p&gt;①　有典型的临床表现及不洁性行为的接触传染史&lt;/p&gt;
&lt;p&gt;②　清晨排尿前取尿道分泌物作支原体、衣原体接种培养&lt;/p&gt;
&lt;p&gt;③　非淋菌性尿道炎与淋菌性尿道炎可以在同一病人同一时期中发生双重感染，症状相似，应鉴别诊断。尿道分泌物涂片每高倍视野下见到 10～15 个多核白细胞，找到衣原体或支原体的包涵体及未见细胞内革兰阴性双球菌，据此可与淋菌性尿道炎相鉴别&lt;/p&gt;
&lt;h5 id=&#34;3-治疗-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-治疗-3&#34;&gt;#&lt;/a&gt; 3)    治疗&lt;/h5&gt;
&lt;p&gt;常用大环内酯类抗生素治疗，如红霉素（阿奇霉素）、米诺环素（美满霉素）等，性伴侣应同时治疗，并注意性生活卫生&lt;/p&gt;
&lt;h2 id=&#34;四-男生殖系统感染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-男生殖系统感染&#34;&gt;#&lt;/a&gt; 四、男生殖系统感染&lt;/h2&gt;
&lt;h3 id=&#34;一-急性细菌性前列腺炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-急性细菌性前列腺炎&#34;&gt;#&lt;/a&gt; (一)  急性细菌性前列腺炎&lt;/h3&gt;
&lt;h4 id=&#34;1-病因-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因-2&#34;&gt;#&lt;/a&gt; \1.    病因&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;多在劳累、饮酒、性生活过于频繁后发生，部分病人继发于慢性前列腺炎&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;留置尿管，经尿道进行器械操作或患有膀胱炎及尿道炎时，细菌或含有细菌的尿液经后尿道和前列腺导管逆流至前列腺&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经直肠或经会阴前列腺穿刺，细菌可直接或通过淋巴管入前列腺，也可导致急性前列腺炎发生&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;身体其他部位感染灶的细菌也可经血流播散至前列腺&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见致病菌为革兰阴性杆菌，也有葡萄球菌和链球菌，偶有厌氧菌&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-病理-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病理-2&#34;&gt;#&lt;/a&gt; \2.    病理&lt;/h4&gt;
&lt;p&gt;后尿道前列腺表面黏膜充血、水肿，前列腺腺泡有白细胞浸润。炎症可扩散至附睾，引起附睾炎。大部分病例经治疗缓解，部分转变为慢性前列腺炎或前列腺脓肿&lt;/p&gt;
&lt;h4 id=&#34;3-临床表现和诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-临床表现和诊断&#34;&gt;#&lt;/a&gt; \3.    临床表现和诊断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;起病急，表现为高热、寒颤伴有尿频、尿急、尿痛及会阴部疼痛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前列腺充血、肿大，形成脓肿，有饱满或波动感。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有时出现排尿困难或急性尿潴留，往往伴有急性膀胱炎。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直肠指诊前列腺肿大、有明显触痛、局部温度增高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;急性期禁忌做前列腺按摩或穿刺，以免引起菌血症。可做尿细菌培养及药物敏感试验。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 超可见前列腺增大，内部回声不均匀&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-并发症&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-并发症&#34;&gt;#&lt;/a&gt; \4.    并发症&lt;/h4&gt;
&lt;p&gt;急性尿潴留、附睾炎、直肠或会阴瘘，血行感染可同时发生肾盂肾炎&lt;/p&gt;
&lt;h4 id=&#34;5-治-疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-治-疗-2&#34;&gt;#&lt;/a&gt; \5.    治 疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;给予全身支持治疗，卧床休息，大量饮水，退热止痛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如出现急性尿潴留，可行耻骨上膀胱穿刺造口，尽量避免经尿道留置尿管&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速有效地应用抗生素是治疗的关键。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　喹诺酮类：环丙沙星、氧氟沙星；以及头孢菌素、妥布霉素、氨苄西林等。&lt;/p&gt;
&lt;p&gt;②　衣原体感染可用红霉素、阿奇霉素等。&lt;/p&gt;
&lt;p&gt;③　如淋球菌感染可用头孢曲松。&lt;/p&gt;
&lt;p&gt;④　如厌氧菌感染则用甲硝唑。一疗程 7 日，可延长至 14 日&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;并发前列腺脓肿则应经会阴切开引流&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-慢性前列腺炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-慢性前列腺炎&#34;&gt;#&lt;/a&gt; (二)  慢性前列腺炎&lt;/h3&gt;
&lt;h4 id=&#34;1-病因-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因-3&#34;&gt;#&lt;/a&gt; \1.    病因&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主要感染途径是经尿道逆行感染，感染的尿液经前列腺导管逆流至前列腺，少数由急性细菌性前列腺炎迁延而致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过度饮酒、性刺激、下尿路梗阻是诱发因素，病原菌多为革兰阴性杆菌&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;慢性非细菌性前列腺炎在临床更为常见，致病菌为沙眼衣原体、解脲脲原体、隐球菌等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前列腺痛的病因与盆底肌、前列腺被膜和尿道约肌紧张、尿液返流、前列腺受到尿液的化学刺激有关&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-病-理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病-理&#34;&gt;#&lt;/a&gt; \2.    病 理&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在前列腺腺泡内和间质中有不同程度的浆细胞和巨噬细胞浸润&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前列腺组织内有钙化或微结石产生&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前列腺被膜增厚&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-临床表现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-临床表现-2&#34;&gt;#&lt;/a&gt; \3.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;不同的病人可出现完全不同的临床症状&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿路刺激症状：大多数病人有不同程度的尿频、尿急、尿痛、尿道不适或烧灼感。部分病人在排尿终末或大便时尿道口有白色分泌物流出，合并精囊炎时，可有血精&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;疼痛：疼痛的部位在会阴部、阴囊和睾丸、耻骨上、下腹部、腰骶部、腹股沟部。一般呈持续钝痛，如胀痛或坠痛等。有时疼痛难以忍受&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;性功能障碍：部分病人并发阴茎勃起功能障碍、早泄、遗精或射精痛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;精神紧张：部分病人因为症状久治不愈或对慢性前列腺炎缺少正确了解和认识，出现精神紧张、萎靡、情绪低落、头昏、失眠，严重者出现神经官能症&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;并发症：虹膜炎、关节炎、神经炎、肌炎、不育等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-诊-断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-诊-断&#34;&gt;#&lt;/a&gt; \4.    诊 断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据典型的临床表现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直肠前列腺指诊：早期，前列腺一般比较饱满，前列腺液较多；病程较长时，前列腺体积缩小，质地韧硬&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 超可见前列腺内部回声不均匀，前列腺被膜增厚。膀胱镜检查可见后尿道、精阜充血、肿胀&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;慢性细菌性前列腺炎前列腺液内白细胞增多（＞10 个 / 高倍视野），磷脂小体减少，细菌培养可呈阳性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;慢性非细菌性前列腺炎前列腺液可见多量白细胞，但细菌培养为阴性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分段尿及前列腺液培养检查：检查前充分饮水&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　初尿 10 ml （VB1），再排尿 200ml&lt;/p&gt;
&lt;p&gt;②　中段尿 10ml （VB2）。&lt;/p&gt;
&lt;p&gt;③　作前列腺按摩，收集前列腺液（EPS）&lt;/p&gt;
&lt;p&gt;④　完毕后排尿 10 ml（VB3）&lt;/p&gt;
&lt;p&gt;均送细菌培养及菌落计数。菌落计数前列腺液或 VB3＞VB1 和 VB2 10 倍可诊断为细菌性前列腺炎。若 VB1 及 VB2 细菌培养阴性，VB3 和前列腺液细菌培养阳性，即可确定诊断。此检查方法即 Meares -Stemey 的 “四杯法”&lt;/p&gt;
&lt;h4 id=&#34;5-治-疗-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-治-疗-3&#34;&gt;#&lt;/a&gt; \5.    治 疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首选红霉素、多西环素（强力霉素）等具有较强穿透力的抗菌药物。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;综合治疗可采用：热水坐浴及理疗（如离子透入）可减轻局部炎症，促进吸收；前列腺按摩，每周 1 次，以引流炎性分泌物；忌酒及辛辣食物，避免长时间骑、坐，有规律的性生活；中医治疗，应用活血化瘀和清热解毒药物&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于慢性非细菌性前列腺炎：致病原为衣原体、支原体则可用米诺环素、多西环素及碱性药物。其他可用红霉素、甲硝唑等。α 受体阻滞剂可以解痉、改善症状。某些植物制剂对改善症状也有一定的疗效。有精神心理障碍者，可用抗抑郁、焦虑等药物。此外，每日 1 次热水坐浴；每周 1 次前列腺按摩以及去除易造成盆腔、前列腺充血的因素，往往也可有良好的疗效。生物反馈，针灸等也有一定的效果&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-慢性附睾炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-慢性附睾炎&#34;&gt;#&lt;/a&gt; (三)  慢性附睾炎&lt;/h3&gt;
&lt;h4 id=&#34;1-病因-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因-4&#34;&gt;#&lt;/a&gt; \1.    病因&lt;/h4&gt;
&lt;p&gt;多由急性附睾炎治疗不彻底而形成。部分病人无急性炎症过程，可伴有慢性前列腺炎&lt;/p&gt;
&lt;h4 id=&#34;2-病理-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病理-3&#34;&gt;#&lt;/a&gt; \2.    病理&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;慢性附睾炎可发生附睾纤维化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显微镜下可见广泛的瘢痕组织，附睾管闭塞，淋巴细胞及浆细胞浸润。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如发生双侧慢性附睾炎可导致男性不育&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-临床表现-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-临床表现-3&#34;&gt;#&lt;/a&gt; \3.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;临床表现为阴囊有轻度不适，或坠胀痛，休息后好转。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;附睾局限性增厚及肿大，与睾丸的界限清楚，精索、输精管可增粗，前列腺质地偏硬。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结核性附睾炎附睾质地稍硬，常发生于附睾尾部，输精管增粗并触及串珠状结节，前列腺小而有结节，同侧精囊多有病变；尿液镜检有白细胞、红细胞；B 超、X 线及膀胱镜检查常可发现肾结核的证据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双侧附睾感染，可影响生育；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-治疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-治疗-2&#34;&gt;#&lt;/a&gt; \4.    治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对症处理，包括托起阴囊、热敷、热水坐浴、理疗等，重视前列腺炎的综合治疗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;急性发作时可使用抗生素。疼痛剧烈、持久、反复发作或形成脓肿者可行手术切除附睾&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有慢性前列腺炎者，要同时予以治疗&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四-急性附睾炎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-急性附睾炎&#34;&gt;#&lt;/a&gt; (四)  急性附睾炎&lt;/h3&gt;
&lt;h4 id=&#34;1-病因-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-病因-5&#34;&gt;#&lt;/a&gt; \1.    病因&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;多见于中青年，多由泌尿系感染和前列腺炎、精囊炎、性传播疾病扩散所致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多从输精管逆行传播&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;致病菌多为大肠埃希菌&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-病理-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-病理-4&#34;&gt;#&lt;/a&gt; \2.    病理&lt;/h4&gt;
&lt;p&gt;附睾肿胀：炎症开始于附睾尾部，扩散至附睾头部，可形成脓肿。&lt;/p&gt;
&lt;h4 id=&#34;3-临床表现-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-临床表现-4&#34;&gt;#&lt;/a&gt; \3.    临床表现&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;起病急，全身症状明心：畏寒、高热&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;病侧阴囊肿胀，阴囊皮肤红肿发热、疼痛，并沿精索、下腹部以及会阴部放射&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;睾丸精索肿大增粗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可伴膀胱刺激征&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;血白细胞、中性粒细胞升高&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;4-诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-诊断-2&#34;&gt;#&lt;/a&gt; \4.    诊断&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;典型临床症状&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;睾丸扭转：多见于青少年，常在安静状态发病，起病急，阴囊疼痛明显&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;5-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-治疗&#34;&gt;#&lt;/a&gt; \5.    治疗&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;卧床休息，睾丸托起，止痛散热&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;广谱抗生素抗炎&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/13/medical/miniaoSystem/</guid>
            <title>第四十八篇 泌尿系统损伤</title>
            <link>http://zyczxq.com/2021/09/13/medical/miniaoSystem/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Mon, 13 Sep 2021 19:18:14 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第四十八篇-泌尿系统损伤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四十八篇-泌尿系统损伤&#34;&gt;#&lt;/a&gt; 第四十八篇 泌尿系统损伤&lt;/h1&gt;
&lt;h2 id=&#34;一-肾外伤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-肾外伤&#34;&gt;#&lt;/a&gt; 一、肾外伤&lt;/h2&gt;
&lt;h3 id=&#34;一-病因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病因&#34;&gt;#&lt;/a&gt; (一)  病因&lt;/h3&gt;
&lt;p&gt;\1.    开放性肾损伤：刀伤、火器伤、等锐器伤。常伴有胸、腹部其他组织器官损伤。&lt;/p&gt;
&lt;p&gt;\2.    闭合性肾损伤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;直接暴力伤：撞击、跌伤、交通事故&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;间接性损伤：减速伤&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\3.    医源性肾损伤：体外冲击波碎石，PCNL 术&lt;/p&gt;
&lt;p&gt;\4.    病理肾损伤（肾积水、肾肿瘤、肾结核等）&lt;/p&gt;
&lt;h3 id=&#34;二-病理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病理&#34;&gt;#&lt;/a&gt; (二)  病理&lt;/h3&gt;
&lt;p&gt;\1.    肾挫伤：损伤仅局限于部分肾实质，形成肾瘀斑和包膜下血肿，肾包膜及肾盂粘膜完整。可有少量血尿。&lt;/p&gt;
&lt;p&gt;\2.    肾部分损伤：肾实质部分裂伤，可致肾周血肿。可伴有明显的血尿&lt;/p&gt;
&lt;p&gt;\3.    肾全层裂伤：肾实质深度裂伤。外及肾包膜，内达肾盂肾盏粘膜，此时常引起广泛的肾周血肿、血尿和尿外渗。&lt;/p&gt;
&lt;p&gt;\4.    肾蒂血管外伤：肾蒂或肾段血管的部分或全部撕裂时可引起大出血、休克，常来不及诊治就死亡。&lt;/p&gt;
&lt;p&gt;\5.    肾动脉血栓形成（突然减速或加速运动如车祸、从高处坠落。）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;晚期病变：&lt;/p&gt;
&lt;p&gt;\1.    由于持久尿外渗形成的尿囊肿；&lt;/p&gt;
&lt;p&gt;\2.    血肿、组织纤维化、肾积水；&lt;/p&gt;
&lt;p&gt;\3.    动静脉瘘或假性肾动脉瘤；&lt;/p&gt;
&lt;p&gt;\4.    部分肾实质缺血或肾蒂周围纤维化压迫肾动脉，引起肾血管性高血压。&lt;/p&gt;
&lt;h3 id=&#34;三-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-临床表现&#34;&gt;#&lt;/a&gt; (三)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    休克：多因创伤所致失血性休克。临床上应注意合并胸腹其他组织、器官损伤的可能&lt;/p&gt;
&lt;p&gt;\2.    血尿：肾损伤患者大多有血尿&lt;/p&gt;
&lt;p&gt;\3.    疼痛：肾包膜下血肿、肾周围软组织损伤、出血或尿外渗引起患侧腰、腹部疼痛。&lt;/p&gt;
&lt;p&gt;\4.    腰腹部肿块：血液、尿液渗入肾周围组织可使局部肿胀，形成肿块&lt;/p&gt;
&lt;p&gt;\5.    发热：由于血肿、尿外渗易继发感染，甚至导致肾周脓肿或化脓性腹膜炎。&lt;/p&gt;
&lt;h3 id=&#34;四-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-诊断&#34;&gt;#&lt;/a&gt; (四)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    病史与体查&lt;/p&gt;
&lt;p&gt;\2.    化验：尿常规、血常规 。&lt;/p&gt;
&lt;p&gt;\3.    特殊检查&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;CT：首选检查。可清晰显示肾皮质裂伤、尿外渗和血肿范围&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 型超声：能提示肾损害的程度、肾包膜下和肾周血肿及尿外渗情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IVP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动脉造影：少用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;五-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    紧急处理：有大出血、休克的病人（紧记一切创伤的急诊处理均以稳定生命体征，抢救生命为首要任务。）&lt;/p&gt;
&lt;p&gt;\2.    保守治疗：主要针对肾包膜下血肿、表浅肾皮质裂伤及肾周围血肿的治疗。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;绝对卧床休息 2－4 周，不宜过早离床活动，血尿消失后才可以允许病人离床活动。过早过多离床活动，有可能再度出血。恢复后 2－3 个月避免体力劳动及运动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;密切观察生命体征，观察尿液颜色，定期复查血常规：血红蛋白、血细胞比容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;及时补充血容和热量，维持水、电解质平衡，必要时输血。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;广谱抗生素治疗。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;止痛、止血和镇静治疗。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\3.    手术治疗：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;开放性肾损伤：一旦确诊马上手术治疗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;闭合性肾损伤：一旦确诊为严重肾裂伤、肾碎裂及肾蒂损伤应手术治疗&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;保守治疗期间需改手术治疗的指征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;经积极抗休克治疗后生命体症仍未有改善，提示内出血&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;血尿逐渐加重，血红蛋白和血细胞比容继续降低；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;腰、腹部肿块明显增大；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有腹腔脏器损伤可能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二-输尿管外伤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-输尿管外伤&#34;&gt;#&lt;/a&gt; 二、输尿管外伤&lt;/h2&gt;
&lt;h3 id=&#34;一-病因-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病因-2&#34;&gt;#&lt;/a&gt; (一)  病因&lt;/h3&gt;
&lt;p&gt;\1.    医源性外伤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;与输尿管腔内器械操作有关：经膀胱镜逆行输尿管插管、输尿管镜检&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与输尿管腔外手术操作有关：盆腔、腹膜后的开放及腹腔镜手术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\2.    开放性手术损伤：常发生在骨盆、后腹膜广泛解剖的手术如结肠、直肠、子宫切除术以及大血管手术；&lt;/p&gt;
&lt;p&gt;\3.    放射性损伤：见于宫颈癌、前列腺癌放疗后，使输尿管管壁水肿、出血、坏死、形成尿瘘或纤维瘢痕组织形成；&lt;/p&gt;
&lt;h3 id=&#34;二-临床表现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-临床表现&#34;&gt;#&lt;/a&gt; (二)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.   血尿：常见于器械损伤输尿管粘膜，一般血尿会自身缓解&lt;/p&gt;
&lt;p&gt;\2.   尿外渗：可发生损伤时或数日后，尿液由输尿管损伤处渗入后腹膜间隙，引起腰痛、腹痛、腹胀、局部肿胀、包块及触痛。&lt;/p&gt;
&lt;p&gt;\3.   尿瘘：尿液与腹壁创口或阴道、肠道创口相通，形成尿瘘&lt;/p&gt;
&lt;p&gt;\4.   梗阻症状：输尿管被缝扎，可有患侧腰部胀痛、腰肌紧张、肾区叩痛及发热，双侧输尿感被结扎，则可发生无尿&lt;/p&gt;
&lt;h3 id=&#34;三-诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-诊断&#34;&gt;#&lt;/a&gt; (三)  诊断&lt;/h3&gt;
&lt;p&gt;\1.   有外伤、盆腔手术，输尿管内器械操作史&lt;/p&gt;
&lt;p&gt;\2.   临床症状&lt;/p&gt;
&lt;p&gt;\3.   辅助检查：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;静脉注射靛胭脂：可见蓝色尿液从输尿管裂口流出；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逆行肾盂造影显：输尿管插管至损伤部位受阻，示梗阻或造影剂外溢&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逆行尿路造影&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;超声&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;放射性核素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CT&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四-治疗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-治疗&#34;&gt;#&lt;/a&gt; (四)  治疗&lt;/h3&gt;
&lt;p&gt;外伤性输尿管损伤的处理原则：&lt;/p&gt;
&lt;p&gt;①　先抗休克治疗，处理其他严重合并损伤，&lt;/p&gt;
&lt;p&gt;②　尔后处理输尿管损伤，只要病情允许，输尿管损伤应尽早修复伤，以利尿液通畅，保护肾功能。&lt;/p&gt;
&lt;p&gt;\1.    早期治疗&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;输尿管逆行插管所致黏膜外伤出血&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;钳夹伤或小穿孔：宜从输尿管切口插入双 J 形输尿管、支架引流管 (F6)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输尿管被结扎：一旦被发现有误，立即去除结扎线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输尿管断离、部分缺损&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\2.    晚期治疗&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;输尿管狭窄：可留置双 J 管，或可行粘连松解、狭窄段切除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿瘘：尿瘘发生 3 个月后再进行输尿管修补。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输尿管完全梗阻：若梗阻不能及时解除时可先行肾造瘘，1－2 月后再作手术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肾功能重度损害或丧失：损伤性输尿管狭窄所致严重肾积水或感染、肾功能丧失，对侧肾功能正常时可行患侧肾切除。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三-膀胱外伤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-膀胱外伤&#34;&gt;#&lt;/a&gt; 三、膀胱外伤&lt;/h2&gt;
&lt;h3 id=&#34;一-病因-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病因-3&#34;&gt;#&lt;/a&gt; (一)  病因&lt;/h3&gt;
&lt;p&gt;\1.    开放性损伤：锐器贯通伤所致，常合并其他脏器损伤&lt;/p&gt;
&lt;p&gt;\2.    闭合性损伤：当膀胱充盈时，下腹部遭撞击、挤压、骨盆骨折片刺破膀胱壁&lt;/p&gt;
&lt;p&gt;\3.    医源性损伤：膀胱镜检查或治疗，腹股沟疝修补术、阴道手术等可伤及膀胱&lt;/p&gt;
&lt;p&gt;\4.    自发性破裂：有病变的膀胱过度膨胀，发生破裂。&lt;/p&gt;
&lt;h3 id=&#34;二-病理-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病理-2&#34;&gt;#&lt;/a&gt; (二)  病理&lt;/h3&gt;
&lt;p&gt;\1.    挫伤：仅伤及膀胱粘膜或肌层，无尿外渗，可发生血尿&lt;/p&gt;
&lt;p&gt;\2.    膀胱破裂：严重损伤可发生膀胱破裂，分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;腹膜外型：膀胱前壁损伤、膀胱壁破裂，但腹膜完整。尿液外渗到膀胱周围组织及耻骨后间隙，沿骨盆筋膜到盆底，或沿输尿管周围疏松组织蔓延到肾区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;腹膜内型：膀胱后壁及顶部，膀胱壁破裂伴腹膜破裂，与腹腔相通，流入腹腔引起腹膜炎&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-临床表现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-临床表现-2&#34;&gt;#&lt;/a&gt; (三)  临床表现&lt;/h3&gt;
&lt;p&gt;1、 休克：骨盆骨折所致剧痛、大出血，膀胱破裂引起尿外渗及腹膜炎&lt;/p&gt;
&lt;p&gt;2、 腹痛：腹膜外破裂时，尿外渗及血肿引起下腹部疼痛，压痛及肌紧张。腹膜内破裂时，尿液流入腹腔而引起急性腹膜炎症状&lt;/p&gt;
&lt;p&gt;3、 血尿和排尿困难&lt;/p&gt;
&lt;p&gt;4、 尿瘘：开放性损伤可有体表伤口漏尿&lt;/p&gt;
&lt;p&gt;5、 局部症状：闭合性外伤时常伴有表皮肿胀、血肿和瘀斑&lt;/p&gt;
&lt;h3 id=&#34;四-诊断-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-诊断-2&#34;&gt;#&lt;/a&gt; (四)  诊断&lt;/h3&gt;
&lt;p&gt;1、 病史和体检：有下腹部外伤史或骨盆骨折史，专科查体&lt;/p&gt;
&lt;p&gt;2、 导尿试验及注水试验：经导管注入灭菌生理盐水 200ML，片刻后吸出，液体外漏时吸出量会减少，腹腔液体回流时吸出量会增加，若液体进出量差异很大，提示膀胱破裂。&lt;/p&gt;
&lt;p&gt;3、 X 线检查：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;腹平片可以发现骨盆骨折或其他骨折；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;膀胱造影自导尿管注入 15% 泛影葡胺 300ML，拍摄前后位片，可发现造影剂漏出膀胱外&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;五-治疗-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗-2&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    紧急处理：抗休克&lt;/p&gt;
&lt;p&gt;\2.    保守治疗：膀胱挫伤或造影剂仅有少量尿外渗，可从尿道插入导尿  管持续引流尿液 7-10 天&lt;/p&gt;
&lt;p&gt;\3.    手术治疗：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;膀胱破裂伴有出血和尿外渗，病情严重，须尽早施行手术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修补膀胱穿孔，作耻骨上膀胱造瘘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如为腹膜内破裂，应行剖腹探查，分层修补腹膜与膀胱壁，并作腹膜外耻骨上膀胱造瘘。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\4.    并发症处理&lt;/p&gt;
&lt;h2 id=&#34;四-尿道外伤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-尿道外伤&#34;&gt;#&lt;/a&gt; 四、尿道外伤&lt;/h2&gt;
&lt;h3 id=&#34;一-病因-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-病因-4&#34;&gt;#&lt;/a&gt; (一)  病因&lt;/h3&gt;
&lt;p&gt;男性前尿道损伤多发生于球部，这段尿道固定在会阴部。会阴部骑跨伤&lt;/p&gt;
&lt;h3 id=&#34;二-病理-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-病理-3&#34;&gt;#&lt;/a&gt; (二)  病理&lt;/h3&gt;
&lt;p&gt;\1.    前尿道损伤&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;根据外伤程度&lt;/th&gt;
&lt;th&gt;根据外伤部位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;①　 尿道挫伤：仅局部水肿，一般不发生尿道狭窄  ②　 尿道裂伤：部分尿道壁完整，愈后往往有瘢痕性尿道狭窄  ③　 尿道断裂：伤处完全断离，断端退缩分离，血肿较大时发生尿潴留，用力排尿则发生尿外渗&lt;/td&gt;
&lt;td&gt;①　 尿道球部：血液渗入会阴浅筋膜，使回音、阴囊、阴茎肿胀  ②　 尿道阴茎部外伤：如阴茎筋膜完整，血液渗入阴茎筋膜；若阴茎筋膜破裂，尿外渗与引导球部外伤相同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;\2.    后尿道损伤：骨盆骨折引起尿道膜部撕裂，持股前列腺韧带撕裂致前列腺向上后方位移。尿液沿前列腺尖处可外审到耻骨后间隙和膀胱周围&lt;/p&gt;
&lt;h3 id=&#34;三-临床表现-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-临床表现-3&#34;&gt;#&lt;/a&gt; (三)  临床表现&lt;/h3&gt;
&lt;p&gt;\1.    尿道出血&lt;/p&gt;
&lt;p&gt;\2.    疼痛&lt;/p&gt;
&lt;p&gt;\3.    局部肿胀&lt;/p&gt;
&lt;p&gt;\4.    排尿困难&lt;/p&gt;
&lt;p&gt;\5.    尿外渗&lt;/p&gt;
&lt;h3 id=&#34;四-诊断-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-诊断-3&#34;&gt;#&lt;/a&gt; (四)  诊断&lt;/h3&gt;
&lt;p&gt;\1.    病史和体检&lt;/p&gt;
&lt;p&gt;\2.    诊断性导尿&lt;/p&gt;
&lt;p&gt;\3.    逆行尿道造影&lt;/p&gt;
&lt;h3 id=&#34;五-治疗-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-治疗-3&#34;&gt;#&lt;/a&gt; (五)  治疗&lt;/h3&gt;
&lt;p&gt;\1.    紧急处理：压迫止血，防止休克&lt;/p&gt;
&lt;p&gt;\2.    尿道挫伤：止血止痛、抗感染，必要时导尿&lt;/p&gt;
&lt;p&gt;\3.    尿道断裂：导尿，必要时会阴尿道修补术&lt;/p&gt;
&lt;p&gt;\4.    并发症处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;尿外渗：切开引流；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿道狭窄：尿道扩张；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尿瘘：解除狭窄，清理瘘管&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/09/medical/waike1/</guid>
            <title>第四十六篇   泌尿、男性生殖系统外科检查和诊断</title>
            <link>http://zyczxq.com/2021/09/09/medical/waike1/</link>
            <category term="外科学" scheme="http://zyczxq.com/categories/%E5%A4%96%E7%A7%91%E5%AD%A6/" />
            <pubDate>Thu, 09 Sep 2021 12:18:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第四十六篇-泌尿-男性生殖系统外科检查和诊断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四十六篇-泌尿-男性生殖系统外科检查和诊断&#34;&gt;#&lt;/a&gt; 第四十六篇   泌尿、男性生殖系统外科检查和诊断&lt;/h1&gt;
&lt;h2 id=&#34;一-主要症状&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-主要症状&#34;&gt;#&lt;/a&gt; 一、主要症状&lt;/h2&gt;
&lt;p&gt;主要分为四类：&lt;/p&gt;
&lt;p&gt;①　与泌尿系统或男性生殖系统直接相关，如血尿、阴囊肿块等&lt;/p&gt;
&lt;p&gt;②　与其他器官系统相关的症状，如消化道症状、骨痛等；&lt;/p&gt;
&lt;p&gt;③　全身症状，如发热、体重减轻等；&lt;/p&gt;
&lt;p&gt;④　无明显的症状，在其他检查时偶被发现；&lt;/p&gt;
&lt;h3 id=&#34;1疼痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1疼痛&#34;&gt;#&lt;/a&gt; （1）疼痛&lt;/h3&gt;
&lt;h4 id=&#34;1肾和输尿管痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1肾和输尿管痛&#34;&gt;#&lt;/a&gt; 1) 肾和输尿管痛：&lt;/h4&gt;
&lt;p&gt;①　 肾及其包膜、上段输尿管的受脊髓的胸 10 - 腰 1 的感觉神经支配&lt;/p&gt;
&lt;p&gt;②　 多由患肾使肾包膜扩张、炎症或集合系统扩张所致&lt;/p&gt;
&lt;p&gt;③　 患肾引起的疼痛多呈持续性钝痛，局限于脊肋角、腰部和上腹部；亦可为锐痛，伴有腹股沟、同侧睾丸或腰椎方向的放射痛&lt;/p&gt;
&lt;p&gt;④　 当肾盂输尿管连接部或输尿管急性完全性梗阻时，发生肾绞痛：&lt;/p&gt;
&lt;p&gt;呈阵发性发作的刀割样剧烈疼痛&lt;/p&gt;
&lt;p&gt;恶心、呕吐&lt;/p&gt;
&lt;p&gt;（放射痛）疼痛由脊肋角向下沿输尿管行径可放射至下腹部、膀胱区及会阴部，男性放射至同侧阴囊或睾丸，女性放射至大阴唇&lt;/p&gt;
&lt;p&gt;间歇期可无任何症状&lt;/p&gt;
&lt;h4 id=&#34;2-膀胱痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-膀胱痛&#34;&gt;#&lt;/a&gt; 2)    膀胱痛&lt;/h4&gt;
&lt;p&gt;①　 急性尿潴留导致膀胱过度扩张，疼痛常为下腹部胀痛不适&lt;/p&gt;
&lt;p&gt;②　 慢性尿潴留（膀胱可以扩张至平脐，但多数症状不明显）&lt;/p&gt;
&lt;p&gt;③　 在膀胱充盈时出现严重疼痛，常为间质性膀胱炎、严重的结核性膀胱炎所致&lt;/p&gt;
&lt;p&gt;④　 在排尿终末出现之疼痛，常见于膀胱结石、膀胱炎等，常伴有尿频、尿急及排尿困难，有时疼痛可放射至阴茎龟头。&lt;/p&gt;
&lt;h4 id=&#34;3-前列腺痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-前列腺痛&#34;&gt;#&lt;/a&gt; 3)    前列腺痛&lt;/h4&gt;
&lt;p&gt;①　 会阴部剧烈胀痛见于急性前列腺炎或前列腺脓肿&lt;/p&gt;
&lt;p&gt;②　 会阴不适或轻度胀痛系慢性前列腺炎所致&lt;/p&gt;
&lt;p&gt;③　疼痛部位常不甚明确，甚至可引起阴囊疼痛，需与睾丸附睾炎鉴别&lt;/p&gt;
&lt;p&gt;④　 炎症等可会引起会阴、直肠、腰骶部、耻骨上区、腹股沟区及搞完的疼痛和不适&lt;/p&gt;
&lt;h4 id=&#34;4-尿道痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-尿道痛&#34;&gt;#&lt;/a&gt; 4)    尿道痛&lt;/h4&gt;
&lt;p&gt;①　 可呈灼痛、刺痛和剧烈疼痛，常见于尿道炎和尿道结石，排尿时疼痛加剧。&lt;/p&gt;
&lt;p&gt;②　 有时输尿管下段结石引起疼痛也可放射到尿道口或阴茎头&lt;/p&gt;
&lt;h4 id=&#34;5-阴囊痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-阴囊痛&#34;&gt;#&lt;/a&gt; 5)    阴囊痛&lt;/h4&gt;
&lt;p&gt;①　 附睾或睾丸炎症、睾丸扭转，损伤等可致阴囊部疼痛，表现为胀痛，剧烈疼痛和跳痛，并沿精索放射引起腹股部和下腹部疼痛&lt;/p&gt;
&lt;p&gt;②　 鞘膜积液、精索静脉曲张和睾丸肿瘤时可有阴囊坠胀感，疼痛并不明显&lt;/p&gt;
&lt;h4 id=&#34;6-阴茎痛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-阴茎痛&#34;&gt;#&lt;/a&gt; 6)    阴茎痛&lt;/h4&gt;
&lt;p&gt;①　 非勃起状态时发生于膀胱或尿道炎症，尿道口可放射痛&lt;/p&gt;
&lt;p&gt;②包皮嵌顿引起阴茎头远端和阴茎头回流障碍，局部水肿、淤血所致&lt;/p&gt;
&lt;h3 id=&#34;2下尿路症状与排尿相关的症状&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2下尿路症状与排尿相关的症状&#34;&gt;#&lt;/a&gt; （2）下尿路症状（与排尿相关的症状）&lt;/h3&gt;
&lt;h4 id=&#34;1-刺激症状膀胱刺激症&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-刺激症状膀胱刺激症&#34;&gt;#&lt;/a&gt; 1)    刺激症状（膀胱刺激症）&lt;/h4&gt;
&lt;p&gt;①　 尿频：病人感到有尿意的次数明显增加&lt;/p&gt;
&lt;p&gt;ü 正常人尿次白天 4-6 次，夜间 0-1 次&lt;/p&gt;
&lt;p&gt;ü 正常膀胱容量男性约 400ml，女性约 500ml&lt;/p&gt;
&lt;p&gt;ü 随年龄、气候、饮水量、精神因素排尿次数可增多&lt;/p&gt;
&lt;p&gt;尿频可以分为两种情况：&lt;/p&gt;
&lt;p&gt;ü 尿总量增加，每次排尿量不变，排尿次数增加．除饮水量增加所致尿次增加的正常情况外，常见于某些内科疾病，如糖尿病、尿崩症、肾功能衰竭多尿期等&lt;/p&gt;
&lt;p&gt;ü 尿总量不变，每次排尿量减少，排尿次数增加：泌尿、生殖道炎症、膀胱容量减少、下尿路梗阻（前列腺增生症）时残余尿增多&lt;/p&gt;
&lt;p&gt;②　 尿急：一种突发的、强烈的排尿欲望，且很难被主观抑制而延迟排尿。每次尿量很少，常与尿频同时存在&lt;/p&gt;
&lt;p&gt;③　尿痛：排尿时感到尿道疼痛，可以发生在排尿初、中、末或排尿后。疼痛呈烧灼感，与膀胱、尿道或前列腺感染有关。尿痛常与尿频、尿急相伴随，三者同时出现，称为膀胱刺激症状&lt;/p&gt;
&lt;h4 id=&#34;2-梗阻症状&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-梗阻症状&#34;&gt;#&lt;/a&gt; 2)    梗阻症状&lt;/h4&gt;
&lt;p&gt;①　 排尿困难：泛指临床表现为排尿延迟、尿线细小、分叉、滴沥、排尿时费力、尿后不净感、时间延长等。通常由于膀胱以下尿路梗阻所致。&lt;/p&gt;
&lt;p&gt;②　尿流中断：排尿过程中尿流突然中断，常伴有放射至远端尿道的剧烈疼痛。主要原因为膀胱结石，前列腺增生症&lt;/p&gt;
&lt;p&gt;③　 尿潴留：分为急性和慢性两类&lt;/p&gt;
&lt;p&gt;​    急性尿潴留：是由于膀胱颈以下严重梗阻，突然不能排尿，大量尿液潴留于膀胱内，膀胱过度充盈，膀胱逼尿肌发生弹性疲劳，暂时失去逼尿功能。腹部会阴部手术后切口疼痛亦可引起。&lt;/p&gt;
&lt;p&gt;慢性尿潴留：是由于膀胱颈以下不完全梗阻或神经源性膀胱所致。表现为排尿困难、膀胱充盈，甚至充盈性尿失禁&lt;/p&gt;
&lt;h4 id=&#34;3-尿失禁&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-尿失禁&#34;&gt;#&lt;/a&gt; 3)    尿失禁&lt;/h4&gt;
&lt;p&gt;①　 持续性尿失禁（真性尿失禁）：尿道括约肌丧失控制尿液的功能。尿液持续地从膀胱或泌尿道瘘中流出，几乎没有正常的排尿，膀胱呈空虚状态&lt;/p&gt;
&lt;p&gt;②　 充溢性尿失禁（假性尿失禁）：膀胱过度充盈引起尿液不断外溢。见于各种原因导致的慢性尿潴留。&lt;/p&gt;
&lt;p&gt;③　 急迫性尿失禁：是指膀胱逼尿肌无抑制性收缩或继发于膀胱严重感染而致的尿失禁。&lt;/p&gt;
&lt;p&gt;④　 压力性尿失禁：当腹内压突然增高（咳嗽、喷嚏、大笑、运动等）时，尿液不随意地流出。多由于多次分娩或产伤导致膀胱支持组织或盆底松弛所致。&lt;/p&gt;
&lt;h4 id=&#34;4-遗尿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-遗尿&#34;&gt;#&lt;/a&gt; 4)    遗尿：&lt;/h4&gt;
&lt;p&gt;①　 除正常自主性排尿外，睡眠中出现无意识的排尿。&lt;/p&gt;
&lt;p&gt;②　 在 2-3 岁以前为生理性，3 岁以上除功能性以外，可由于神经源性膀胱、感染、后尿道瓣膜、尿道狭窄等病理因素引起。&lt;/p&gt;
&lt;h3 id=&#34;3尿液改变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3尿液改变&#34;&gt;#&lt;/a&gt; （3）尿液改变&lt;/h3&gt;
&lt;h4 id=&#34;1-尿量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-尿量&#34;&gt;#&lt;/a&gt; 1)     尿量&lt;/h4&gt;
&lt;p&gt;①　 正常人 24 小时尿量为 1000～2000ml&lt;/p&gt;
&lt;p&gt;②　 尿量＜100ml/24h 为无尿；尿量＜400ml/24h 为少尿；尿量达 3000～5000ml/24h 为多尿；完全性无尿为尿闭 。&lt;/p&gt;
&lt;p&gt;③　 少尿和无尿提示肾功能受损或衰竭&lt;/p&gt;
&lt;h4 id=&#34;2-尿的观察&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-尿的观察&#34;&gt;#&lt;/a&gt; 2)     尿的观察&lt;/h4&gt;
&lt;h5 id=&#34;1血尿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1血尿&#34;&gt;#&lt;/a&gt; ①血尿：&lt;/h5&gt;
&lt;p&gt;尿液中含有红细胞，分为肉眼血尿和镜下血尿&lt;/p&gt;
&lt;p&gt;ü 肉眼血尿为肉眼能见到血色的尿，通常在 1000ml 尿中含 1ml 血液即肉眼可见&lt;/p&gt;
&lt;p&gt;ü 镜下血尿为新鲜尿离心后尿沉渣每高倍镜视野红细胞 &amp;gt; 3 个&lt;/p&gt;
&lt;p&gt;ü 血尿的色泽因含血量、尿 pH 及出血部位而不同&lt;/p&gt;
&lt;p&gt;・来自膀胱的血尿或尿呈碱性时，色泽较鲜艳&lt;/p&gt;
&lt;p&gt;・来自肾、输尿管的血尿或尿呈酸性时，色泽较暗&lt;/p&gt;
&lt;p&gt;・来自膀胱的血尿可伴有大小不等的血块&lt;/p&gt;
&lt;p&gt;・来自肾、输尿管的血尿可伴有蚯蚓状血块  ü 三段血尿：&lt;/p&gt;
&lt;p&gt;・初始血尿：血尿出现于排尿初期，提示出血部位在尿道和膀胱颈。&lt;/p&gt;
&lt;p&gt;・终未血尿：血尿出现于排尿终未，提示病变在后尿道、膀胱颈和膀胱三角区&lt;/p&gt;
&lt;p&gt;・全程血尿：血尿出现于排尿全程，提示病变在膀胱或其以上部位。&lt;/p&gt;
&lt;p&gt;ü 几个注意的问题&lt;/p&gt;
&lt;p&gt;・有些药物可引起血尿，如环磷酰胺、别嘌呤醇、肝素等。&lt;/p&gt;
&lt;p&gt;・不是所有红色尿液都是血尿，有些食物和药物可以使尿液呈红色、黄红色或褐色，如大黄、酚酞、利福平、四环素、酚红、嘌呤类药物等。&lt;/p&gt;
&lt;p&gt;・血红蛋白尿、肌红蛋白尿或因前尿道病变出血所致尿道口滴血以及临近器官出血混入尿液不能称为血尿，应注意与相鉴别。&lt;/p&gt;
&lt;p&gt;・血尿程度与疾病严重性不成正比。&lt;/p&gt;
&lt;h5 id=&#34;2混浊尿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2混浊尿&#34;&gt;#&lt;/a&gt; ②混浊尿：&lt;/h5&gt;
&lt;p&gt;尿液混浊，常见有晶体尿、磷酸盐尿、脓尿、乳糜尿等。&lt;/p&gt;
&lt;p&gt;・脓尿：是由于尿液中含大量白细胞，是泌尿系感染的表现。一般认为，新鲜尿液离心后，尿沉渣镜检每高倍镜视野白细胞＞5 个提示尿路感染或炎症&lt;/p&gt;
&lt;p&gt;・磷酸盐尿：尿中含有大量磷酸盐结晶，尿液白色而混浊．若外界气温低，尿排出时尚清亮、稍等即见变白，这是因为变冷后溶解度变小，磷酸盐结晶析出之故。临床上鉴别是否磷酸盐尿，取此尿 4～5ml 置于试管中，加入冰醋酸数滴，或加热可使尿液变清。&lt;/p&gt;
&lt;p&gt;・乳糜尿：尿中含有乳糜或淋巴液，尿呈牛奶状，可有乳糜凝块及脂肪滴漂浮。&lt;/p&gt;
&lt;p&gt;鉴别是否乳糜尿可取尿液 4～5ml 置于试管内，加 1ml 乙醚，混匀后尿液变清即为乳糜尿试验阳性。（&lt;em&gt;乳糜尿中的脂肪可溶解于乙醚中，而脂肪小滴可通过苏丹 **III&lt;/em&gt; &lt;em&gt;醋酸乙醇染色液或者猩红染色液来识别。&lt;/em&gt;）&lt;/p&gt;
&lt;p&gt;​    乳糜尿中含有红细胞，其颜色则为粉红色，称乳糜血尿．&lt;/p&gt;
&lt;p&gt;乳糜尿说明淋巴管与尿路沟通，多因血丝虫病阻塞了淋巴回流．长期有乳糜尿的 患者因营养物质大量丢失，常见消瘦。&lt;/p&gt;
&lt;h5 id=&#34;3气尿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3气尿&#34;&gt;#&lt;/a&gt; ③气尿：&lt;/h5&gt;
&lt;p&gt;排尿同时有气体与尿液一起排出&lt;/p&gt;
&lt;h3 id=&#34;4性功能障碍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4性功能障碍&#34;&gt;#&lt;/a&gt; （4）性功能障碍&lt;/h3&gt;
&lt;p&gt;男性性功能障碍表现为性欲低下、勃起功能障碍、射精障碍（早泄、不射精和逆行射精）等&lt;/p&gt;
&lt;h4 id=&#34;勃起功能障碍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#勃起功能障碍&#34;&gt;#&lt;/a&gt; 勃起功能障碍：&lt;/h4&gt;
&lt;p&gt;持续或反复不能达到或维持足够阴茎勃起以完成满意性生活&lt;/p&gt;
&lt;h4 id=&#34;早泄&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#早泄&#34;&gt;#&lt;/a&gt; 早泄：&lt;/h4&gt;
&lt;p&gt;从初次性交开始，射精往往或总是在插入阴道 1 分钟左右发生（原发性早泄），或者射精潜伏时间有显著缩短，通常少于 3 分钟（继发性早泄）；总是或几乎总是不能延迟射精；消极的身心影响，如苦恼、忧虑、沮丧和（或）躲避性生活等&lt;/p&gt;
&lt;h2 id=&#34;二-实验室检查和影像学检查的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-实验室检查和影像学检查的方法&#34;&gt;#&lt;/a&gt; 二、实验室检查和影像学检查的方法。&lt;/h2&gt;
&lt;h3 id=&#34;一-实验室检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-实验室检查&#34;&gt;#&lt;/a&gt; (一)  实验室检查&lt;/h3&gt;
&lt;h4 id=&#34;1-尿液检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-尿液检查&#34;&gt;#&lt;/a&gt; 1、尿液检查：&lt;/h4&gt;
&lt;p&gt;尿液收集、尿沉渣、尿三杯试验、尿细菌学、尿细胞学检查、肿瘤标志物测定&lt;/p&gt;
&lt;h5 id=&#34;1-尿标本采集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-尿标本采集&#34;&gt;#&lt;/a&gt; 1)    尿标本采集：&lt;/h5&gt;
&lt;p&gt;①　标本应收集新鲜中段尿；&lt;/p&gt;
&lt;p&gt;②　尿液细菌学检查应消毒尿道外口，收集清洁中段尿或无菌导尿标本；&lt;/p&gt;
&lt;p&gt;③　耻骨上膀胱穿刺抽取尿液标本最为准确。&lt;/p&gt;
&lt;p&gt;④　男性包皮过长应翻开包皮后收集；女性应避开月经期。&lt;/p&gt;
&lt;p&gt;⑤　24 小时尿液标本根据检验项目要求收集。&lt;/p&gt;
&lt;h5 id=&#34;2-尿常规检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-尿常规检查&#34;&gt;#&lt;/a&gt; 2)    尿常规检查：&lt;/h5&gt;
&lt;p&gt;包括颜色、透明度、酸硷反应、比重，蛋白、尿糖及显微镜检查红细胞，白细胞等。&lt;/p&gt;
&lt;h5 id=&#34;3-尿三杯试验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-尿三杯试验&#34;&gt;#&lt;/a&gt; 3)    尿三杯试验&lt;/h5&gt;
&lt;p&gt;①　以最初 10~15ml 尿为第一杯，&lt;/p&gt;
&lt;p&gt;②　以排尿最后 10ml 为第三杯，&lt;/p&gt;
&lt;p&gt;③　中间部分为第二杯&lt;/p&gt;
&lt;p&gt;④　收集时尿流应连续。&lt;/p&gt;
&lt;p&gt;⑤　可初步判定镜下血尿和脓尿的来源和病变部位。&lt;/p&gt;
&lt;h5 id=&#34;4-尿细菌学检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-尿细菌学检查&#34;&gt;#&lt;/a&gt; 4)    尿细菌学检查&lt;/h5&gt;
&lt;p&gt;①　Gram 染色尿沉渣涂片检查：可初步提供细菌的种类，作为选用药物的参考。&lt;/p&gt;
&lt;p&gt;②　尿结核菌检查：尿沉渣抗酸染色涂片检查或结核菌培养。检查结核杆菌需收集 24 小时尿，浓缩后抗酸染色，应连续作三天。&lt;/p&gt;
&lt;p&gt;③　中段尿培养及菌落计数：尿内菌落计数每毫升 10 万以上提示为尿路感染，同时做药物敏感试验，供临床用药参考。&lt;/p&gt;
&lt;h5 id=&#34;5-尿细胞学检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-尿细胞学检查&#34;&gt;#&lt;/a&gt; 5)    尿细胞学检查&lt;/h5&gt;
&lt;p&gt;①　应收集新鲜尿液的沉渣，涂片染色，镜下检查肿瘤细胞&lt;/p&gt;
&lt;p&gt;②　阳性结果提示可能有泌尿系统移行细胞肿瘤&lt;/p&gt;
&lt;p&gt;③　采用液基细胞学检查可提高检出率&lt;/p&gt;
&lt;p&gt;④　Gram 染色尿沉渣涂片检查：可初步提供细菌的种类，作为选用药物的参考。&lt;/p&gt;
&lt;p&gt;⑤　尿结核菌检查：尿沉渣抗酸染色涂片检查或结核菌培养。检查结核杆菌需收集 24 小时尿，浓缩后抗酸染色，应连续作三天。&lt;/p&gt;
&lt;p&gt;⑥　中段尿培养及菌落计数：尿内菌落计数每毫升 10 万以上提示为尿路感染，同时做药物敏感试验，供临床用药参考。&lt;/p&gt;
&lt;h5 id=&#34;6-肿瘤标志物测定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-肿瘤标志物测定&#34;&gt;#&lt;/a&gt; 6)    肿瘤标志物测定&lt;/h5&gt;
&lt;h4 id=&#34;2-肾功能检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-肾功能检查&#34;&gt;#&lt;/a&gt; 2、肾功能检查：&lt;/h4&gt;
&lt;p&gt;①　尿比重：主要反映肾浓缩功能和排泄废物功能&lt;/p&gt;
&lt;p&gt;②　血尿素氮和血肌酐：正常肾组织不少于双侧肾总量的 1/3，血肌酐值仍保持正常水平。尿素氮受分解代谢、饮食、消化道出血等多种因素影响，不如血肌酐准确。&lt;/p&gt;
&lt;p&gt;③　内生肌酐清除率：血肌酐由肾小球滤过。内生肌酐清除率接近于用菊糖测定的肾小球滤过率&lt;/p&gt;
&lt;p&gt;④　酚红排泄试验&lt;/p&gt;
&lt;h4 id=&#34;3-血清前列腺特异性抗原检测psa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-血清前列腺特异性抗原检测psa&#34;&gt;#&lt;/a&gt; 3、  血清前列腺特异性抗原检测（PSA）：&lt;/h4&gt;
&lt;p&gt;①　前列腺特异性抗原由前列腺腺泡和导管的上皮细胞产生，具有前列腺组织特异性。&lt;/p&gt;
&lt;p&gt;②　健康男性血清 PSA＜4ng/ml，如＞10ng/ml 应高度怀疑前列腺癌可能。4~10ng/ml 结合磁共振检查综合判断。&lt;/p&gt;
&lt;h4 id=&#34;4-前列腺液检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-前列腺液检查&#34;&gt;#&lt;/a&gt; 4、  前列腺液检查：&lt;/h4&gt;
&lt;p&gt;用前列腺按摩法采取前列腺液。&lt;/p&gt;
&lt;p&gt;①　正常前列腺液为稀簿乳白色液体，涂片镜检：可见多量的卵磷脂小体，白细胞数不超过 10 个 / 每高倍视野，偶见精子。&lt;/p&gt;
&lt;p&gt;②　前列腺炎时，白细胞或脓细胞 10 个 / 每高倍视野以上，卵磷脂小体减少。&lt;/p&gt;
&lt;p&gt;③　前列腺液亦可做细菌培养。急性前列腺炎或疑有前列腺癌时，不宜做前列腺按摩。&lt;/p&gt;
&lt;h4 id=&#34;5-精液分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-精液分析&#34;&gt;#&lt;/a&gt; 5、  精液分析：&lt;/h4&gt;
&lt;p&gt;①　手淫或体外排精收集标本。检查前 3~7 天内没有排精，精液标本应立即送检或保存在体温下半小时内送检。&lt;/p&gt;
&lt;p&gt;②　是了解男性生育能力或输精管结扎术后效果的重要依据。&lt;/p&gt;
&lt;p&gt;③　常规精液检查包括量、颜色、pH、粘稠度、密度、数量、存活力、活动力、畸形率等精子状况及精浆生化测定。&lt;/p&gt;
&lt;p&gt;④　正常精液量 2～6 毫升，乳白色不透明的粘稠液体，5～30 分钟内液化，pH7～8，精子计数不少于 2000 万 /ml，精子存活率超过 60%，活动力大于 50% 正常形态精子超过 4%，畸形精子少于 96％。&lt;/p&gt;
&lt;p&gt;⑤　精浆中果糖反映精囊功能，枸橼酸和酸性磷酸酶反映前列腺功能，肉毒碱反映附睾功能。&lt;/p&gt;
&lt;h3 id=&#34;二-影像学检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-影像学检查&#34;&gt;#&lt;/a&gt; (二)  影像学检查&lt;/h3&gt;
&lt;h4 id=&#34;1-b超&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-b超&#34;&gt;#&lt;/a&gt; \1.    B 超&lt;/h4&gt;
&lt;p&gt;①　泌尿外科疾病的筛选、诊断和随访，介入治疗&lt;/p&gt;
&lt;p&gt;②　确定肾肿块性质、结石和肾积水；测定残余尿、测量前列腺体积等；阴囊肿块。B 超引导下穿刺、引流及活检等&lt;/p&gt;
&lt;p&gt;③　近年超声造影逐步开展，由于不用有肾毒性的造影剂，可用于肾衰竭病人，亦用于禁忌作静脉尿路造影或不宜接受 X 线照射的病人。但超声检查有时受骨骼、气体等的干扰而影响诊断的正确性&lt;/p&gt;
&lt;h4 id=&#34;2-x线检查&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-x线检查&#34;&gt;#&lt;/a&gt; \2.    X 线检查&lt;/h4&gt;
&lt;p&gt;①　尿路平片：可显示肾轮廓、位置、大小，腰大肌阴影，不透光阴影以及骨性改变&lt;/p&gt;
&lt;p&gt;②　排泄性尿路造影：即静脉尿路造影，能显示尿路形态是否规则，有无扩张、推移、压迫和充盈缺损等；同时可了解分侧肾功能。造影前应作碘过敏试验。妊娠及肾功能严重损害为禁忌证&lt;/p&gt;
&lt;p&gt;③　逆行肾盂造影：经膀胱尿道镜行输尿管插管注入有机碘造影剂来显示输尿管和肾集合系统。适用于静脉尿路造影显示尿路不清晰或禁忌者&lt;/p&gt;
&lt;p&gt;④　顺行肾盂造影：在 B 超指引下经皮穿刺入肾盂，注入造影剂以显示上尿路情况。适用于上述造影方法失败或有禁忌而怀疑梗阻性病变存在者&lt;/p&gt;
&lt;p&gt;⑤　膀胱造影：采用导尿管置入膀胱后注入造影剂，可显示膀胱形态及其病变如损伤、畸形、瘘管、神经源性膀胱及膀胱肿瘤等&lt;/p&gt;
&lt;p&gt;⑥　血管造影&lt;/p&gt;
&lt;p&gt;⑦　淋巴造影&lt;/p&gt;
&lt;p&gt;⑧　精道造影&lt;/p&gt;
&lt;p&gt;⑨　CT：适用于鉴别肾囊肿和肾实质性病变，确定肾损伤范围和程度，肾、膀胱、前列腺癌及肾上腺肿瘤的诊断和分期&lt;/p&gt;
&lt;h4 id=&#34;3-磁共振成像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-磁共振成像&#34;&gt;#&lt;/a&gt; \3.    磁共振成像&lt;/h4&gt;
&lt;p&gt;①　能显示被检查器官组织的结构和功能，并可显示脏器血流灌注情况。对分辨肾肿瘤的良、恶性，判定膀胱肿瘤浸润膀胱壁的深度、前列腺癌分期，确诊肾上腺肿块等，可以提供较 CT 更为可靠的依据&lt;/p&gt;
&lt;p&gt;②　有起搏器或金属支架的病人不宜行 MRI&lt;/p&gt;
&lt;h4 id=&#34;4-放射性核素显像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-放射性核素显像&#34;&gt;#&lt;/a&gt; \4.    放射性核素显像&lt;/h4&gt;
&lt;p&gt;①　肾图：是在两个肾区测得的放射性核素活度与时间的函数曲线图，可测定肾小管分泌功能和显示上尿路有无梗阻&lt;/p&gt;
&lt;p&gt;②　肾显像：分静态和动态显像。静态显像显示核素在肾内的分布图像，而动态显像显示肾吸收、浓集和排出核素显像剂的全过程。能显示肾形态、大小及有无占位病变，可了解肾功能、测定肾小球滤过率和有效肾血流量&lt;/p&gt;
&lt;p&gt;③　肾上腺皮质和髓质核素显像： 对肾上腺疾病有诊断价值，尤用于肾上腺占位性病变如嗜铬细胞瘤&lt;/p&gt;
&lt;p&gt;④　阴囊显像：放射性核素血流检查可判断睾丸的存活及其能力，并可与对侧的血流灌注相比较，如常用于怀疑睾丸扭转或精索内静脉曲张等&lt;/p&gt;
&lt;p&gt;⑤　骨显像：可显示全身骨骼系统有无肿瘤转移，如肾癌、前列腺癌骨转移&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/07/medical/psychiatry/</guid>
            <title>精神病学</title>
            <link>http://zyczxq.com/2021/09/07/medical/psychiatry/</link>
            <category term="精神病学" scheme="http://zyczxq.com/categories/%E7%B2%BE%E7%A5%9E%E7%97%85%E5%AD%A6/" />
            <pubDate>Tue, 07 Sep 2021 22:17:32 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第一章-绪论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-绪论&#34;&gt;#&lt;/a&gt; 第一章 绪论&lt;/h1&gt;
&lt;h2 id=&#34;一-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-概述&#34;&gt;#&lt;/a&gt; 一、概述&lt;/h2&gt;
&lt;h3 id=&#34;一-精神病学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-精神病学&#34;&gt;#&lt;/a&gt; (一)  精神病学&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;精神病学是医学的一个分支学科，是研究各种精神疾病的病因、发病机理、临床表现、疾病发展规律以及治疗和预防的一门学科&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;亚专科分支：社会、司法、儿童、老年、成瘾、生物精神病学等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-精神障碍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-精神障碍&#34;&gt;#&lt;/a&gt; (二)  精神障碍&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;精神障碍一类具有诊断意义的精神方面的异常&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特征：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　认知、情绪、行为等方面的改变和异常&lt;/p&gt;
&lt;p&gt;②　伴有内心痛苦体验和（或）社会功能损害&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;DSM-5 的定义：精神障碍是一种综合征，其特征表现为个体的认知、情绪调节或行为方面具有临床意义的功能损害，它反映了潜在的精神功能在心理、生物或发展过程中的异常。精神障碍通常与社会、职业、或其他重要活动中的显著的痛苦或功能损害相关&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二-脑与精神活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-脑与精神活动&#34;&gt;#&lt;/a&gt; 二、脑与精神活动&lt;/h2&gt;
&lt;p&gt;人类所有精神活动（广义上的行为）均由大脑控制&lt;/p&gt;
&lt;h3 id=&#34;一-脑结构与精神活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-脑结构与精神活动&#34;&gt;#&lt;/a&gt; (一)  脑结构与精神活动&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;大脑约含 1000 亿个神经细胞和更多的神经胶质细胞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复杂的神经细胞之间的联系和细胞内信号转导形成脑信号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单个神经元可以成为多个神经环路的一部分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果脑结构遭到破坏，势必影响正常的精神功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二-脑神经化学与精神活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-脑神经化学与精神活动&#34;&gt;#&lt;/a&gt; (二)  脑神经化学与精神活动&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;神经元的电信号在突触处转化为化学信号，然后转化为电信号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;神经递质分类：小分子（如单胺类）、大分子（如 P 物质）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;受体分类：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;①　配体门控通道：神经递质与受体结合后，离子通道开放，增加细胞膜的通透性：正离子兴奋，负离子抑制。&lt;/p&gt;
&lt;p&gt;②　G 蛋白偶联受体&lt;/p&gt;
&lt;h3 id=&#34;三-脑可塑性与精神活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-脑可塑性与精神活动&#34;&gt;#&lt;/a&gt; (三)  脑可塑性与精神活动&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;脑的结构与化学活动在变化之中（可塑性，plasticity）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可塑性是神经系统的重要特征，神经系统的可塑性已成为行为适应性的生理基础&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在宏观上可以表现为脑功能，如学习记忆功能、行为表现及精神活动改变；在微观水平有神经元突触、神经环路的微细结构与功能的变化，包括神经化学物质（递 质、受体等）、神经电生理活动以及突触形态亚微结构等方面的变化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/09/01/JavaScript/axios/</guid>
            <title>Axios源码解析</title>
            <link>http://zyczxq.com/2021/09/01/JavaScript/axios/</link>
            <category term="前端" scheme="http://zyczxq.com/categories/JavaScript/" />
            <pubDate>Wed, 01 Sep 2021 14:34:36 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;前几天面试，和面试官聊天时&lt;/p&gt;
&lt;p&gt;面试官：“你有没有想过看一下源码，而不是看那些分析文章，可能直接看源码收益来的直接一点”&lt;/p&gt;
&lt;p&gt;我：“以前尝试过看的框架源码，不过觉得好晦涩，看不懂，打算等水平提升一点再看”&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;于是最近几天，我觉得自己的水平相比以前也有点提升，虽然看不懂框架源码，但是我应该勉强能看懂一些简单库的源码？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;于是就选中了 Axios&lt;/strong&gt;，仔细查找一番资料 + 拉取 github 上的代码慢慢看，确实有了不少收获，还加深了理解。&lt;/p&gt;
&lt;p&gt;于是就有了这篇文章，不过源码的内容实在太多，所以这篇文章只是简单对工作流程源码的一篇解析，其他的功能还请慢慢读源码&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;第一次写，可能有点乱，求大佬轻喷&lt;/p&gt;
&lt;h1 id=&#34;axios是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#axios是什么&#34;&gt;#&lt;/a&gt; Axios 是什么&lt;/h1&gt;
&lt;p&gt;axios 是一个基于 Promise 的 HTTP 库，可以用在浏览器和 nodejs 之中使用。&lt;/p&gt;
&lt;p&gt;它的特点有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从浏览器创建 XMLHttpRequests&lt;/li&gt;
&lt;li&gt;从 nodejs 创建 http 请求&lt;/li&gt;
&lt;li&gt;支持 Promise&lt;/li&gt;
&lt;li&gt;拦截请求和响应&lt;/li&gt;
&lt;li&gt;取消请求&lt;/li&gt;
&lt;li&gt;自动转换 JSON&lt;/li&gt;
&lt;li&gt;客户端支持防御 CSRF&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;axios使用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#axios使用方式&#34;&gt;#&lt;/a&gt; Axios 使用方式&lt;/h1&gt;
&lt;p&gt;了解它的内部机制之前，我们先要知道该模块的功能、输入输出，才能更好的了解它。&lt;/p&gt;
&lt;h2 id=&#34;方法1直接使用axios构造函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法1直接使用axios构造函数&#34;&gt;#&lt;/a&gt; 方法 1: 直接使用 axios 构造函数&lt;/h2&gt;
&lt;p&gt;axios(config) || axios(url[,config])&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/12345&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token literal-property property&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;juice&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;方法2使用axios对象的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法2使用axios对象的方法&#34;&gt;#&lt;/a&gt; 方法 2: 使用 axios 对象的方法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;axios.request(config)&lt;/li&gt;
&lt;li&gt;axios.get(url[,config])&lt;/li&gt;
&lt;li&gt;axios.post(url[,data[,config]])&lt;/li&gt;
&lt;li&gt;等等如 head、delete、put 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;方法3axioscreate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法3axioscreate&#34;&gt;#&lt;/a&gt; 方法 3:axios.create...&lt;/h2&gt;
&lt;h1 id=&#34;从axios入口文件分析axios工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#从axios入口文件分析axios工作流程&#34;&gt;#&lt;/a&gt; 从 axios 入口文件分析 Axios 工作流程&lt;/h1&gt;
&lt;p&gt;暴露在项目根目录下的：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//index.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 就这么一行代码，让我们把目光放在 axios.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./lib/axios&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后跑去找到 axios.js&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//axios.js 的局部核心代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 创建 axios&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @param &amp;#123;Object&amp;#125; defaultConfig The default config for the instance&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @return &amp;#123;Axios&amp;#125; A new instance of Axios&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;defaultConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 创建 Axios 实例，参数为默认配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;defaultConfig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 将 Axios.prototype.request 的函数的 this 绑定指向到 context（创建的 axios 实例)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 类似于 Axios.prototype.request.bind (context)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 将 Axios.prototype 上的方法和属性都扩展到 instance 上，并且将这些扩展的方法绑定 this 为 context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 把 context 上的方法和属性扩展到新的 Axios 实例上，主要是配置和拦截器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建一个 axios 实例导出，这个实例实际上指向的是 Axios.prototype.request 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; axios &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;defaults&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 新建 Axios 实例的工厂方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;instanceConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 创建一个 axios 实例，配置为原先 defaults.js 中的配置 + 参数传入的配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 配置会以一个优先顺序进行合并，优先级为 lib/default.js 的默认值 &amp; lt; 实例的 defaults&amp;lt; 请求的 config&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mergeConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; instanceConfig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导出 axios&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; axios&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在这里我们可以看到，初始化的时候已经新建了一个默认配置的实例，&lt;strong&gt;这个实例指向 Axios.prototype.request 函数 (绑定了一个 Axios 实例)&lt;/strong&gt;，当我们以 axios () 方式调用的时候，实际上是执行了 createInstance 返回的一个指向 Axios.prototype.request 的函数。&lt;/p&gt;
&lt;p&gt;当然，也支持使用 axios.create 来新建一个自定义配置的实例（也是指向 request 函数），&lt;strong&gt;但最终也是执行 Axios.prototype.request 方法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从这里我们可以看出，axios 指向发请求的函数，而 Axios 是保存实例默认配置的对象，当调用 axios 的时候，使用对应的 Axios 实例的默认配置 + 参数配置来发起请求&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;当我们没有特别的要求时，使用默认的 axios 实例即可，否则的话我们可以新建一个 axios 实例（传入定制的配置信息），并且通过调用这个新建的实例来发起请求。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;既然发送请求最终调用的都是 Axios.prototype.request 函数，那我们来&lt;span class=&#34;pink&#34;&gt;简单&lt;/span&gt;看看 Axios.js 文件内部的代码，涉及某功能模块的具体解析在后面再详细讲，这里只是为了分析 Axios 的工作流程。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//Axios.js 部分代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//Axios 构造函数，一个 Axios 实例里有实例配置和请求拦截器 + 响应拦截器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;instanceConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; instanceConfig&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interceptors &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 如果第一个参数是字符串，则是 url，否则是配置对象，axios (url [,config]) || axios (config)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;string&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arguments&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arguments&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 合并 Axios 实例中保存的默认配置和参数配置，默认配置优先级更低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 若传入配置中指定了方法（或者实例 defaults 配置指定了），则改为小写，否则默认为 get 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;get&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 过滤跳过的拦截器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; requestInterceptorChain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; synchronousRequestInterceptors &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 是否同步执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 此方法对请求拦截器中每一项中执行函数 unshiftRequestInterceptors（会自动排除被 eject 注销的 handler）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 把拦截器中每一项存入 requestInterceptorChain&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interceptors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;unshiftRequestInterceptors&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;interceptor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;runWhen &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;function&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;runWhen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 只要有一个异步执行，整个队列都异步执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    synchronousRequestInterceptors &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; synchronousRequestInterceptors &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;synchronous&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  &lt;span class=&#34;token comment&#34;&gt;// 注意这里是 unshift，所以先定义的拦截器是后执行的（栈）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    requestInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unshift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fulfilled&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rejected&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 基本同上，但这里是 push，正序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; responseInterceptorChain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interceptors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pushResponseInterceptors&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;interceptor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    responseInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fulfilled&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; interceptor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rejected&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; promise&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 若需要异步执行，则异步执行拦截器数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;synchronousRequestInterceptors&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dispatchRequest&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将派发请求放在请求拦截器数组异步执行完的最后一步执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unshift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; requestInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;responseInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    promise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      promise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; promise&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 否则同步执行请求拦截器，直到拦截器栈清空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; newConfig &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;requestInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; onFulfilled &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requestInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; onRejected &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requestInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      newConfig &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onFulfilled&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;newConfig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;onRejected&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 请求拦截器执行完之后，派发请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    promise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dispatchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;newConfig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 执行响应拦截器，异步执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;responseInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    promise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;responseInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; responseInterceptorChain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 最后返回一个 promise 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; promise&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;axios工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#axios工作流程&#34;&gt;#&lt;/a&gt; Axios 工作流程&lt;/h1&gt;
&lt;p&gt;根据上面源代码的分析，我们可以知道 Axios 的工作流程大概是这些&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建 Axios 实例（createInstance），自定义创建配置或使用默认配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用 axios，传入配置，合并配置并做一些处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行请求拦截器（requestInterceptorManager）。&lt;/p&gt;
&lt;p&gt;拦截器的 handler 会收到实例的配置作为参数，然后需要返回一份新的配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;派发请求（dispatchRequest）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换请求数据（transformData）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 Adapter 处理请求（xhr.js 或 http.js）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换响应数据（transformData）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行响应拦截器（responseInterceptorManager）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结束，返回一个 promise&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;拦截器模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拦截器模块&#34;&gt;#&lt;/a&gt; 拦截器模块&lt;/h1&gt;
&lt;p&gt;在 Axios 实例的代码中，每个 Axios 实例都有着请求拦截器和响应拦截器。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//Axios.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Axios&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;instanceConfig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;defaults &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; instanceConfig&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interceptors &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;让我们看看拦截器中的代码具体是怎么写的，&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//InterceptorManager.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 往栈里增加一个新的拦截器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;fulfilled&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rejected&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;fulfilled&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; fulfilled&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;rejected&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; rejected&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 决定该拦截器是否同步执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;synchronous&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; options &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;synchronous &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;runWhen&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; options &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;runWhen &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 返回一个下标，方便之后注销该 handler&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;eject&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;eject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 其实就是用这个下标去注销 handler，在下面的 forEach 方法中会跳过被注销的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 对拦截器数组中的每一项执行 fn&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;InterceptorManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;forEach&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//utils.forEach 实际上是对第一个参数进行遍历，执行第二个参数函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;handlers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;forEachHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//h 是传入的每一项，忽略被注销的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;我们可以看到，一个 InterceptorManager 对象保存着一个 handlers 数组，用来保存一个对象（这个对象包含了不同情况下执行的拦截函数）。结合 Axios.js，有几个信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 use 方法添加一个拦截器，use 方法返回一个下标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以使用 use 方法返回的下标来调用 eject 注销拦截器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Axios.prototype.request 方法中，调用实例的 forEach 方法来复制一份拦截器队列执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请求拦截器先定义的后执行，响应拦截器先定义的先执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请求拦截器可同步或异步执行，响应拦截器异步执行&lt;/p&gt;
&lt;p&gt;请求拦截器的执行可以要求异步执行，也可以是同步执行，如果要异步执行，设置拦截器的时候给第三个参数传入一个 options 对象，设置 options.synchronous = false 即可（&lt;strong&gt;只要有一个需要异步执行，那整个队列都异步执行&lt;/strong&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;派发请求模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#派发请求模块&#34;&gt;#&lt;/a&gt; 派发请求模块&lt;/h1&gt;
&lt;p&gt;源码：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//lib/core/dispatchRequest.js 部分核心代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dispatchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 保证 headers 存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 转换请求数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformRequest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// Flatten headers&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;common &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 可以自定义适配器，否则就用默认的（浏览器下用 xhr.js）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; adapter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adapter &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; defaults&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;adapter&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;adapter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onAdapterResolution&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;throwIfCancellationRequested&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 转换响应数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformResponse&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onAdapterRejection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;reason&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isCancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;throwIfCancellationRequested&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 转换响应数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reason &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; reason&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reason&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          reason&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          reason&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformResponse&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以看到，派发请求模块主要是以下几个流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转换请求数据、设置头部、选择适配器&lt;/li&gt;
&lt;li&gt;发送请求&lt;/li&gt;
&lt;li&gt;得到响应后进行对应的处理，如成功后转换数据并返回&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;转换数据模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#转换数据模块&#34;&gt;#&lt;/a&gt; 转换数据模块&lt;/h1&gt;
&lt;p&gt;在 dispatchRequest.js 中，我们可以看到对请求数据的转换和对响应数据的转换代码，如下&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//lib/core/dispatchRequest.js 转换数据局部代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 对请求数据的转换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformRequest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 对响应数据的转换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformResponse&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在这里我们可以看到，有两个关键点：&lt;strong&gt;transformData 和 config.transformResponse&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;transformdata&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#transformdata&#34;&gt;#&lt;/a&gt; transformData&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// lib/core/transformData.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 转换请求 / 响应数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fns&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; defaults&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 注意这里的 fns，是转换函数数组，为扩展转换埋下了伏笔&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;结合在派发请求时候的调用，我们可以知道以下几点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个函数本身并不直接转换数据，而是调用 defaults.js 中的转换方法数组来进行一个转换&lt;/li&gt;
&lt;li&gt;传入要转换的 data 和 headers，然后返回一份转换好的 data&lt;/li&gt;
&lt;li&gt;转换函数可以扩展个数和重写&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configtransformresponserequest&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#configtransformresponserequest&#34;&gt;#&lt;/a&gt; config.transformResponse/Request&lt;/h2&gt;
&lt;p&gt;通过上面可以知道，真正转换数据的是 axios.default.transformRequest (Response) 方法&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// defaults.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;transformRequest&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;normalizeHeaderName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Accept&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;normalizeHeaderName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果是特殊的数据，不需要进行转换直接返回&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isFormData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArrayBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isBlob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArrayBufferView&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buffer&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isURLSearchParams&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;setContentTypeIfUnset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;application/x-www-form-urlencoded;charset=utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果是对象且我们规定了 json, 则进行 json.stringift 转化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;headers &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; headers&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;application/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;setContentTypeIfUnset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;application/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个模块并不是很复杂，基本就是按照 headers 的类型和数据本身类型做的一个转换处理，为了减少篇幅就不贴 transformResponse 部分的代码了，可以自行下载源码查看&lt;/p&gt;
&lt;h2 id=&#34;扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展&#34;&gt;#&lt;/a&gt; 扩展&lt;/h2&gt;
&lt;p&gt;我们可以看到，在我们没有刻意去重写转换方法的时候，它使用的是 defaults.js 中默认的转换方法，但其实我们也可以根据需要，去增加或者重写转换方法。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; axios &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;axios&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 这里导入的是默认的 axios 实例，我们也可以 axios.create 创建一个自定义配置实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  baseURL&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://xxx.com&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;default&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformRequest&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 进行一系列的处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 或者进行重写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;default&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transformRequest &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 同上&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;转换模块总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#转换模块总结&#34;&gt;#&lt;/a&gt; 转换模块总结&lt;/h2&gt;
&lt;p&gt;总的来说&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;派发请求的时候，将请求模块 config 作为&lt;strong&gt; transformData 的 this 指向，调用 transformData&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transformData 中会根据传入的 config.transformRequest 方法，来进行一个转换&lt;/p&gt;
&lt;p&gt;如果自定义的 axios 实例有进行重写或扩展，就调用我们重写或扩展的，否则就用默认的 default.js 中的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转换完成，返回转换完成的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;axios对ajax封装的模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#axios对ajax封装的模块&#34;&gt;#&lt;/a&gt; Axios 对 ajax 封装的模块&lt;/h1&gt;
&lt;p&gt;接下来到了最核心的地方：&lt;strong&gt;Axios 是如何对将 ajax 请求 promise 化的？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;话不多说，我们来看源代码（浏览器环境下的封装）&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//xhr.js 部分核心代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xhrAdapter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;dispatchXhrRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;resolve&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 分离出请求相关的配置、数据、头部&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; requestData &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; requestHeaders &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; responseType &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;responseType&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 新建一个 XMLHttpRequest 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 路径为 baseURL+configURL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; fullPath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;buildFullPath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;baseURL&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//ajax 请求方法、url 设置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toUpperCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;buildURL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fullPath&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;paramsSerializer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 设置超时时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timeout&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 请求结束的处理函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onloadend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 处理响应数据，略&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 根据响应状态码设置 Promise 是 resolve 还是 reject&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;settle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resolve&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 加载完后置 null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//onloadend 是一个属性，请求结束时就会存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 不存在就监听状态变化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onloadend&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onloadend &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; onloadend&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;//readyState 为 4 的时候代表已完成&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleLoad&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;request &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readyState &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 宏任务，当同步任务执行完毕后执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;onloadend&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当请求被丢弃或者手动停止时的处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onabort &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 网络出错处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onerror &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 超时处理函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ontimeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 在标准浏览器环境里添加 CSRF 头部，来防御 CSRF 攻击&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isStandardBrowserEnv&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 如果该请求携带 cookie 或者是同源网站就需要添加 (用于鉴权)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; xsrfValue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;withCredentials &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isURLSameOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fullPath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xsrfCookieName &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cookies&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xsrfCookieName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;xsrfValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        requestHeaders&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xsrfHeaderName&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; xsrfValue&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 添加配置到请求头，略&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;requestData&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      requestData &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 发送请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;requestData&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总的来说其实就是将 ajax 请求 promise 化，封装进去，先进行一波配置的处理，然后请求结束时再根据状态码决定该 Promise 是完成还是失败状态。&lt;/p&gt;
&lt;p&gt;在这里还加了对 csrf 攻击的防御。&lt;/p&gt;
&lt;h1 id=&#34;取消请求模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#取消请求模块&#34;&gt;#&lt;/a&gt; 取消请求模块&lt;/h1&gt;
&lt;h2 id=&#34;使用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方式&#34;&gt;#&lt;/a&gt; 使用方式&lt;/h2&gt;
&lt;p&gt;在文档上我们查看到取消请求的两种方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 CancelToken.source 工厂方法产生 cancel token&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; CancelToken &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CancelToken&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; source &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CancelToken&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/12345&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;cancelToken&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;token&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;thrown&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isCancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thrown&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Request canceled&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; thrown&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理错误&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消请求（message 参数是可选的）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Operation canceled by the user.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或者传递一个 executor 函数到 CancelToken 的构造函数来创建 cancel token&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; CancelToken &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CancelToken&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; cancel&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;axios&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/12345&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;cancelToken&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CancelToken&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//executor 函数接收一个 cancel 函数作为参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cancel &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从上述使用方式我们可以看到，要对请求产生一个 cancelToken，然后在配置项中将请求的 cancelToken 设置为我们产生的 cancelToken。&lt;/p&gt;
&lt;p&gt;这个 cancelToken 具有一个 cancel 方法，通过调用它可以取消请求。&lt;/p&gt;
&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// dispatchRequest.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 如果被要求取消，就抛出 cancel, 这个方法在派发请求前和响应后都会调用一次&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;throwIfCancellationRequested&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cancelToken&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 下面一行干了这个事：if (token.reason) throw token.reason;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cancelToken&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;throwIfRequested&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// CancelToken.js 部分核心代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;CancelToken&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; resolvePromise&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;promise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;promiseExecutor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    resolvePromise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; resolve&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; token &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 这里的 cancel 函数实际上就是取消请求函数，利用 executor 向外传 cancel 回调&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;token&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// Cancellation has already been requested&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    token&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reason &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;resolvePromise&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;token&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 用于检查是否需要取消并抛出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;CancelToken&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;throwIfRequested&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;throwIfRequested&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reason&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 产生 CancelToken 的工厂方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CancelToken&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; cancel&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; token &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CancelToken&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cancel &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; token&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;cancel&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cancel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实际上构造 cancelToken 时，利用传进来的函数将构造函数中写好的取消请求函数的引用传递出去，我们在使用的时候就可以调用该传出来的函数进行取消（这个函数会设置 token.reason 为取消的信息）。&lt;/p&gt;
&lt;p&gt;当我们调用 cancel 方法时，会将 cancel 的信息传递，并设置 token.reason。&lt;/p&gt;
&lt;p&gt;在进入 dispatchRequest 步骤时，如果存在 cancelToken 且 token.reason 存在，就会抛出&lt;/p&gt;
&lt;p&gt;Xhr.js 中发送请求前，如果配置项存在 cancelToken，&lt;strong&gt;就会给这个 cancelToken.promise.then () 设置一个回调来取消请求&lt;/strong&gt;。当我们调用了 cancel 方法时，token 内部的一个 promise 就会从 pending-&amp;gt;fulfilled 状态，然后通过该回调取消请求。&lt;/p&gt;
&lt;p&gt;如果发送完请求得到响应后，在转换数据前，Axios 也会检测，如果存在 cancelToken 且 token.reason 存在，也会抛出。&lt;/p&gt;
&lt;h2 id=&#34;设计步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计步骤&#34;&gt;#&lt;/a&gt; 设计步骤&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;运行步骤大概如下&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用构造函数或工厂方法产生一个 cancelToken，并且把它设置为对应请求的 cancelToken。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果是利用构造函数产生，我们还需要保存一下 executor 中传递出来的 cancel 函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在适当的时候取消请求，调用 cancel 函数（可以传一个字符串作为信息）&lt;/p&gt;
&lt;p&gt;此时 cancel 函数会新建一个 Cancel 实例赋给 token.reason，并且将 token 内部的 promise 完成（fulfilled）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;派发请求前和响应后&lt;/strong&gt;由 dispatchRequest.js 中的方法&lt;strong&gt; throwIfCancellationRequested&lt;/strong&gt; 来处理取消（如果 token.reason 存在，则表示需要取消）&lt;/p&gt;
&lt;p&gt;若是已经在请求中，xhr.js 中有代码监听 token 内部的 promise，一旦该 promise 完成，就触发 request.abort () 来取消&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取消成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// xhr.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 请求中取消请求的代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cancelToken&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// Handle cancellation&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cancelToken&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;promise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onCanceled&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;cancel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;reject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cancel&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Clean up request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;大概花了几天的时间把 axios 中主要模块的源代码分析了一遍，确实是收益良多。&lt;/p&gt;
&lt;p&gt;作者水平有限（只是个刚学两年的小前端），如果有不正确的地方，还请大佬轻喷。&lt;/p&gt;
&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9z&#34;&gt;axios/axios: Promise based HTTP client for the browser and node.js (github.com)&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/08/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/HeadSort/</guid>
            <title>堆排序学习笔记</title>
            <link>http://zyczxq.com/2021/08/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/HeadSort/</link>
            <category term="计算机基础" scheme="http://zyczxq.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/" />
            <pubDate>Wed, 25 Aug 2021 14:37:48 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;堆排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#堆排序&#34;&gt;#&lt;/a&gt; 堆排序&lt;/h1&gt;
&lt;p&gt;堆排序是一种树形选择排序，在排序过程中，它将待排序的记录看成是一颗完全二叉树的结构，由于它在最坏情况下表现也十分好，所以广泛使用在各个语言下的 sort 源码中。&lt;/p&gt;
&lt;h1 id=&#34;堆排序的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#堆排序的定义&#34;&gt;#&lt;/a&gt; 堆排序的定义&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;n 个元素的序列称之为堆，当且仅当满足以下其中一个条件&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;K&lt;sub&gt;i&lt;/sub&gt; &amp;lt;= k&lt;sub&gt;2i&lt;/sub&gt; 且 k&lt;sub&gt;i&lt;/sub&gt; &amp;lt;= k&lt;sub&gt;2i+1&lt;/sub&gt;	(0&amp;lt;=i&amp;lt;=n/2)&lt;/li&gt;
&lt;li&gt;K&lt;sub&gt;i&lt;/sub&gt; &amp;gt;= k&lt;sub&gt;2i&lt;/sub&gt; 且 k&lt;sub&gt;i&lt;/sub&gt; &amp;gt;= k&lt;sub&gt;2i+1&lt;/sub&gt;    (0&amp;lt;=i&amp;lt;=n/2)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用语言表示，即：&lt;strong&gt;树中所有非终端结点的值均不大于（不小于）其左右孩子的值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;example.png&#34; alt=&#34;example&#34; title=&#34;例子&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;按堆的定义将待排序序列 list [0...n-1] 调整为大根堆（即建初堆），交换 list [0] 和 list [n-1]，则此时列表最后一个元素为最大的元素。&lt;/li&gt;
&lt;li&gt;将 list [0...n-2] 重新调整为堆，交换 list [0] 和 list [n-2]，则列表倒数第二个元素为次大的元素。&lt;/li&gt;
&lt;li&gt;循环 n-1 次，知道交换了 list [0] 和 list [1] 为止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实和插入排序的思路有点像，就是每次把一个剩下维护序列里面的最大元素抽取出来，放到一个位置上，直到这个剩下维护序列长度为一即可。但是它快就快在调整堆这个过程。&lt;/p&gt;
&lt;p&gt;综上，需要解决两个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建初堆（如何将一个无序序列建成堆？）&lt;/li&gt;
&lt;li&gt;调整堆（去掉堆顶元素后，将剩下元素调整成新堆）&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;调整堆的思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调整堆的思路&#34;&gt;#&lt;/a&gt; 调整堆的思路&lt;/h1&gt;
&lt;p&gt;筛选法，把不符合堆的元素逐步下沉，然后把大的元素逐步上浮。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前根结点为 s，则他的左右子树为 2s 和 2s+1，选出左右子树中较大的结点&lt;/li&gt;
&lt;li&gt;比较 s 和较大子树结点的值，如果 s 较大，则说明树已经是堆，不需调整&lt;/li&gt;
&lt;li&gt;如果 s 较小，则交换（交换后，较大子树结点的子树不再是堆，重复上述过程调整）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参照下文代码 HeapAdjust&lt;/p&gt;
&lt;h1 id=&#34;建初堆的思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#建初堆的思路&#34;&gt;#&lt;/a&gt; 建初堆的思路&lt;/h1&gt;
&lt;p&gt;要把一个无序序列调整成堆，按照定义，则需让非终端结点大于其左右子树的值，所以序号小于 length/2 的都是非终端结点。&lt;/p&gt;
&lt;p&gt;利用筛选法，自底向上把 (n/2)....0 的结点调整成堆即可。&lt;/p&gt;
&lt;h1 id=&#34;堆排序整体思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#堆排序整体思路&#34;&gt;#&lt;/a&gt; 堆排序整体思路&lt;/h1&gt;
&lt;p&gt;结合起来，就是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将一个无序数组调整成堆，然后抽取堆顶元素，和当前无序的最后的位置元素交换。&lt;/li&gt;
&lt;li&gt;当前无序数组减去最后位置，剩下的重新调整成堆&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;特点分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特点分析&#34;&gt;#&lt;/a&gt; 特点分析&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;时间复杂度&lt;/p&gt;
&lt;p&gt;平均情况：O (nlog&lt;sub&gt;2&lt;/sub&gt;n)&lt;/p&gt;
&lt;p&gt;最坏情况：O (nlog&lt;sub&gt;2&lt;/sub&gt;n)&lt;/p&gt;
&lt;p&gt;即使在最坏情况下，时间复杂度仍然为 O (nlog&lt;sub&gt;2&lt;/sub&gt;n)，相比快速排序的最坏情况是一个优点，可以在快速排序退化时采用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;空间复杂度：O (1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是不稳定排序（跳跃式的交换都是不稳定排序）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能用于顺序结构。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;适用于记录数较多或递归树较深的时候采用。&lt;/p&gt;
&lt;h1 id=&#34;完整堆排序代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整堆排序代码&#34;&gt;#&lt;/a&gt; 完整堆排序代码&lt;/h1&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HeapAdjust&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;list&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;m&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 假设 list [s+1...m] 已经是堆，将 list [s...m] 调整为以 list [s] 为根的大根堆&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; rc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;*=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;m&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rc&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        s&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 建初堆&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;CreateHeap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mid&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;HeapAdjust&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 堆排序，先把无序序列建成堆，然后每次把堆顶元素抽出来放到对应的位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HeapSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;CreateHeap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 堆顶记录和当前未经排序子序列最后一个记录互换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        list&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;HeapAdjust&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将 list [0...i-1] 重新调整为大根堆&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/08/04/JavaScript/browser/</guid>
            <title>浏览器渲染过程</title>
            <link>http://zyczxq.com/2021/08/04/JavaScript/browser/</link>
            <category term="前端" scheme="http://zyczxq.com/categories/JavaScript/" />
            <pubDate>Wed, 04 Aug 2021 20:14:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;前面也说过，当在浏览器上输入一个 url，到页面加载出来，简单来说一共经历了这么几件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;DNS 查询&lt;/p&gt;
&lt;p&gt;其实就是将一个域名，解析成 ip 地址的一个过程，它会先去找缓存（比如说浏览器缓存 -&amp;gt; 本机缓存 (hosts 文件)-&amp;gt; 路由器缓存）。找不到缓存的话，会跑去 DNS 服务器进行一个查询（具体怎么搞就不展开了），找到域名对应的 ip 地址之后，就进行第二步。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP 连接&lt;/p&gt;
&lt;p&gt;对服务端的 ip 地址建立一个 tcp 连接，主要就是三次握手的过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP 请求&lt;/p&gt;
&lt;p&gt;发送一些请求来请求资源，最常见的就是请求 html 文档以及对应的图片、css 等资源了。这个过程还涉及到一些浏览器缓存（会先看本地有无缓存、强缓存协商缓存之类的，以前的博客也有，不详细展开）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器响应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器渲染&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后还有个释放 TCP 连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这篇笔记就是用于整理我从找到的各位大牛的知识文章加以整理得来的。&lt;/p&gt;
&lt;h1 id=&#34;解析html文档构建dom树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解析html文档构建dom树&#34;&gt;#&lt;/a&gt; 解析 HTML 文档，构建 DOM 树&lt;/h1&gt;
&lt;p&gt;当浏览器接收到一份文档的时候，它会去将这个文档的 HTML 标记进行一个处理、解析，从而将其转换为一颗 DOM 树。&lt;/p&gt;
&lt;h1 id=&#34;获取外部资源构建cssom树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取外部资源构建cssom树&#34;&gt;#&lt;/a&gt; 获取外部资源，构建 CSSOM 树&lt;/h1&gt;
&lt;p&gt;一份文档里面通常还会去下载一些外部的样式表、或者外部的 js 代码，这个阶段之下，有一些需要注意的点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当浏览器遇到一个 script 标签时，会暂停构建 DOM 直到脚本执行完毕&lt;/li&gt;
&lt;li&gt;JavaScript 可以查询和修改 DOM 与 CSSOM。&lt;/li&gt;
&lt;li&gt;CSSOM 构建时，会暂停执行 JavaScript 直到 CSSOM 构建完毕。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总结来说，总而言之两句话：&lt;strong&gt;相比 JavaScript 资源，优先引入 CSS。而且 JavaScript 尽可能少的影响 DOM 的构建。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;css文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css文件&#34;&gt;#&lt;/a&gt; CSS 文件&lt;/h2&gt;
&lt;p&gt;** 默认情况下，CSS 会阻塞渲染，直到 CSSOM 树构建完毕。** 这是因为 CSSOM 树不能以增量方式构建，css 规则的特定性让他可以在各个不同的点相互覆盖，在所有规则解析、并构建完之前，浏览器不能知道每个元素的位置。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;CSSOM（CSS 对象模型）是树形形式的所有 css 选择器和相关属性的映射，和 DOM 非常相似。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;也可以进行预加载，&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;style.css&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;preload&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;preload 属性值表示这份资源在页面加载完即可需要，它会在页面加载的生命周期早期阶段就开始获取，尽早的加载，减少阻塞。&lt;/p&gt;
&lt;h2 id=&#34;javascript文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript文件&#34;&gt;#&lt;/a&gt; JavaScript 文件&lt;/h2&gt;
&lt;p&gt;刚刚也提到，JavaScript 文件会阻塞文档的解析直到执行完毕，&lt;strong&gt;所以我们一般都会将 js 文件放在底部。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当然，也有两种方法来改变这种阻塞的情况（只对外部 js 文件有效），分别是：defer 和 async&lt;/p&gt;
&lt;h3 id=&#34;defer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#defer&#34;&gt;#&lt;/a&gt; defer&lt;/h3&gt;
&lt;p&gt;defer 表示延迟执行引入的 JS 文件代码（&lt;strong&gt;注意，是延迟执行，不是延迟加载&lt;/strong&gt;）。这使得加载这段 JS 文件时浏览器也未停止对 HTML 的解析，并行。当文档解析完毕后，按照顺序&lt;strong&gt;执行&lt;/strong&gt;所有 defer 的脚本。&lt;/p&gt;
&lt;h3 id=&#34;async&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#async&#34;&gt;#&lt;/a&gt; async&lt;/h3&gt;
&lt;p&gt;async 表示异步执行引入的 JS 文件。它和 defer 的区别主要是，async&lt;strong&gt; 如果加载完毕就立即执行&lt;/strong&gt;，这个执行的发生可能在解析过程或者解析过程之后。而且因为加载时间的不一，也无法保证异步脚本的执行顺序。&lt;/p&gt;
&lt;p&gt;他们两种设置了之后都不会阻塞文档的解析。&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;需要注意的是，js 代码动态创建的 script 标签默认是异步加载的。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;合并dom树和cssom树构建渲染树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#合并dom树和cssom树构建渲染树&#34;&gt;#&lt;/a&gt; 合并 DOM 树和 CSSOM 树，构建渲染树&lt;/h1&gt;
&lt;p&gt;渲染树是两棵树的结合，表示将要渲染到页面上的所有内容。&lt;/p&gt;
&lt;h1 id=&#34;reflow-paint&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reflow-paint&#34;&gt;#&lt;/a&gt; reflow、paint&lt;/h1&gt;
&lt;p&gt;拿到渲染树之后，浏览器将会根据这一棵渲染树，来计算布局和绘制，&lt;strong&gt;这个过程就是 reflow（重排 / 回流）和 paint（绘制 / 重绘）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般来说，每次涉及到元素宽度、高度等会影响到文档布局的修改，都会触发 reflow 和 paint。&lt;/p&gt;
&lt;p&gt;如果只是涉及到元素背景色、透明度等不影响文档布局的修改，就只会触发 paint。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;浏览器渲染的过程主要有以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;处理 HTML 标签并构建 DOM 树&lt;/li&gt;
&lt;li&gt;处理 CSS 样式并构建 CSSOM 树&lt;/li&gt;
&lt;li&gt;将 DOM 与 CSSOM 合并成渲染树&lt;/li&gt;
&lt;li&gt;根据渲染树计算布局，reflow&lt;/li&gt;
&lt;li&gt;绘制，paint。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这几个步骤中，并不一定是按照顺序一次性完成的，在 JS 文件中可能涉及多次对 DOM 和 CSSOM 的修改，就可能会重复执行以上的步骤。&lt;/p&gt;
&lt;p&gt;而且 js 文件会阻塞文档解析，css 文件会阻塞文档渲染（因为需要构建 CSSOM 树）。&lt;/p&gt;
&lt;h1 id=&#34;扩展为什么提倡将css的引入放在head-js的引入放在body底部&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展为什么提倡将css的引入放在head-js的引入放在body底部&#34;&gt;#&lt;/a&gt; 扩展：为什么提倡将 CSS 的引入放在 head、js 的引入放在 body 底部？&lt;/h1&gt;
&lt;p&gt;前面我们也说到，css 文件会阻塞浏览器的渲染，而 js 文件会阻塞对文档的解析。&lt;/p&gt;
&lt;p&gt;之所以会阻塞渲染，是因为加载 css 的时候，会等解析完毕生成 CSSOM 树才能够生成渲染树。&lt;/p&gt;
&lt;p&gt;js 文件加载、执行的过程中，这个时间一般是比较长的，而且可能文件本身比较大、一旦长期执行，就会一直阻塞 HTML 文档的解析，使得页面长时间白屏（性能指标的首屏时间），所以我们一般把 js 文件放在 body 底部。&lt;/p&gt;
&lt;p&gt;而 CSS 文件放的位置不同，产生的效果也不同。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果把 CSS 文件放于 head 部分&lt;/p&gt;
&lt;p&gt;虽然在 head 标签引入时，会阻塞 HTML 的渲染，这个时候表现为短暂的白屏之后，出现带有完整样式的页面。这个过程只发生&lt;strong&gt;一次解析渲染&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;DOM 树、CSSOM 树并行解析 -&amp;gt; 解析完毕合成渲染树 -&amp;gt;reflow-&amp;gt;paint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果把 CSS 文件放于 body 部分，他会阻塞 HTML 的解析，但不阻塞 HTML 的渲染（&lt;strong&gt;在 css 完成下载之前把引入标签之前的 HTML 先进行解析渲染，并展现，但没有样式&lt;/strong&gt;），然后下载解析完成之后，页面重新解析渲染。这个过程表现为：更加短暂的白屏时间，但先出现没有样式的文档（或者说裸奔），然后再展现完整样式。&lt;/p&gt;
&lt;p&gt;而这个过程会导致在后面重新解析渲染的过程中，多一次的 reflow 和 paint，一般来说性能会相对较差，&lt;strong&gt;所以我们多把 CSS 引入放于 head 处。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://zyczxq.com/2021/07/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/designPatterns/</guid>
            <title>设计模式笔记</title>
            <link>http://zyczxq.com/2021/07/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/designPatterns/</link>
            <category term="计算机基础" scheme="http://zyczxq.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/" />
            <pubDate>Sat, 24 Jul 2021 16:52:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;设计模式是对软件设计中普遍存在，或者说反复出现的各种问题提出的解决方案。在学校的时候我通过软件体系结构和实际上参与项目的时候也了解过一下（我觉得设计模式的知识真的是编程思想的精粹之一，非常值得深入学习）。&lt;/p&gt;
&lt;p&gt;内容会持续更新，设计模式毕竟那么多，不可能一次全学完，暂时记录我学过的、或者使用过的&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;pink&#34;&gt;一天更新一种～最近比较忙，慢慢写，闲的时候就多更新一些&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;7-24 号：编写单例模式&lt;/p&gt;
&lt;p&gt;7-25 号：外观模式&lt;/p&gt;
&lt;p&gt;7-30 号：简单工厂模式和工厂方法模式、抽象工厂&lt;/p&gt;
&lt;h1 id=&#34;设计模式原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计模式原则&#34;&gt;#&lt;/a&gt; 设计模式原则&lt;/h1&gt;
&lt;p&gt;主要有以下几种原则&lt;/p&gt;
&lt;h2 id=&#34;开闭原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开闭原则&#34;&gt;#&lt;/a&gt; 开闭原则&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;开闭原则指的是对扩展开放、对修改关闭&lt;/strong&gt;。能够对系统的功能进行扩展，但是不修改已有的代码。&lt;/p&gt;
&lt;h2 id=&#34;里氏替换原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#里氏替换原则&#34;&gt;#&lt;/a&gt; 里氏替换原则&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;里氏替换原则其实是对开闭原则的补充，它要求任何基类可以发挥作用的地方，子类也可以发挥作用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可能有点抽象，其实就是说派生类可以随时替换掉基类、且功能不被破坏，才是真的做到了继承。&lt;/p&gt;
&lt;h2 id=&#34;依赖反转原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#依赖反转原则&#34;&gt;#&lt;/a&gt; 依赖反转原则&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;依赖反转原则指的是高层次的模块不依赖低层次模块的实现细节&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;接口隔离原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接口隔离原则&#34;&gt;#&lt;/a&gt; 接口隔离原则&lt;/h2&gt;
&lt;p&gt;简单的说就是减少耦合。&lt;/p&gt;
&lt;h2 id=&#34;最小知识原则迪米特法则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最小知识原则迪米特法则&#34;&gt;#&lt;/a&gt; 最小知识原则（迪米特法则）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;最小知识 / 最少知道是指，一个系统的功能模块应该最大限度的不知晓其他模块的出现，减少感知&lt;/strong&gt;。模块之间应相对独立&lt;/p&gt;
&lt;h2 id=&#34;合成复用原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#合成复用原则&#34;&gt;#&lt;/a&gt; 合成复用原则&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;尽量使用合成 / 聚合的方式，而不是使用继承&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;设计模式类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计模式类型&#34;&gt;#&lt;/a&gt; 设计模式类型&lt;/h1&gt;
&lt;p&gt;设计模式类型主要分为以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建型：包括简单工厂模式、工厂方法模式、抽象工厂模式、建造者模式、单例模式&lt;/li&gt;
&lt;li&gt;结构型：适配器模式、桥模式、组合模式、装饰器模式、外观模式、享元模式、代理模式&lt;/li&gt;
&lt;li&gt;行为模式：职责链模式、命令模式、迭代器模式、中介者模式、备忘录模式、观察者模式、访问者模式、策略模式、状态模式、模版方法模式、解释器模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;创建型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建型&#34;&gt;#&lt;/a&gt; 创建型&lt;/h1&gt;
&lt;p&gt;创建型的设计模式提供了更加灵活的对象创建方法，同时可以隐藏创建的具体逻辑，更强的定制性和灵活性&lt;/p&gt;
&lt;h2 id=&#34;单例模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单例模式&#34;&gt;#&lt;/a&gt; 单例模式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;单例模式是指，一个类（当然如果是在 JavaScript 里面的话就是指原型）仅有唯一的一个实例。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;实现思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将构造方法设置为私有的，并且提供一个公开的获取实例的方法。&lt;/li&gt;
&lt;li&gt;获取实例方法内再进行判断，如果已有就返回已有对象，否则才生成。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例子&#34;&gt;#&lt;/a&gt; 例子&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SingleInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Instance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;val &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; val&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Instance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; getInstance&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 利用闭包返回访问器函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;严格控制客户程序访问唯一的实例。&lt;/li&gt;
&lt;li&gt;可以简单的改成多例模式，适用于一些只允许客户创建一定数量的对象的场景。如某游戏每个账号只允许创建一个角色。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;简单工厂模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单工厂模式&#34;&gt;#&lt;/a&gt; 简单工厂模式&lt;/h2&gt;
&lt;p&gt;简单工厂模式，就是使用一个类 / 函数来专门负责创建对象。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据 type 来创建不同的对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	&lt;span class=&#34;token keyword&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;type&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;car&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Car&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;核心思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心思路&#34;&gt;#&lt;/a&gt; 核心思路&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一系列不同的产品，使用一个工厂方法根据传入的类型不同创建不同的对象并返回。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;优点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-2&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;实行了责任分离。&lt;/li&gt;
&lt;li&gt;客户不直接创建产品类的对象，只作为对象的消费者，类似于 getter 方法的好处，可以减少操作失误的可能性&lt;/li&gt;
&lt;li&gt;因为客户类不负责创建对象，如果要扩展新对象，不必修改已有客户类代码&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺点&#34;&gt;#&lt;/a&gt; 缺点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;不符合开闭原则&lt;/strong&gt;，每当增加产品时，必须在简单工厂方法内部增加判断逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工厂类的工厂方法是静态的，不能被继承，不能成为一个层次的类。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;工厂方法模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工厂方法模式&#34;&gt;#&lt;/a&gt; 工厂方法模式&lt;/h2&gt;
&lt;p&gt;为了克服简单工厂方法的缺点（缺点第一条），改变了工厂类 / 方法的结构。&lt;/p&gt;
&lt;h3 id=&#34;改进思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改进思路&#34;&gt;#&lt;/a&gt; 改进思路&lt;/h3&gt;
&lt;p&gt;简单工厂模式中，每当有一个新的产品加入时，就必须在工厂方法中增加相应的条件语句。&lt;/p&gt;
&lt;p&gt;于是可以将工厂类改写成一个层次类来解决这个问题，如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;factory.png&#34; alt=&#34;factory&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;弄一个抽象工厂类，然后每个产品对应一个实际的工厂类（该工厂类继承抽象工厂类），创建特定产品时需要调用特定的工厂类&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用场景&#34;&gt;#&lt;/a&gt; 应用场景&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;创建某些类的对象逻辑比较复杂，可能存在很多判断&lt;/li&gt;
&lt;li&gt;一个类不能预先知道它必须创建一个层次类中哪个子类的对象。&lt;/li&gt;
&lt;li&gt;需要封装创建类的对象的逻辑。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;优点-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-3&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;工厂方法模式符合开闭原则。增加一个新产品，不用修改已有的类代码，只需要增加一个新的产品类和对应的工厂类（继承抽象工厂）即可。&lt;/li&gt;
&lt;li&gt;工厂方法模式将创建对象的逻辑和任务交给了工厂类。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;抽象工厂模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#抽象工厂模式&#34;&gt;#&lt;/a&gt; 抽象工厂模式&lt;/h2&gt;
&lt;p&gt;它和工厂方法模式不同的就在于，如果有一组相同类别的产品，抽象工厂模式也是层次类的结构，但它负责创建一组同类别的产品。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个实工厂类生产一组相关的产品类对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;应用场景：当客户要从一个相关的产品组中创建一个对象，而没有必要知道到底创建哪个对象时，就可以用抽象工厂模式。&lt;/p&gt;
&lt;h1 id=&#34;结构型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结构型&#34;&gt;#&lt;/a&gt; 结构型&lt;/h1&gt;
&lt;p&gt;关注类和对象的组合&lt;/p&gt;
&lt;h2 id=&#34;适配器模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适配器模式&#34;&gt;#&lt;/a&gt; 适配器模式&lt;/h2&gt;
&lt;h3 id=&#34;背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景&#34;&gt;#&lt;/a&gt; 背景&lt;/h3&gt;
&lt;p&gt;当现有的系统需要使用旧系统的类功能，但是旧系统的类功能又不符合现在的需要的时候，&lt;strong&gt;就要使用适配器，将旧系统的接口转换为客户类需要的格式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个经典场景就是：两根口径不一样的水管，如何连接在一起呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;adapter@2x.png&#34; alt=&#34;adapter@2x&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用场景&#34;&gt;#&lt;/a&gt; 使用场景&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;当系统想要使用现有的类，但是现有的类不符合系统的需要。&lt;/li&gt;
&lt;li&gt;需要通过一个可复用的类，使得本来接口不相容并且无关的类结合在一起时。&lt;/li&gt;
&lt;li&gt;在设计时需要改变多个子类接口，作用相同但名称不同的类或方法之间进行适配时。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实现方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现方式&#34;&gt;#&lt;/a&gt; 实现方式&lt;/h3&gt;
&lt;h4 id=&#34;类适配器模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类适配器模式&#34;&gt;#&lt;/a&gt; 类适配器模式&lt;/h4&gt;
&lt;p&gt;类适配器模式利用的是继承，有三个要素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target，用户所期望的接口&lt;/li&gt;
&lt;li&gt;Adaptee，旧接口的类&lt;/li&gt;
&lt;li&gt;Adapter，将 Adaptee 转化为增加了新功能的 Target 接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;对象适配器模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象适配器模式&#34;&gt;#&lt;/a&gt; 对象适配器模式&lt;/h4&gt;
&lt;p&gt;对象适配器模式利用的是聚合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target，用户所期望的接口&lt;/li&gt;
&lt;li&gt;Adaptee，旧接口的类&lt;/li&gt;
&lt;li&gt;Adapter，新接口的类，但是不继承，涉及到需要转化的地方时调用 Adaptee。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;类适配器or对象适配器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类适配器or对象适配器&#34;&gt;#&lt;/a&gt; 类适配器 or 对象适配器？&lt;/h4&gt;
&lt;p&gt;在 Java 内由于是单继承的，所以相对来说对象适配器可以把多种不同的源类都适配到同一个 Target 接口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若被适配的源类 Adaptee 有大量的方法，使用类适配器模式更为合适。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;与外观模式的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与外观模式的区别&#34;&gt;#&lt;/a&gt; 与外观模式的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;外观模式定义了新的接口，而适配器使用旧的接口&lt;/li&gt;
&lt;li&gt;适配器使得两种不一致的接口协同工作，而不是产生新的接口。&lt;/li&gt;
&lt;li&gt;外观模式本意是产生一个轻便的接口，适配器是把现有的接口转换一下。&lt;/li&gt;
&lt;li&gt;一个外观接口可能包装了多个现有系统的对象、也可能增加了一些新功能，而适配器只是包装一个对象&lt;/li&gt;
&lt;li&gt;多数情况下，外观是单实例的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;组合模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组合模式&#34;&gt;#&lt;/a&gt; 组合模式&lt;/h2&gt;
&lt;h3 id=&#34;背景-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景-2&#34;&gt;#&lt;/a&gt; 背景&lt;/h3&gt;
&lt;p&gt;一个常见的背景就是我们可能经常遇到树形结构。处理树形结构的时候，如果要区分叶子结点和普通结点的操作会变得比较复杂，为了简化操作，我们可以一致的对待这些结点。&lt;/p&gt;
&lt;h3 id=&#34;思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;zuhe.png&#34; alt=&#34;zuhe&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;组合模式又叫部分 —— 整体模式，模糊简单元素和复杂元素，在上面的 UML 图中，客户只需操作 Component，无需关心他是个叶子还是普通结点&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;优点-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-4&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;定义了包含基本对象和组合对象的类层次结构，基本对象可以被组合、组合对象也可以被组合。&lt;/li&gt;
&lt;li&gt;简化了客户代码，客户可以一致的使用组合结构和单个对象，而不管他是简单还是组合的。&lt;/li&gt;
&lt;li&gt;设计更通用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;装饰器模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#装饰器模式&#34;&gt;#&lt;/a&gt; 装饰器模式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;装饰器模式允许向一个现有的对象添加新的功能，同时不改变它的内部结构&lt;/strong&gt;。其实就是对现有的类的包装。&lt;/p&gt;
&lt;h3 id=&#34;应用场景-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用场景-2&#34;&gt;#&lt;/a&gt; 应用场景&lt;/h3&gt;
&lt;p&gt;当我们想要给一个对象额外的添加职责、功能的时候，就可以使用这个设计模式。&lt;/p&gt;
&lt;h3 id=&#34;优点-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-5&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;p&gt;一般来说，为了扩展一个类的功能（且不修改源代码）我们常常会使用继承的方式来实现。随着功能的增多，子类会变得越来越 “臃肿 “，而使用装饰器模式的话，能够更加灵活的分配职责。&lt;/p&gt;
&lt;p&gt;而且很多情况下，装饰类和被装饰类是独立的，不会相互耦合，可以替代继承。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现&#34;&gt;#&lt;/a&gt; 实现&lt;/h3&gt;
&lt;p&gt;前端中广泛应用装饰器模式的地方莫过于 React 的&lt;strong&gt;高阶组件（HOC）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;高阶组件是干什么用的就不再赘述了，之前的笔记也说过。&lt;/p&gt;
&lt;p&gt;高阶组件可以提取组件中常用的行为逻辑（如从数据源获取数据）、或者添加一些方法等。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-react&#34;&gt;function withSubscription(WrappedComponent, selectData) &amp;#123;
  // ...并返回另一个组件...
  return class extends React.Component &amp;#123;
    constructor(props) &amp;#123;
      super(props);
      this.handleChange = this.handleChange.bind(this);
      this.state = &amp;#123;
        data: selectData(DataSource, props)
      &amp;#125;;
    &amp;#125;

    componentDidMount() &amp;#123;
      // ...负责订阅相关的操作...
      DataSource.addChangeListener(this.handleChange);
    &amp;#125;

    componentWillUnmount() &amp;#123;
      DataSource.removeChangeListener(this.handleChange);
    &amp;#125;

    handleChange() &amp;#123;
      this.setState(&amp;#123;
        data: selectData(DataSource, this.props)
      &amp;#125;);
    &amp;#125;

    render() &amp;#123;
      // ... 并使用新数据渲染被包装的组件!
      // 请注意，我们可能还会传递其他属性
      return &amp;lt;WrappedComponent data=&amp;#123;this.state.data&amp;#125; &amp;#123;...this.props&amp;#125; /&amp;gt;;
    &amp;#125;
  &amp;#125;;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就像这里，在原有的基础上增强了 Wrapped Component，又不改变内部结构。而且也还可以增加方法。&lt;/p&gt;
&lt;h2 id=&#34;外观模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外观模式&#34;&gt;#&lt;/a&gt; 外观模式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;现有系统的接口比较复杂，希望利用原有的功能重新定义新的接口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;facade1.png&#34; alt=&#34;facade1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;facade2.png&#34; alt=&#34;facade2&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用场景-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用场景-3&#34;&gt;#&lt;/a&gt; 应用场景&lt;/h3&gt;
&lt;p&gt;比如说，有一家店的客户，他通过目录下订单，就像一个外观模式。客户只需要联系客服，就可以完成下订单、检查仓储、发货等一系列流程。&lt;/p&gt;
&lt;h3 id=&#34;优点-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优点-6&#34;&gt;#&lt;/a&gt; 优点&lt;/h3&gt;
&lt;p&gt;外观模式产生了一个新的、轻便的接口，它可能包装了多个接口和对象，&lt;strong&gt;可以简化复杂系统的使用&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;行为型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#行为型&#34;&gt;#&lt;/a&gt; 行为型&lt;/h1&gt;
&lt;p&gt;聚焦于对象和类之间的通信，大型应用必不可少的部分&lt;/p&gt;
&lt;h2 id=&#34;观察者模式发布订阅模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#观察者模式发布订阅模式&#34;&gt;#&lt;/a&gt; 观察者模式（发布订阅模式）&lt;/h2&gt;
&lt;p&gt;观察者模式，又叫发布订阅模式，是前端中一个非常重要的概念，响应式框架中就利用了这个模式。&lt;/p&gt;
&lt;h3 id=&#34;思路-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路-2&#34;&gt;#&lt;/a&gt; 思路&lt;/h3&gt;
&lt;p&gt;用于定义对象间的一对多的依赖关系，当一个对象发生变化并对外发布消息时，所有依赖它的对象都将得到通知并进行更新。&lt;/p&gt;
&lt;h3 id=&#34;简单实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单实现&#34;&gt;#&lt;/a&gt; 简单实现&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Notify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;subscribers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;subscribers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;handler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;emit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;subscribers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;subscriber&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;subscriber&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; notify &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Notify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;notify&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;emit here&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;notify&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;emit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//emit here&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;策略模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#策略模式&#34;&gt;#&lt;/a&gt; 策略模式&lt;/h2&gt;
&lt;h3 id=&#34;设计思想&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计思想&#34;&gt;#&lt;/a&gt; 设计思想&lt;/h3&gt;
&lt;p&gt;根据语境的不同，使用不同的算法。&lt;strong&gt;就是将对算法的选择和算法的实现相分离开来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;celue.png&#34; alt=&#34;celue&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用场景-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用场景-4&#34;&gt;#&lt;/a&gt; 应用场景&lt;/h3&gt;
&lt;p&gt;将一组相关的算法封装，把实现隐藏起来，灵活扩展。&lt;/p&gt;
&lt;p&gt;我觉得 React 中的 render props 模式也有点策略模式的思想，render props 将数据的获取和渲染职责相分离，可以灵活替换、扩展渲染的组件&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
 ]]></description>
        </item>
    </channel>
</rss>
